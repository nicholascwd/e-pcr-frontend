{"version":3,"sources":["Utils/KeyStorage.js","Utils/Common.js","Utils/PrivateRoute.js","Utils/PublicRoute.js","Screens/Login.js","Screens/Dashboard.js","Screens/SelectPatient.js","Screens/Announcement.js","Utils/EncryptContents.js","Screens/AntTablesForms/RestraintsTable.js","Screens/AntTablesForms/ProgressRecordTable.js","Assets/index.less","Screens/PatientProfile.js","Screens/PDFExport/RestraintsExport.js","Screens/PDFExport/ProgressRecordExport.js","Screens/Forms/RestraintsForm.js","Screens/ResidentsModule/MainList.js","Screens/ResidentsModule/AdmitPatient.js","Screens/Forms/ProgressRecordForm.js","Screens/Enroll.js","Screens/UsersModule/index.js","Screens/UsersModule/AddUser.js","Screens/UsersModule/PasswordReset.js","App.js","reportWebVitals.js","index.js"],"names":["CryptoJS","require","getUser","userStr","localStorage","getItem","JSON","parse","getToken","window","location","pathname","open","token","sessionStorage","removeItem","setAESKeyInSession","key","ciphertext","originalText","AES","decrypt","toString","enc","Utf8","setItem","decryptAESKEY","removeUserSession","PrivateRoute","Component","component","rest","render","props","to","state","from","PublicRoute","useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","loading","setLoading","username","password","error","setError","style","position","top","left","transform","direction","size","width","message","description","type","showIcon","textAlign","placeholder","prefix","UserOutlined","Password","KeyOutlined","shape","onClick","axios","post","process","then","response","user","data","stringify","catch","reponse","status","Dashboard","className","title","padding","history","push","SelectPatient","Text","Typography","options","setOptions","selected","setSelected","useEffect","get","headers","beds","map","el","bed","console","log","onSelect","val","option","filterOption","inputValue","indexOf","virtual","Announcement","useHistory","encryptField","AESKEY","encrypt","encryptObject","decryptField","decryptObject","restraintsColumns","dataIndex","text","date","time","r1","r2","r3","r4","r5","moment","format","progressRecordColumns","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","PatientProfile","patientData","setPatientData","patientError","restraintsSubmissions","setRestraintsSubmissions","add","startOf","endOf","restraintsDatePicker","setRestraintsDatePicker","progressRecordSubmissions","setProgressRecordSubmissions","RangePicker","DatePicker","bedNo","useParams","uuid","formDataPros","formVals","formData","formDataPros2","mobileView","matchMedia","matches","margin","name","NRIC","creationDate","defaultValue","endDate","doc","jsPDF","setFontSize","toDate","tableData","i","length","row","staff","autoTable","startY","head","body","save","restraintsPdfExport","scroll","x","columns","styles","fontSize","progressRecordPdfExport","Option","Select","formItemLayout","labelCol","span","offset","wrapperCol","RestraintsForm","setPatientError","setStaff","submitted","setSubmitted","handleNewFormSamePatient","onFinish","values","dateTime","resident","Item","label","required","Group","htmlType","subTitle","extra","ResidentsModuleMainList","Link","dischargedPatientData","setDischargedPatientData","populateAdmittedResidents","discharge","sorter","onConfirm","onCancel","okText","cancelText","href","columnsDischarged","dataSource","AdmitResident","admitError","setAdmitError","handleBack","toUpperCase","ProgressRecordForm","err","initialValues","Enroll","timeout","UsersModule","userData","setUserData","owasp","config","allowPassphrases","maxLength","minLength","minPhraseLength","minOptionalTestsToPass","AddUser","passwordSecurity","setPasswordSecurity","result","test","requiredTestErrors","email","role","alert","rules","allowClear","ResetPassword","App","authLoading","setAuthLoading","userObject","setUserObject","networkErr","setNetworkErr","Header","Layout","Footer","Sider","Content","minHeight","justify","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","mode","defaultSelectedKeys","icon","FileTextOutlined","SettingOutlined","BellOutlined","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61e21500.chunk.js","sourcesContent":["var CryptoJS = require('crypto-js');\n\nexport const decryptAESKEY = (key) => {\n  let ciphertext = localStorage.getItem('EncryptedSymmmetricKey');\n  let bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  let originalText = bytes.toString(CryptoJS.enc.Utf8);\n  sessionStorage.setItem('AESKEY', originalText);\n};\n","import { decryptAESKEY } from './KeyStorage';\n\n// return the user data from the local storage\nexport const getUser = () => {\n  const userStr = localStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  return null;\n};\n\n// return the token from the local storage\n// sets AES key into the session storage if blank.\\\nexport const getToken = () => {\n  const EncryptedSymmmetricKey = localStorage.getItem('EncryptedSymmmetricKey');\n  if (!EncryptedSymmmetricKey && window.location.pathname !== '/enroll') {\n    window.open('/enroll', '_self');\n  }\n  const token = localStorage.getItem('token');\n  if (token) {\n    const AESKEY = sessionStorage.getItem('AESKEY');\n    if (!AESKEY) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.open('/login', '_self');\n    }\n    return token;\n  } else {\n    return null;\n  }\n};\n\nexport const setAESKeyInSession = (key) => {\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  if (!AESKEY) {\n    decryptAESKEY(key);\n  }\n};\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n\n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('user', JSON.stringify(user));\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getToken } from \"./Common\";\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        getToken() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getToken } from \"./Common\";\n\n// handle the public routes\nfunction PublicRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !getToken() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/dashboard\" }} />\n        )\n      }\n    />\n  );\n}\n\nexport default PublicRoute;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Table, Tag, Space, Input, Alert } from 'antd';\nimport { UserOutlined, KeyOutlined, HomeOutlined } from '@ant-design/icons';\nimport { setAESKeyInSession, setUserSession } from '../Utils/Common';\nimport { useEffect } from 'react';\n\nfunction Login(props) {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n\n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/users/signin`, {\n        username: username.value,\n        password: password.value,\n      })\n      .then((response) => {\n        setLoading(false);\n        setUserSession(response.data.token, response.data.user);\n        setAESKeyInSession(response.data.key);\n        window.open('/select_patient', '_self');\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.reponse && error.response.status === 401)\n          setError(error.response.data.message);\n        else setError('Something went wrong. Please try again later.');\n      });\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <Space direction=\"vertical\" size=\"middle\" style={{ width: '400px' }}>\n        {error ? (\n          <Alert\n            message=\"Login Failed\"\n            description={error}\n            type=\"error\"\n            showIcon\n            style={{ textAlign: 'left' }}\n          />\n        ) : (\n          <></>\n        )}\n\n        <Input\n          {...username}\n          size=\"large\"\n          placeholder=\"Username\"\n          prefix={<UserOutlined />}\n        />\n        <Input.Password\n          {...password}\n          size=\"large\"\n          placeholder=\"Password\"\n          prefix={<KeyOutlined />}\n        />\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          shape=\"round\"\n          onClick={handleLogin}\n          loading={loading}\n          style={{ width: '100%' }}\n        >\n          {loading ? 'Logging In...' : 'Login'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nconst useFormInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return {\n    value,\n    onChange: handleChange,\n  };\n};\n\nexport default Login;\n","import React from 'react';\nimport { getUser, removeUserSession } from '../Utils/Common';\nimport { Button, PageHeader } from 'antd';\nfunction Dashboard(props) {\n  const user = getUser();\n\n  // handle click event of logout button\n  const handleLogout = () => {\n    removeUserSession();\n    window.open('/login', '_self');\n  };\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"Settings\" />\n      <div style={{ padding: '30px' }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            handleLogout();\n          }}\n          key=\"console\"\n        >\n          Logout\n        </Button>\n        <br></br>\n        <br></br>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            props.history.push('/users_module/reset_password/' + user.username);\n          }}\n          key=\"console\"\n        >\n          Change Password\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\nimport { Typography, AutoComplete, Space, Button, PageHeader } from 'antd';\nimport axios from 'axios';\nimport { getToken, removeUserSession } from '../Utils/Common';\n\nfunction SelectPatient(props) {\n  const { Text } = Typography;\n  const [options, setOptions] = useState();\n  const [selected, setSelected] = useState();\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //populate list of admitted residents\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/listAdmitted`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        let beds = response.data;\n        beds.map((el) => {\n          el.value = el.bed;\n          // delete el.bed\n        });\n        console.log(beds);\n        setOptions(beds);\n        //console.log(response.data)\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const onSelect = (val, option) => {\n    setSelected(option.value);\n  };\n\n  function handleSubmit() {\n    // move to this once implemented api versioning props.history.push('/patient_profile/' + selected, '_self');\n    window.open('/patient_profile/' + selected, '_self');\n  }\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"Select Patient\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          <Text>Input Patient Bed</Text>\n\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={options}\n            placeholder=\"Select\"\n            onSelect={(val, option) => onSelect(val, option)}\n            filterOption={(inputValue, option) =>\n              option.value.indexOf(inputValue) !== -1\n            }\n            virtual={false}\n          />\n          {selected && (\n            <div>\n              <p>Selected Bed: {selected}</p>\n              <Button type=\"primary\" onClick={handleSubmit}>\n                Submit\n              </Button>\n            </div>\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default SelectPatient;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PageHeader } from \"antd\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  NavLink,\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport {\n  getToken,\n  getUser,\n  removeUserSession,\n  setUserSession,\n} from \"../Utils/Common\";\n\nfunction Announcement() {\n  const history = useHistory();\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      //   history.push(\"/login\")\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  return (\n    <div>\n      <PageHeader className=\"site-page-header\" title=\"Announcements\" />\n    </div>\n  );\n}\n\nexport default Announcement;\n","const CryptoJS = require('crypto-js');\n\nexport const encryptField = (message) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  return CryptoJS.AES.encrypt(message, AESKEY).toString();\n};\n\nexport const encryptObject = (message) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  return CryptoJS.AES.encrypt(JSON.stringify(message), AESKEY).toString();\n};\n\nexport const decryptField = (ciphertext) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  let bytes = CryptoJS.AES.decrypt(ciphertext, AESKEY);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\nexport const decryptObject = (ciphertext) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  let bytes = CryptoJS.AES.decrypt(JSON.parse(ciphertext), AESKEY);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n","import moment from 'moment-timezone';\nexport const restraintsColumns = [\n  {\n    title: 'Date',\n    key: '_id',\n    dataIndex: 'formVals',\n    // fixed: \"left\",\n    // width: 100,\n    render: (text) => <p>{JSON.parse(text).date}</p>,\n  },\n  {\n    title: 'Time',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text).time}</p>,\n  },\n  {\n    title: 'Applied Correctly',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text).r1}</p>,\n  },\n  {\n    title: 'Comfortable',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text).r2}</p>,\n  },\n  {\n    title: 'Circulation',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text).r3}</p>,\n  },\n  {\n    title: 'ROM',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text).r4}</p>,\n  },\n  {\n    title: 'Skin Checked',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text).r5}</p>,\n  },\n  {\n    title: 'Type of Restraints',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text)['r-restraints-type']}</p>,\n  },\n  {\n    title: 'Remarks',\n    key: '_id',\n    dataIndex: 'formVals',\n    // width: 50,\n    render: (text) => <p>{JSON.parse(text)['r-remarks']}</p>,\n  },\n  {\n    title: 'Staff',\n    key: '_id',\n    dataIndex: 'staff',\n    // width: 50,\n  },\n  {\n    title: 'Submitted D/T',\n    key: '_id',\n    dataIndex: 'creationDate',\n    // width: 50,\n    render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    // fixed: \"right\",\n    // width: 100,\n  },\n];\n","import moment from 'moment-timezone';\nexport const progressRecordColumns = [\n  {\n    title: 'Date',\n    key: '_id',\n    dataIndex: 'formVals',\n    // fixed: 'left',\n    // width: 100,\n    render: (text) => <p>{JSON.parse(text).date}</p>,\n  },\n  {\n    title: 'Time',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).time}</p>,\n  },\n  {\n    title: 'General Condition',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p1}</p>,\n  },\n  {\n    title: 'Mental State',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p2}</p>,\n  },\n  {\n    title: 'Skin Care',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p3}</p>,\n  },\n  {\n    title: 'Hygiene/Bathing',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p4}</p>,\n  },\n  {\n    title: 'Oral Care',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p5}</p>,\n  },\n  {\n    title: 'Feeding',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p6}</p>,\n  },\n  {\n    title: 'Bladder',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p7}</p>,\n  },\n  {\n    title: 'Bowel',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p8}</p>,\n  },\n  {\n    title: 'Mobility',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p9}</p>,\n  },\n  {\n    title: 'Rest at Night',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p10}</p>,\n  },\n  {\n    title: 'Therapy',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p11}</p>,\n  },\n  {\n    title: 'Visited',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text).p12}</p>,\n  },\n  {\n    title: 'Remarks',\n    key: '_id',\n    dataIndex: 'formVals',\n    render: (text) => <p>{JSON.parse(text)['r-remarks']}</p>,\n  },\n  {\n    title: 'Staff',\n    key: '_id',\n    dataIndex: 'staff',\n  },\n  {\n    title: 'Submitted D/T',\n    key: '_id',\n    dataIndex: 'creationDate',\n    render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    // fixed: 'right',\n    // width: 100,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/index.4350924a.less\";","import React, { useEffect, useState } from 'react';\nimport { PageHeader, Space, Button, Table, DatePicker } from 'antd';\n// import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport RCTable from 'rc-table';\n\nimport axios from 'axios';\nimport moment from 'moment-timezone';\n\nimport { getToken, removeUserSession } from '../Utils/Common';\nimport { useParams } from 'react-router';\nimport { decryptField, decryptObject } from '../Utils/EncryptContents';\nimport { restraintsPdfExport } from './PDFExport/RestraintsExport';\nimport { restraintsColumns } from './AntTablesForms/RestraintsTable';\nimport { progressRecordColumns } from './AntTablesForms/ProgressRecordTable';\nimport { progressRecordPdfExport } from './PDFExport/ProgressRecordExport';\nimport '../Assets/index.less';\n\nfunction PatientProfile(props) {\n  const [patientData, setPatientData] = useState();\n  const [patientError, setPatientError] = useState();\n  const [restraintsSubmissions, setRestraintsSubmissions] = useState();\n  const [restraintsDatePicker, setRestraintsDatePicker] = useState([\n    moment().add(-2, 'days').startOf('day'),\n    moment().endOf('day'),\n  ]);\n  const [progressRecordSubmissions, setProgressRecordSubmissions] = useState();\n  const { RangePicker } = DatePicker;\n\n  let { bedNo } = useParams();\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        //for debug\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n    //obtain resident details based on bed from url params\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getByBed`,\n        { bed: bedNo },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setPatientData(response.data[0]);\n      })\n      .catch((error) => {\n        console.log(error);\n        // setPatientError(error.response.data.error);\n      });\n  }, []);\n\n  useEffect(() => {\n    //    //obtain resident restraint's form submission history\n    if (patientData) {\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/forms/restraintsForm/submissionHistory`,\n          {\n            uuid: patientData.uuid,\n            restraintsDatePicker: restraintsDatePicker,\n          },\n          { headers: { token: token } }\n        )\n        .then((response) => {\n          var formDataPros = response.data;\n          formDataPros.map((el) => {\n            el.formVals = decryptObject(el.formData);\n          });\n          setRestraintsSubmissions(formDataPros);\n          console.log(formDataPros);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/forms/progressRecordForm/submissionHistory`,\n          {\n            uuid: patientData.uuid,\n            restraintsDatePicker: restraintsDatePicker,\n          },\n          { headers: { token: token } }\n        )\n        .then((response) => {\n          var formDataPros2 = response.data;\n          formDataPros2.map((el) => {\n            el.formVals = decryptObject(el.formData);\n          });\n          setProgressRecordSubmissions(formDataPros2);\n          // console.log(formDataPros2)\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [patientData, restraintsDatePicker]);\n\n  const mql = window.matchMedia('(max-width: 600px)');\n\n  let mobileView = mql.matches;\n\n  function handleClickRestraints() {\n    props.history.push('/forms/restraints_form/' + patientData.uuid, '_self');\n  }\n\n  function handleClickProgressRecord() {\n    props.history.push(\n      '/forms/progress_record_form/' + patientData.uuid,\n      '_self'\n    );\n  }\n\n  function handleBack() {\n    props.history.push('/select_patient', '_self');\n  }\n  function generateRestraintsPDF() {\n    restraintsPdfExport(patientData, restraintsSubmissions);\n  }\n  function generateProgressRecordPDF() {\n    progressRecordPdfExport(patientData, progressRecordSubmissions);\n  }\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back to patient selector\n      </Button>\n\n      <PageHeader className=\"site-page-header\" title=\"Patient Profile\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {patientData && (\n            <>\n              <h4>\n                Bed: {patientData.bed}\n                <br></br>\n                Name: {decryptField(patientData.name)}\n                <br></br>\n                NRIC: {decryptField(patientData.NRIC)}\n                <br></br>\n                Profile Creation:{' '}\n                {moment(patientData.creationDate).format(\n                  'MMMM Do YYYY, h:mm:ss a'\n                )}\n                <br></br>\n                Status: {patientData.status}\n              </h4>\n              <p>Identifier: {patientData.uuid}</p>\n\n              <Button type=\"primary\" onClick={handleClickRestraints}>\n                Submit Restraints Form\n              </Button>\n              <Button type=\"primary\" onClick={handleClickProgressRecord}>\n                Submit Progress Record Form\n              </Button>\n\n              <br></br>\n              <br></br>\n              <Space direction=\"vertical\" size={12}>\n                <span>Select Date for Reports below</span>\n                <RangePicker\n                  defaultValue={[\n                    moment().add(-2, 'days').startOf('day'),\n                    moment().startOf('day'),\n                  ]}\n                  onChange={(e) => {\n                    let endDate = e[1];\n                    endDate = moment(endDate).endOf('day');\n                    console.log(moment(endDate).format());\n                    setRestraintsDatePicker([e[0], endDate]);\n                  }}\n                />\n              </Space>\n              <h3>Restraints Form submission history</h3>\n              <Button\n                style={{ margin: '10px' }}\n                onClick={generateRestraintsPDF}\n                type=\"default\"\n              >\n                Export Restraints Data\n              </Button>\n\n              <div className=\"pcf\">\n                <RCTable\n                  style={{ width: mobileView ? 400 : 1500 }}\n                  scroll={{ x: 300 }}\n                  columns={restraintsColumns}\n                  className=\"table\"\n                  data={restraintsSubmissions}\n                />\n              </div>\n              {/* <div className=\"overflowTable\">\n                <Table\n                  columns={restraintsColumns}\n                  dataSource={restraintsSubmissions}\n                  className=\"preview-batch-table\"\n                  scroll={{ x: 'max-content' }}\n                />\n              </div> */}\n\n              {/* {restraintsSubmissions && (\n                <div className=\"overflowTable\">\n                  <BootstrapTable\n                    pagination={paginationFactory()}\n                    wrapperClasses=\"table-responsive\"\n                    keyField=\"id\"\n                    data={restraintsSubmissions}\n                    columns={restraintsColumns}\n                  />\n                </div>\n              )} */}\n\n              <h3>Progress Record Form submission history</h3>\n              <Button\n                style={{ margin: '10px' }}\n                onClick={generateProgressRecordPDF}\n                type=\"default\"\n              >\n                Export Progress Record Data\n              </Button>\n\n              <div className=\"pcf\">\n                <RCTable\n                  style={{ width: mobileView ? 400 : 1500 }}\n                  scroll={{ x: 300 }}\n                  columns={progressRecordColumns}\n                  data={progressRecordSubmissions}\n                  className=\"table\"\n                />\n              </div>\n              {/* <div className=\"overflowTable\">\n                <Table\n                  columns={progressRecordColumns}\n                  dataSource={progressRecordSubmissions}\n                  // scroll={{ x: 'max-content' }}\n                  scroll={{ x: true }}\n                  className=\"preview-batch-table\"\n                />\n              </div> */}\n              {/* {progressRecordSubmissions && (\n                <div className=\"overflowTable\">\n                  <BootstrapTable\n                    pagination={paginationFactory()}\n                    wrapperClasses=\"table-responsive\"\n                    keyField=\"id\"\n                    data={progressRecordSubmissions}\n                    columns={progressRecordColumns}\n                  />\n                </div>\n              )} */}\n            </>\n          )}\n\n          {patientError && <p>{patientError}</p>}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default PatientProfile;\n","import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport moment from 'moment-timezone';\nimport { decryptField } from '../../Utils/EncryptContents';\nexport const restraintsPdfExport = (patientData, restraintsSubmissions) => {\n  const doc = new jsPDF('landscape');\n\n  doc.text('Restraints Report', 5, 15);\n  doc.setFontSize(10);\n  doc.text('Resident Name: ' + decryptField(patientData.name), 5, 30);\n  doc.text('Resident NRIC: ' + decryptField(patientData.NRIC), 5, 35);\n  doc.text('Report Generated: ' + moment().toDate(), 5, 40);\n\n  let tableData = [];\n\n  for (let i = 0; i < restraintsSubmissions.length; i++) {\n    let row = [];\n    console.log(JSON.parse(restraintsSubmissions[i].formVals).time);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).date);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).time);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r1);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r2);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r3);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r4);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r5);\n    row.push(\n      JSON.parse(restraintsSubmissions[i].formVals)['r-restraints-type']\n    );\n    row.push(JSON.parse(restraintsSubmissions[i].formVals)['r-remarks']);\n    row.push(restraintsSubmissions[i].staff);\n    tableData.push(row);\n  }\n\n  doc.autoTable({\n    startY: 50,\n    head: [\n      [\n        'Date',\n        'Time',\n        'Applied Correctly',\n        'Comfortable',\n        'Circulation',\n        'ROM',\n        'Skin Checked',\n        'Restraints Type',\n        'Remarks',\n        'Staff Signature',\n      ],\n    ],\n    body: tableData,\n  });\n\n  doc.save('table.pdf');\n};\n","import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport moment from 'moment-timezone';\nimport { decryptField } from '../../Utils/EncryptContents';\nexport const progressRecordPdfExport = (\n  patientData,\n  progressRecordSubmissions\n) => {\n  const doc = new jsPDF('landscape');\n\n  doc.text('Progress Record Report', 5, 15);\n  doc.setFontSize(10);\n  doc.text('Resident Name: ' + decryptField(patientData.name), 5, 30);\n  doc.text('Resident NRIC: ' + decryptField(patientData.NRIC), 5, 35);\n  doc.text('Report Generated: ' + moment().toDate(), 5, 40);\n  doc.setFontSize(7);\n\n  let tableData = [];\n\n  for (let i = 0; i < progressRecordSubmissions.length; i++) {\n    let row = [];\n    console.log(JSON.parse(progressRecordSubmissions[i].formVals));\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).date);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).time);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p1);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p2);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p3);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p4);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p5);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p6);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p7);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p8);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p9);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p10);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p11);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p12);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals)['r-remarks']);\n    row.push(progressRecordSubmissions[i].staff);\n    tableData.push(row);\n  }\n\n  doc.autoTable({\n    startY: 50,\n    styles: { fontSize: 7 },\n    head: [\n      [\n        'Date',\n        'Time',\n        'General Condition',\n        'Mental State\t',\n        'Skin Care',\n        'Hygiene/Bathing',\n        'Oral Care',\n        'Feeding',\n        'Bladder',\n        'Bowel',\n        'Mobility',\n        'Rest at Night',\n        'Therapy',\n        'Visited',\n        'Remarks',\n        'Staff Signature',\n      ],\n    ],\n    body: tableData,\n  });\n\n  doc.save('table.pdf');\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  PageHeader,\n  Form,\n  Select,\n  Radio,\n  Button,\n  Result,\n  Space,\n  Input,\n  DatePicker,\n} from 'antd';\nimport moment from 'moment-timezone';\nimport axios from 'axios';\nimport { getToken, getUser, removeUserSession } from '../../Utils/Common';\nimport { useParams } from 'react-router';\nimport { decryptField, encryptObject } from '../../Utils/EncryptContents';\n\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 30,\n    offset: 0,\n  },\n  wrapperCol: {\n    span: 50,\n  },\n};\n\nfunction RestraintsForm(props) {\n  const [patientData, setPatientData] = useState();\n  const [patientError, setPatientError] = useState();\n  const [staff, setStaff] = useState();\n  const [submitted, setSubmitted] = useState(false);\n\n  let { uuid } = useParams();\n\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        setStaff(getUser().username);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //obtain resident details based on bed from url params\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getByUUID`,\n        { uuid: uuid },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setPatientData(response.data[0]);\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setPatientError(error.response.data.error);\n      });\n  }, []);\n\n  const onFinish = (values) => {\n    const dateTime = values['date'];\n    values['date'] = values['date'].format('YYYY-MM-DD');\n    console.log('Received values of form: ', JSON.stringify(values));\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/forms/restraintsForm/submit`,\n        {\n          resident: uuid,\n          formData: encryptObject(values),\n          bed: patientData.bed,\n          dateTime: dateTime,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        //console.log(response.data[0])\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setPatientError(error.response.data.error);\n      });\n  };\n  function handleNewPatient() {\n    props.history.push('/select_patient/', '_self');\n  }\n  function handleNewFormSamePatient() {\n    props.history.push('/patient_profile/' + patientData.bed, '_self');\n  }\n\n  return (\n    <>\n      <Button\n        style={{ margin: '10px' }}\n        onClick={handleNewFormSamePatient}\n        type=\"default\"\n      >\n        Back to patient profile\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Restraints Form\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {patientData && staff && !submitted && (\n            <>\n              <h3>\n                Bed: {patientData.bed}\n                <br></br>\n                Name: {decryptField(patientData.name)}\n                <br></br>\n                NRIC: {decryptField(patientData.NRIC)}\n                <br></br>\n                Profile Creation:{' '}\n                {moment(patientData.creationDate).format(\n                  'MMMM Do YYYY, h:mm:ss a'\n                )}\n                <br></br>\n                Status: {patientData.status}\n              </h3>\n              <p>Identifier: {patientData.uuid}</p>\n\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"date\" label=\"Date\" required>\n                  <DatePicker />\n                </Form.Item>\n\n                <Form.Item name=\"time\" label=\"Time\" required>\n                  <Select placeholder=\"Select time of check\" virtual={false}>\n                    <Option value=\"0000\">12am midnight</Option>\n                    <Option value=\"0200\">2am</Option>\n                    <Option value=\"0400\">4am</Option>\n                    <Option value=\"0600\">6am</Option>\n                    <Option value=\"0800\">8am</Option>\n                    <Option value=\"1000\">10am</Option>\n                    <Option value=\"1200\">12pm noon</Option>\n                    <Option value=\"1400\">2pm</Option>\n                    <Option value=\"1600\">4pm</Option>\n                    <Option value=\"1800\">6pm</Option>\n                    <Option value=\"2000\">8pm</Option>\n                    <Option value=\"2200\">10pm</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item name=\"r1\" label=\"Restraints applied correctly\">\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  name=\"r2\"\n                  label=\"Body & limbs in comfortable position\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  name=\"r3\"\n                  label=\"(Restrained Extremities) Adequate circulation\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  name=\"r4\"\n                  label=\"(Restrained Extremities) Adequate ROM\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"r5\" label=\"Skin integrity checked\">\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item name=\"r-restraints-type\" label=\"Type of Restraints\">\n                  <Input />\n                </Form.Item>\n                <Form.Item name=\"r-remarks\" label=\"Remarks\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"staff\" label=\"Submitted by\">\n                  <span className=\"ant-form-text\">{staff}</span>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </>\n          )}\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"You may view the submitted data on patient profile page\"\n              extra={[\n                <Button type=\"primary\" onClick={handleNewPatient} key=\"console\">\n                  Select new patient\n                </Button>,\n                <Button key=\"buy\" onClick={handleNewFormSamePatient}>\n                  Submit new form for same patient\n                </Button>,\n              ]}\n            />\n          )}\n\n          {patientError && <p>{patientError}</p>}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default RestraintsForm;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader } from 'antd';\nimport { Typography, Table, Space, Button, Popconfirm, message } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport {\n  getToken,\n  getUser,\n  removeUserSession,\n  setUserSession,\n} from '../../Utils/Common';\nimport { decryptField } from '../../Utils/EncryptContents';\n\nfunction ResidentsModuleMainList(props) {\n  const { Text, Link } = Typography;\n  const [patientData, setPatientData] = useState();\n  const [dischargedPatientData, setDischargedPatientData] = useState();\n\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    populateAdmittedResidents();\n    populateDischargedResidents();\n  }, []);\n\n  function populateAdmittedResidents() {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/listAdmittedFullDetails`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        let beds = response.data;\n        console.log(beds);\n        beds.map((el) => {\n          el.name = decryptField(el.name);\n          el.NRIC = decryptField(el.NRIC);\n        });\n        //console.log(response.data)\n        setPatientData(beds);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  function populateDischargedResidents() {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/listDischargedFullDetails`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        let beds = response.data;\n        console.log(beds);\n        beds.map((el) => {\n          el.name = decryptField(el.name);\n          el.NRIC = decryptField(el.NRIC);\n        });\n        //console.log(response.data)\n        setDischargedPatientData(beds);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function discharge(uuid) {\n    //populate list of admitted residents\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/discharge`,\n        { uuid: uuid },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        populateAdmittedResidents();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function onChange(sorter) {\n    console.log('params', sorter);\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      key: '_id',\n      dataIndex: 'name',\n    },\n    {\n      title: 'NRIC',\n      key: '_id',\n      dataIndex: 'NRIC',\n    },\n    {\n      title: 'Bed',\n      key: '_id',\n      dataIndex: 'bed',\n    },\n    {\n      title: 'Initial admission',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push('/patient_profile/' + data.bed);\n            }}\n          >\n            View Patient\n          </a>\n          <Popconfirm\n            title=\"Are you sure to discharge this patient?\"\n            onConfirm={() => discharge(data.uuid)}\n            onCancel={''}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <a href=\"#\">Discharge</a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  const columnsDischarged = [\n    {\n      title: 'Name',\n      key: '_id',\n      dataIndex: 'name',\n    },\n    {\n      title: 'NRIC',\n      key: '_id',\n      dataIndex: 'NRIC',\n    },\n    {\n      title: 'Bed',\n      key: '_id',\n      dataIndex: 'bed',\n    },\n    {\n      title: 'Initial admission',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push('/patient_profile/' + data.bed);\n            }}\n          >\n            View Patient\n          </a>\n          <Popconfirm\n            title=\"Feature in progress.\"\n            onConfirm={() => discharge(data.uuid)}\n            onCancel={''}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <a href=\"#\">Readmit</a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"Residents Module\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          <Button\n            onClick={() => {\n              props.history.push('/residents_module/admit');\n            }}\n          >\n            Admit New Patient\n          </Button>\n          {/* <Text>Input Patient Bed</Text> */}\n          <h3>Table of Admitted Patients</h3>\n          <Table\n            columns={columns}\n            dataSource={patientData}\n            onChange={onChange}\n          />\n          <br></br>\n          <h3>\n            Table of Discharged Patients (Re-admission function not implemented\n            yet)\n          </h3>\n          <Table\n            columns={columnsDischarged}\n            dataSource={dischargedPatientData}\n            onChange={onChange}\n          />\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default ResidentsModuleMainList;\n","import React, { useEffect, useState } from 'react';\nimport { Space, Button, Input, Result, Alert, PageHeader, Form } from 'antd';\nimport axios from 'axios';\nimport { getToken, removeUserSession } from '../../Utils/Common';\nimport { encryptField } from '../../Utils/EncryptContents';\n\nfunction AdmitResident(props) {\n  const token = getToken();\n  const [submitted, setSubmitted] = useState(false);\n  const [admitError, setAdmitError] = useState();\n  const formItemLayout = {\n    labelCol: {\n      span: 30,\n      offset: 0,\n    },\n    wrapperCol: {\n      span: 50,\n    },\n  };\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  function handleBack() {\n    props.history.push('/residents_module');\n  }\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/admit`,\n        {\n          bed: values.bed.toUpperCase(),\n          name: encryptField(values.name.toUpperCase()),\n          NRIC: encryptField(values.NRIC.toUpperCase()),\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        setAdmitError(null);\n        //console.log(response.data[0])\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setAdmitError(error.response.data.message);\n        //   setPatientError(error.response.data.error)\n      });\n  };\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Admit Patient\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {admitError && (\n            <>\n              <Alert\n                message=\"Error\"\n                description={admitError}\n                type=\"error\"\n                showIcon\n              />\n            </>\n          )}\n\n          {!submitted && (\n            <div>\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"name\" label=\"Resident Name\" required>\n                  <Input required />\n                </Form.Item>\n                <Form.Item name=\"NRIC\" label=\"NRIC\" required>\n                  <Input required />\n                </Form.Item>\n                <Form.Item name=\"bed\" label=\"Resident Bed\" required>\n                  <Input required />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"Patient Admitted\"\n              extra={[\n                <Button type=\"primary\" onClick={handleBack} key=\"console\">\n                  Back\n                </Button>,\n              ]}\n            />\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default AdmitResident;\n","import React, { useEffect, useState } from 'react';\nimport {\n  PageHeader,\n  Form,\n  Select,\n  Radio,\n  Button,\n  Result,\n  Space,\n  Input,\n  DatePicker,\n  Col,\n  Checkbox,\n} from 'antd';\nimport moment from 'moment-timezone';\nimport axios from 'axios';\nimport { getToken, getUser, removeUserSession } from '../../Utils/Common';\nimport { useParams } from 'react-router';\nimport { decryptField, encryptObject } from '../../Utils/EncryptContents';\n\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 30,\n    offset: 0,\n  },\n  wrapperCol: {\n    span: 50,\n  },\n};\n\nfunction ProgressRecordForm(props) {\n  const [patientData, setPatientData] = useState();\n  const [patientError, setPatientError] = useState();\n  const [staff, setStaff] = useState();\n  const [submitted, setSubmitted] = useState(false);\n\n  let { uuid } = useParams();\n\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        //console.log(response)\n        setStaff(getUser().username);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //obtain resident details based on bed from url params\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getByUUID`,\n        { uuid: uuid },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setPatientData(response.data[0]);\n        //console.log(response.data[0])\n      })\n      .catch((err) => {\n        console.log(err);\n        // setPatientError(error.response.data.error);\n      });\n  }, []);\n\n  const onFinish = (values) => {\n    const dateTime = values['date'];\n    values['date'] = values['date'].format('YYYY-MM-DD');\n    console.log('Received values of form: ', values);\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/forms/progressRecordForm/submit`,\n        {\n          resident: uuid,\n          formData: encryptObject(values),\n          dateTime: dateTime,\n          bed: patientData.bed,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        //console.log(response.data[0])\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setPatientError(error.response.data.error);\n      });\n  };\n  function handleNewPatient() {\n    props.history.push('/select_patient/', '_self');\n  }\n  function handleNewFormSamePatient() {\n    props.history.push('/patient_profile/' + patientData.bed, '_self');\n  }\n\n  return (\n    <>\n      <Button\n        style={{ margin: '10px' }}\n        onClick={handleNewFormSamePatient}\n        type=\"default\"\n      >\n        Back to patient profile\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Progress Record Form\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {patientData && staff && !submitted && (\n            <>\n              <h3>\n                Bed: {patientData.bed}\n                <br></br>\n                Name: {decryptField(patientData.name)}\n                <br></br>\n                NRIC: {decryptField(patientData.NRIC)}\n                <br></br>\n                Profile Creation:{' '}\n                {moment(patientData.creationDate).format(\n                  'MMMM Do YYYY, h:mm:ss a'\n                )}\n                <br></br>\n                Status: {patientData.status}\n              </h3>\n              <p>Identifier: {patientData.uuid}</p>\n\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n                initialValues={\n                  {\n                    // [\"p1\"]: \"Satisfactory\" ,\n                    // [\"p2\"]: \"Oriented\",\n                    // [\"p3\"]: \"Intact\",\n                    // [\"p4\"]: \"Self\",\n                    // [\"p5\"]: \"Self\",\n                    // [\"p6\"]: \"Self\",\n                    // [\"p7\"]: \"Continent\",\n                    // [\"p8\"]: \"Bowel Opened\",\n                    // [\"p9\"]: \"Ambulant\",\n                    // [\"p10\"]: \"Good\",\n                    // [\"p11\"]: \"Active Exercise\",\n                    // [\"p12\"]: \"No\",\n                  }\n                }\n              >\n                <Form.Item name=\"date\" label=\"Date\" required>\n                  <DatePicker />\n                </Form.Item>\n\n                <Form.Item name=\"time\" label=\"Time\" required>\n                  <Select placeholder=\"Select time of check\" virtual={false}>\n                    <Option value=\"ND\">ND</Option>\n                    <Option value=\"AM\">AM</Option>\n                    <Option value=\"PM\">PM</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item name=\"p1\" label=\"General Condition\">\n                  <Radio.Group>\n                    <Radio value=\"Satisfactory\">Satisfactory</Radio>\n                    <Radio value=\"Unwell\">Unwell</Radio>\n                    <Radio value=\"Poor\">Poor</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p2\" label=\"Mental State\">\n                  <Radio.Group>\n                    <Radio value=\"Oriented\">Oriented</Radio>\n                    <Radio value=\"Confused\">Confused</Radio>\n                    <Radio value=\"Behavioural Problem\">\n                      Behavioural Problem\n                    </Radio>\n                    <Radio value=\"Uncommunicative\">Uncommunicative</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p3\" label=\"Skin Care\">\n                  <Radio.Group>\n                    <Radio value=\"Intact\">Intact</Radio>\n                    <Radio value=\"Impaired/Rashes\">Impaired/Rashes</Radio>\n                    <Radio value=\"Wound Care\">Wound Care</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p4\" label=\"Hygiene/Bathing\">\n                  <Radio.Group>\n                    <Radio value=\"Self\">Self</Radio>\n                    <Radio value=\"Assisted Bath\">Assisted Bath</Radio>\n                    <Radio value=\"Bed Bath\">Bed Bath</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p5\" label=\"Oral Care\">\n                  <Radio.Group>\n                    <Radio value=\"Self\">Self</Radio>\n                    <Radio value=\"Assisted\">Assisted</Radio>\n                    <Radio value=\"Totally Dependent\">Totally Dependent</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p6\" label=\"Feeding\">\n                  <Radio.Group>\n                    <Radio value=\"Self\">Self</Radio>\n                    <Radio value=\"Assisted\">Assisted</Radio>\n                    <Radio value=\"NGT/PEG\">NGT/PEG</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p7\" label=\"Bladder\">\n                  <Radio.Group>\n                    <Radio value=\"Continent\">Continent</Radio>\n                    <Radio value=\"Incontinent(Diaper)\">\n                      Incontinent(Diaper)\n                    </Radio>\n                    <Radio value=\"IDC/IMC/SPC\">IDC/IMC/SPC</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p8\" label=\"Bowel\">\n                  <Radio.Group>\n                    <Radio value=\"Bowel Opened\">Bowel Opened</Radio>\n                    <Radio value=\"Bowel Not Opened\">Bowel Not Opened</Radio>\n                    <Radio value=\"Continent\">Continent</Radio>\n                    <Radio value=\"Incontinent (Diaper)\">\n                      Incontinent (Diaper)\n                    </Radio>\n                    <Radio value=\"Colostomy Care\">Colostomy Care</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p9\" label=\"Mobility\">\n                  <Checkbox.Group>\n                    <Checkbox value=\"Ambulant\">Ambulant</Checkbox>\n                    <Checkbox value=\"Requires Wheelchair\">\n                      Requires Wheelchair\n                    </Checkbox>\n                    <Checkbox value=\"Requires Walking Aides\">\n                      Requires Walking Aides\n                    </Checkbox>\n                    <Checkbox value=\"Requires 2hrly Turning\">\n                      Requires 2hrly Turning\n                    </Checkbox>\n                  </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"p10\" label=\"Rest During Night\">\n                  <Radio.Group>\n                    <Radio value=\"Good\">Good</Radio>\n                    <Radio value=\"Restless/Interrupted\">\n                      Restless/Interrupted\n                    </Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p11\" label=\"Therapy\">\n                  <Radio.Group>\n                    <Radio value=\"Active Exercise\">Active Exercise</Radio>\n                    <Radio value=\"Passive Exercise\">Passive Exercise</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p12\" label=\"Visited by Relatives/Friend\">\n                  <Radio.Group>\n                    <Radio value=\"Yes\">Yes</Radio>\n                    <Radio value=\"No\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item name=\"r-remarks\" label=\"Remarks\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"staff\" label=\"Submitted by\">\n                  <span className=\"ant-form-text\">{staff}</span>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </>\n          )}\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"You may view the submitted data on patient profile page\"\n              extra={[\n                <Button type=\"primary\" onClick={handleNewPatient} key=\"console\">\n                  Select new patient\n                </Button>,\n                <Button key=\"buy\" onClick={handleNewFormSamePatient}>\n                  Submit new form for same patient\n                </Button>,\n              ]}\n            />\n          )}\n\n          {patientError && <p>{patientError}</p>}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default ProgressRecordForm;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Space, Input, Alert } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { getToken } from '../Utils/Common';\n\nfunction Enroll(props) {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const token = getToken();\n    if (\n      !token &&\n      window.location.pathname !== '/login' &&\n      window.location.pathname !== '/enroll'\n    ) {\n      // history.push(\"/login\")\n      window.open('/login', '_self');\n      //console.log(window.location.pathname)\n      return;\n    }\n  }, []);\n\n  // handle button click of login form\n  const handleEnroll = () => {\n    setError(null);\n    setLoading(true);\n    axios\n      .get('https://go.lentorresidence.com/' + username.value, {\n        timeout: 1000,\n      })\n      .then((response) => {\n        console.log(response.data);\n        localStorage.setItem('EncryptedSymmmetricKey', response.data);\n        window.open('/login', '_self');\n      })\n      .catch((err) => {\n        setLoading(false);\n        if (err.reponse && err.response.status === 401)\n          setError(err.response.data.message);\n        else setError('Enrollment Key Invalid. Please try again.');\n      });\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <Space direction=\"vertical\" size=\"middle\" style={{ width: '400px' }}>\n        {error ? (\n          <Alert\n            message=\"Login Failed\"\n            description={error}\n            type=\"error\"\n            showIcon\n            style={{ textAlign: 'left' }}\n          />\n        ) : (\n          <></>\n        )}\n        <h4>Enrollment Secret</h4>\n        <p>Contact admin to assist with keying in enrollment secret</p>\n        <Input\n          {...username}\n          size=\"large\"\n          placeholder=\"Enrollment Secret\"\n          type=\"password\"\n          prefix={<UserOutlined />}\n        />\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          shape=\"round\"\n          onClick={handleEnroll}\n          loading={loading}\n          style={{ width: '100%' }}\n        >\n          {loading ? 'Logging In...' : 'Login'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nconst useFormInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return {\n    value,\n    onChange: handleChange,\n  };\n};\n\nexport default Enroll;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader } from 'antd';\nimport { Typography, Table, Space, Button, Input } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { getToken, removeUserSession } from '../../Utils/Common';\n\nfunction UsersModule(props) {\n  const [userData, setUserData] = useState();\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //populate list of admitted residents\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/users/listStaff`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setUserData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  function onChange(sorter) {\n    console.log('params', sorter);\n  }\n\n  const columns = [\n    {\n      title: 'Username',\n      key: '_id',\n      dataIndex: 'username',\n    },\n    {\n      title: 'Email',\n      key: '_id',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Role',\n      key: '_id',\n      dataIndex: 'role',\n    },\n    {\n      title: 'Date Created',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push(\n                '/users_module/reset_password/' + data.username\n              );\n            }}\n          >\n            Reset Password\n          </a>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"User Management Module\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          <Button\n            onClick={() => {\n              props.history.push('/users_module/addUser');\n            }}\n          >\n            Add new Staff\n          </Button>\n          <h3>Registed Staff List</h3>\n          <Table columns={columns} dataSource={userData} onChange={onChange} />\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default UsersModule;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader, Form, Select } from 'antd';\nimport { Space, Button, Input, Result, Alert } from 'antd';\nimport axios from 'axios';\nvar owasp = require('owasp-password-strength-test');\nimport { getToken, removeUserSession } from '../../Utils/Common';\n\nowasp.config({\n  allowPassphrases: false,\n  maxLength: 128,\n  minLength: 10,\n  minPhraseLength: 20,\n  minOptionalTestsToPass: 7,\n});\n\nfunction AddUser(props) {\n  const token = getToken();\n  const [submitted, setSubmitted] = useState(false);\n  const [admitError, setAdmitError] = useState();\n  const [passwordSecurity, setPasswordSecurity] = useState();\n\n  const useFormInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = (e) => {\n      setValue(e.target.value);\n      let result = owasp.test(e.target.value);\n      setPasswordSecurity(result.requiredTestErrors);\n    };\n    return {\n      value,\n      onChange: handleChange,\n    };\n  };\n  const password = useFormInput('');\n  const formItemLayout = {\n    labelCol: {\n      span: 30,\n      offset: 0,\n    },\n    wrapperCol: {\n      span: 50,\n    },\n  };\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  function handleBack() {\n    props.history.push('/users_module');\n  }\n\n  const onFinish = (values) => {\n    console.log(passwordSecurity);\n    console.log(passwordSecurity.length);\n    if (passwordSecurity.length !== 0) {\n      alert('Password complexity requirements not met');\n      return;\n    }\n\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/users/register`,\n        {\n          username: values.username.toUpperCase(),\n          password: values.password,\n          email: values.email,\n          role: values.role,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        setAdmitError(null);\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setAdmitError(error.response.data.message);\n      });\n  };\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Add Staff User\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {admitError && (\n            <>\n              <Alert\n                message=\"Error\"\n                description={admitError}\n                type=\"error\"\n                showIcon\n              />\n            </>\n          )}\n\n          {!submitted && (\n            <div>\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"username\" label=\"Username\" required>\n                  <Input required />\n                </Form.Item>\n                <Form.Item name=\"password\" label=\"Password\" required>\n                  <Input {...password} type=\"password\" required />\n                </Form.Item>\n                <p>{passwordSecurity}</p>\n                <Form.Item name=\"email\" label=\"Email Address\" required>\n                  <Input type=\"email\" required />\n                </Form.Item>\n                <Form.Item\n                  name=\"role\"\n                  label=\"Role\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder=\"Select User Role\" allowClear>\n                    <Option value=\"restricted\">Restricted (Staff)</Option>\n                    <Option value=\"full\">Full (Admin)</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"Staff Account Created\"\n              extra={[\n                <Button type=\"primary\" onClick={handleBack} key=\"console\">\n                  Back\n                </Button>,\n              ]}\n            />\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default AddUser;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader, Form, Select } from 'antd';\nimport { Space, Button, Input, Result, Alert } from 'antd';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nvar owasp = require('owasp-password-strength-test');\nimport { getToken, removeUserSession } from '../../Utils/Common';\n\nowasp.config({\n  allowPassphrases: false,\n  maxLength: 128,\n  minLength: 10,\n  minPhraseLength: 20,\n  minOptionalTestsToPass: 7,\n});\n\nfunction ResetPassword(props) {\n  const token = getToken();\n  const { username } = useParams();\n  const [submitted, setSubmitted] = useState(false);\n  const [admitError, setAdmitError] = useState();\n  const [passwordSecurity, setPasswordSecurity] = useState();\n\n  const useFormInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = (e) => {\n      setValue(e.target.value);\n      let result = owasp.test(e.target.value);\n      setPasswordSecurity(result.requiredTestErrors);\n    };\n    return {\n      value,\n      onChange: handleChange,\n    };\n  };\n  const password = useFormInput('');\n  const formItemLayout = {\n    labelCol: {\n      span: 30,\n      offset: 0,\n    },\n    wrapperCol: {\n      span: 50,\n    },\n  };\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  function handleBack() {\n    props.history.push('/');\n  }\n\n  const onFinish = (values) => {\n    if (passwordSecurity.length !== 0) {\n      alert('Password complexity requirements not met');\n      return;\n    }\n\n    //submit password reset\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/users/resetPassword`,\n        {\n          username: username,\n          password: values.password,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        setAdmitError(null);\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setAdmitError(error.response.data.message);\n      });\n  };\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Reset Password\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {admitError && (\n            <>\n              <Alert\n                message=\"Error\"\n                description={admitError}\n                type=\"error\"\n                showIcon\n              />\n            </>\n          )}\n\n          {!submitted && (\n            <div>\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"password\" label=\"Password\" required>\n                  <Input {...password} type=\"password\" required />\n                </Form.Item>\n                <p>{passwordSecurity}</p>\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"Password reset successful\"\n              extra={[\n                <Button type=\"primary\" onClick={handleBack} key=\"console\">\n                  Back\n                </Button>,\n              ]}\n            />\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default ResetPassword;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, useHistory } from 'react-router-dom';\nimport { Layout, Menu, Row, Alert, Col, Avatar } from 'antd';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport {\n  FileTextOutlined,\n  SettingOutlined,\n  BellOutlined,\n} from '@ant-design/icons';\nimport axios from 'axios';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { getToken, getUser, removeUserSession } from './Utils/Common';\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport Login from './Screens/Login';\nimport Dashboard from './Screens/Dashboard';\nimport SelectPatient from './Screens/SelectPatient';\nimport Announcement from './Screens/Announcement';\nimport PatientProfile from './Screens/PatientProfile';\nimport RestraintsForm from './Screens/Forms/RestraintsForm';\nimport ResidentsModuleMainList from './Screens/ResidentsModule/MainList';\nimport AdmitResident from './Screens/ResidentsModule/AdmitPatient';\nimport ProgressRecordForm from './Screens/Forms/ProgressRecordForm';\nimport Enroll from './Screens/Enroll';\nimport UsersModule from './Screens/UsersModule';\nimport AddUser from './Screens/UsersModule/AddUser';\nimport ResetPassword from './Screens/UsersModule/PasswordReset';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n  const [userObject, setUserObject] = useState({ username: null });\n  const [networkErr, setNetworkErr] = useState(false);\n  const { Header, Footer, Sider, Content } = Layout;\n  const history = useHistory();\n  const user = getUser();\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/networkTest`, { timeout: 3000 })\n      .then((response) => {\n        console.log('IP Whitelisted');\n        setNetworkErr(false);\n      })\n      .catch((error) => {\n        setNetworkErr(true);\n      });\n\n    const token = getToken();\n    if (\n      !token &&\n      window.location.pathname !== '/login' &&\n      window.location.pathname !== '/enroll'\n    ) {\n      window.open('/login', '_self');\n      return;\n    }\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`,\n        { timeout: 4000 }\n      )\n      .then((response) => {\n        setAuthLoading(false);\n        setUserObject(user);\n      })\n      .catch((error) => {\n        removeUserSession();\n        setAuthLoading(false);\n      });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Row justify=\"end\">\n            {userObject.username != null && (\n              <>\n                <Col span={1}>\n                  {<Avatar size={40}>{userObject.username}</Avatar>}\n                </Col>\n                <Col span={1}></Col>\n              </>\n            )}\n          </Row>\n        </Header>\n        <Layout>\n          {window.location.pathname !== '/login' ? (\n            <>\n              <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={(broken) => {\n                  console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                  console.log(collapsed, type);\n                }}\n              >\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                  <Menu.Item\n                    key=\"1\"\n                    icon={<FileTextOutlined />}\n                    onClick={() => history.push('/select_patient')}\n                  >\n                    Forms\n                  </Menu.Item>\n                  <Menu.Item\n                    key=\"2\"\n                    icon={<SettingOutlined />}\n                    onClick={() => history.push('/residents_module')}\n                  >\n                    Residents Module\n                  </Menu.Item>\n                  {userObject.role === 'full' && (\n                    <Menu.Item\n                      key=\"3\"\n                      icon={<SettingOutlined />}\n                      onClick={() => history.push('/users_module')}\n                    >\n                      Users Module\n                    </Menu.Item>\n                  )}\n                  <Menu.Item\n                    key=\"4\"\n                    icon={<BellOutlined />}\n                    onClick={() => history.push('/announcement')}\n                  >\n                    Announcements\n                  </Menu.Item>\n                  <Menu.Item\n                    key=\"5\"\n                    icon={<BellOutlined />}\n                    onClick={() => history.push('/settings')}\n                  >\n                    Settings\n                  </Menu.Item>\n                </Menu>\n              </Sider>\n            </>\n          ) : (\n            <></>\n          )}\n          <Layout>\n            {networkErr ? (\n              <Alert\n                message=\"Network Error\"\n                description=\"Please connect to TLR Wifi\"\n                type=\"error\"\n                showIcon\n                style={{ textAlign: 'left' }}\n              />\n            ) : (\n              <></>\n            )}\n            <Content>\n              <div className=\"content\">\n                <Switch>\n                  <PublicRoute path=\"/login\" component={Login} />\n                  <PublicRoute path=\"/enroll\" component={Enroll} />\n                  <PrivateRoute path=\"/settings\" component={Dashboard} />\n                  <PrivateRoute path=\"/announcement\" component={Announcement} />\n                  <PrivateRoute\n                    exact\n                    path={['/select_patient', '/']}\n                    component={SelectPatient}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/patient_profile/:bedNo', '/']}\n                    component={PatientProfile}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/forms/restraints_form/:uuid', '/']}\n                    component={RestraintsForm}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/forms/progress_record_form/:uuid', '/']}\n                    component={ProgressRecordForm}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/residents_module/', '/']}\n                    component={ResidentsModuleMainList}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/residents_module/admit', '/']}\n                    component={AdmitResident}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/users_module', '/']}\n                    component={UsersModule}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/users_module/addUser', '/']}\n                    component={AddUser}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/users_module/reset_password/:username', '/']}\n                    component={ResetPassword}\n                  />\n                </Switch>\n              </div>\n            </Content>\n            <Footer>ePCR</Footer>\n          </Layout>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}