{"version":3,"sources":["Utils/KeyStorage.js","Utils/Common.js","Utils/PrivateRoute.js","Utils/PublicRoute.js","Screens/Login.js","Screens/Dashboard.js","Screens/SelectPatient.js","Screens/Announcement.js","Utils/EncryptContents.js","Screens/FormColumns/ProgressRecordTable.js","Screens/ResidentsModule/PatientCard.js","Screens/Forms/ChangeRequestModal.js","Assets/index.less","Screens/PatientProfile.js","Screens/PDFExport/RestraintsExport.js","Screens/PDFExport/ProgressRecordExport.js","Screens/Forms/RestraintsForm.js","Screens/ResidentsModule/index.js","Screens/ResidentsModule/AdmitPatient.js","Screens/Forms/ProgressRecordForm.js","Screens/Enroll.js","Screens/UsersModule/index.js","Screens/UsersModule/AddUser.js","Screens/UsersModule/PasswordReset.js","Screens/CompletionStatus/RestraintsCompletionCards.js","Screens/CompletionStatus/ProgressCompletionCards.js","Screens/CompletionStatus/index.js","App.js","reportWebVitals.js","index.js"],"names":["CryptoJS","require","getUser","userStr","localStorage","getItem","JSON","parse","getToken","window","location","pathname","open","token","sessionStorage","removeItem","setAESKeyInSession","key","ciphertext","originalText","AES","decrypt","toString","enc","Utf8","setItem","decryptAESKEY","removeUserSession","PrivateRoute","Component","component","rest","render","props","to","state","from","PublicRoute","useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","loading","setLoading","username","password","error","setError","style","position","top","left","transform","direction","size","width","message","description","type","showIcon","textAlign","placeholder","prefix","UserOutlined","Password","KeyOutlined","shape","onClick","axios","post","process","then","response","user","data","stringify","catch","err","reponse","status","Dashboard","className","title","padding","history","push","SelectPatient","Text","Typography","options","setOptions","selected","setSelected","useEffect","get","headers","beds","map","el","bed","numeric","parseInt","slice","sort","a","b","console","log","onSelect","val","option","filterOption","inputValue","indexOf","virtual","Announcement","useHistory","encryptField","AESKEY","encrypt","encryptObject","decryptField","decryptObject","progressRecordColumns","text","dataField","formatter","date","time","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","moment","format","PatientCard","patientData","name","NRIC","creationDate","uuid","ChangeRequestModal","isModalVisible","setIsModalVisible","visible","onOk","onCancel","PatientProfile","setPatientData","patientError","role","userRole","setUserRole","restraintsSubmissions","setRestraintsSubmissions","add","startOf","endOf","restraintsDatePicker","setRestraintsDatePicker","progressRecordSubmissions","setProgressRecordSubmissions","changeRequestRow","setChangeRequestRow","changeRequestComment","setChangeRequestComment","RangePicker","DatePicker","bedNo","useParams","compareTime","timeslot","compareDate","dateTime","changeRequest","formDataPros","formVals","formData","formDataPros2","preferredOrder","restraintsColumns","r1","r2","r3","r4","r5","changeRequestString","i","metadata","comment","restraintsColumnsRestricted","margin","background","defaultChecked","restraintsMonitoring","checked","monitor","progressRecordMonitoring","defaultValue","endDate","doc","jsPDF","setFontSize","toDate","tableData","length","row","staff","autoTable","theme","startY","head","body","save","restraintsPdfExport","keyField","columns","styles","fontSize","progressRecordPdfExport","_id","Option","Select","formItemLayout","labelCol","span","offset","wrapperCol","RestraintsForm","setPatientError","selectedDateTime","setStaff","submitted","setSubmitted","handleNewFormSamePatient","onFinish","values","resident","alert","Item","label","required","Group","htmlType","subTitle","extra","ResidentsModuleMainList","Link","userObject","setUserObject","dischargedPatientData","setDischargedPatientData","readmitBed","readmitResident","setReadmitResident","readmitError","setReadmitError","populateAdmittedResidents","populateDischargedResidents","dataIndex","onConfirm","okText","cancelText","href","handleChangeMonitoringRestraints","checkedChildren","unCheckedChildren","handleChangeMonitoringProgress","columnsRestricted","columnsDischarged","dataSource","addonBefore","AdmitResident","admitError","setAdmitError","handleBack","toUpperCase","ProgressRecordForm","initialValues","Enroll","passphrase","timeout","UsersModule","userData","setUserData","sorter","owasp","config","allowPassphrases","maxLength","minLength","minPhraseLength","minOptionalTestsToPass","AddUser","passwordSecurity","setPasswordSecurity","result","test","requiredTestErrors","email","rules","allowClear","ResetPassword","RestraintsCompletionCards","allIncompleteRestraints","pendingSubmission","list0000","d","list0200","list0400","list0600","list0800","list1000","list1200","list1400","list1600","list1800","list2000","list2200","gutter","bordered","ProgressCompletionCards","listND","listAM","listPM","CompletionStatusModule","restraintsPending","setRestraintsPending","residentsUnderRestraintsMonitoring","setResidentsUnderRestraintsMonitoring","progressPending","setProgressPending","residentsUnderProgressMonitoring","setResidentsUnderProgressMonitoring","isRModalVisible","setIsRModalVisible","isPModalVisible","setIsPModalVisible","handleOk","handleCancel","datePicker","listOfResidentsRestraintsMonitoring","listOfResidentsProgressMonitoring","App","authLoading","setAuthLoading","networkErr","setNetworkErr","Header","Layout","Footer","Sider","Content","minHeight","justify","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","mode","defaultSelectedKeys","icon","FileTextOutlined","SettingOutlined","BellOutlined","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"inBAAIA,G,cAAWC,EAAQ,MCGVC,EAAU,WACrB,IAAMC,EAAUC,aAAaC,QAAQ,QACrC,OAAIF,EAAgBG,KAAKC,MAAMJ,GACxB,MAKIK,EAAW,WACSJ,aAAaC,QAAQ,2BACQ,YAA7BI,OAAOC,SAASC,UAC7CF,OAAOG,KAAK,UAAW,SAEzB,IAAMC,EAAQT,aAAaC,QAAQ,SACnC,OAAIQ,GACaC,eAAeT,QAAQ,YAEpCD,aAAaW,WAAW,SACxBX,aAAaW,WAAW,QACxBN,OAAOG,KAAK,SAAU,UAEjBC,GAEA,MAIEG,EAAqB,SAACC,GAClBH,eAAeT,QAAQ,WD7BX,SAACY,GAC5B,IAAIC,EAAad,aAAaC,QAAQ,0BAElCc,EADQnB,EAASoB,IAAIC,QAAQH,EAAYD,GACpBK,SAAStB,EAASuB,IAAIC,MAC/CV,eAAeW,QAAQ,SAAUN,GC2B/BO,CAAcT,IAKLU,EAAoB,WAC/BvB,aAAaW,WAAW,SACxBX,aAAaW,WAAW,S,wCClBXa,MAjBf,YAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,iBACvD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACNzB,IACE,cAACqB,EAAD,eAAeI,IAEf,cAAC,IAAD,CACEC,GAAI,CAAEvB,SAAU,SAAUwB,MAAO,CAAEC,KAAMH,EAAMvB,kB,gBCM5C2B,MAff,YAAyD,IAAvBR,EAAsB,EAAjCC,UAAyBC,EAAQ,iBACtD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACLzB,IAGC,cAAC,IAAD,CAAU0B,GAAI,CAAEvB,SAAU,gBAF1B,cAACkB,EAAD,eAAeI,S,4CCyEzB,IAAMK,EAAe,SAACC,GACpB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAKA,MAAO,CACLD,QACAE,SALmB,SAACC,GACpBF,EAASE,EAAEC,OAAOJ,UAQPK,EA1Ff,SAAeb,GACb,MAA8BO,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAWX,EAAa,IACxBY,EAAWZ,EAAa,IAC9B,EAA0BE,mBAAS,MAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAyBA,OACE,qBACEC,MAAO,CACLC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBALf,SAQE,eAAC,IAAD,CAAOC,UAAU,WAAWC,KAAK,SAASN,MAAO,CAAEO,MAAO,SAA1D,UACGT,EACC,cAAC,IAAD,CACEU,QAAQ,eACRC,YAAaX,EACbY,KAAK,QACLC,UAAQ,EACRX,MAAO,CAAEY,UAAW,UAGtB,6BAGF,cAAC,IAAD,2BACMhB,GADN,IAEEU,KAAK,QACLO,YAAY,WACZC,OAAQ,cAACC,EAAA,EAAD,OAEV,cAAC,IAAMC,SAAP,2BACMnB,GADN,IAEES,KAAK,QACLO,YAAY,WACZC,OAAQ,cAACG,EAAA,EAAD,OAEV,cAAC,IAAD,CACEP,KAAK,UACLJ,KAAK,QACLY,MAAM,QACNC,QA5DY,WAClBpB,EAAS,MACTJ,GAAW,GACXyB,IACGC,KADH,UACWC,2CADX,iBACyD,CACrD1B,SAAUA,EAASR,MACnBS,SAAUA,EAAST,QAEpBmC,MAAK,SAACC,GHuBiB,IAAChE,EAAOiE,EGtB9B9B,GAAW,GHsBYnC,EGrBRgE,EAASE,KAAKlE,MHqBCiE,EGrBMD,EAASE,KAAKD,KHsBxD1E,aAAaqB,QAAQ,QAASZ,GAC9BT,aAAaqB,QAAQ,OAAQnB,KAAK0E,UAAUF,IGtBtC9D,EAAmB6D,EAASE,KAAK9D,KACjCR,OAAOG,KAAK,kBAAmB,YAEhCqE,OAAM,SAACC,GACNlC,GAAW,GACPkC,EAAIC,SAAmC,MAAxBD,EAAIL,SAASO,OAC9BhC,EAAS8B,EAAIL,SAASE,KAAKlB,SACxBT,EAAS,qDA2CZL,QAASA,EACTM,MAAO,CAAEO,MAAO,QANlB,SAQGb,EAAU,gBAAkB,gB,SCpCxBsC,MAtCf,SAAmBpD,GACjB,IAAM6C,EAAO5E,IAQb,OACE,qCACE,cAAC,IAAD,CAAYoF,UAAU,mBAAmBC,MAAM,aAC/C,sBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,UACE,cAAC,IAAD,CACEzB,KAAK,UACLS,QAAS,WAVf7C,IACAlB,OAAOG,KAAK,SAAU,UAOlB,mBAKM,WAIN,uBACA,uBACA,cAAC,IAAD,CACEmD,KAAK,UACLS,QAAS,WACPvC,EAAMwD,QAAQC,KAAK,gCAAkCZ,EAAK7B,WAH9D,4BAKM,kB,kBCgEC0C,MA3Ff,SAAuB1D,GACrB,IAAQ2D,EAASC,IAATD,KACR,EAA8BpD,qBAA9B,mBAAOsD,EAAP,KAAgBC,EAAhB,KACA,EAAgCvD,qBAAhC,mBAAOwD,EAAP,KAAiBC,EAAjB,KAuDA,OArDAC,qBAAU,WACR,IAAMrF,EAAQL,IACTK,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChEoE,OAAM,SAAC9B,GACNxB,OAIJ8C,IACGC,KADH,UAEOC,2CAFP,2BAGI,GACA,CAAEyB,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACL,IAAIwB,EAAOxB,EAASE,KACpBsB,EAAKC,KAAI,SAACC,GACRA,EAAG9D,MAAQ8D,EAAGC,IACdD,EAAGE,QAAUC,SAASH,EAAGC,IAAIG,MAAM,GAAI,OAWzCN,EAAKO,MATL,SAAiBC,EAAGC,GAClB,OAAID,EAAEJ,QAAUK,EAAEL,SACR,EAENI,EAAEJ,QAAUK,EAAEL,QACT,EAEF,KAITV,EAAWM,MAGZpB,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,OArCdlB,EAAMwD,QAAQC,KAAK,YAuCpB,IAYD,qCACE,cAAC,IAAD,CAAYJ,UAAU,mBAAmBC,MAAM,mBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACE,cAACiC,EAAD,gCAEA,cAAC,IAAD,CACEvC,MAAO,CACLO,MAAO,KAETkC,QAASA,EACT5B,YAAY,SACZ+C,SAAU,SAACC,EAAKC,GAAN,OAtBH,SAACD,EAAKC,GACrBlB,EAAYkB,EAAO1E,OAqBgBwE,CAASC,EAAKC,IACzCC,aAAc,SAACC,EAAYF,GAAb,OAC0B,IAAtCA,EAAO1E,MAAM6E,QAAQD,IAEvBE,SAAS,IAEVvB,GACC,gCACE,+CAAkBA,KAClB,cAAC,IAAD,CAAQjC,KAAK,UAAUS,QA3BnC,WAEE/D,OAAOG,KAAP,2BAAgCoF,GAAY,UAyBlC,gCC1CCwB,MAzBf,WAkBE,OAjBgBC,cAChBvB,qBAAU,WACR,IAAMrF,EAAQL,IACTK,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,GACLkC,QAAQC,IAAInC,MAEbI,OAAM,SAAC9B,GACNxB,SAEH,IAGD,8BACE,cAAC,IAAD,CAAY2D,UAAU,mBAAmBC,MAAM,qB,uECtC/CvF,EAAWC,EAAQ,KAEZyH,GAAe,SAAC7D,GAE3B,IAAM8D,EAAS7G,eAAeT,QAAQ,UACtC,OAAOL,EAASoB,IAAIwG,QAAQ/D,EAAS8D,GAAQrG,YAGlCuG,GAAgB,SAAChE,GAE5B,IAAM8D,EAAS7G,eAAeT,QAAQ,UACtC,OAAOL,EAASoB,IAAIwG,QAAQtH,KAAK0E,UAAUnB,GAAU8D,GAAQrG,YAGlDwG,GAAe,SAAC5G,GAE3B,IAAMyG,EAAS7G,eAAeT,QAAQ,UAEtC,OADYL,EAASoB,IAAIC,QAAQH,EAAYyG,GAChCrG,SAAStB,EAASuB,IAAIC,OAExBuG,GAAgB,SAAC7G,GAE5B,IAAMyG,EAAS7G,eAAeT,QAAQ,UAEtC,OADYL,EAASoB,IAAIC,QAAQf,KAAKC,MAAMW,GAAayG,GAC5CrG,SAAStB,EAASuB,IAAIC,O,UCvBxBwG,I,OAAwB,CACnC,CACEC,KAAM,OACNhH,IAAK,MACLiH,UAAW,WAGXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMG,SAE5C,CACEH,KAAM,OACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMI,SAE5C,CACEJ,KAAM,oBACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMK,OAE5C,CACEL,KAAM,eACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMM,OAE5C,CACEN,KAAM,YACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMO,OAE5C,CACEP,KAAM,mBACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMQ,OAE5C,CACER,KAAM,YACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMS,OAE5C,CACET,KAAM,UACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMU,OAE5C,CACEV,KAAM,UACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMW,OAE5C,CACEX,KAAM,QACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMY,OAE5C,CACEZ,KAAM,WACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMa,OAE5C,CACEb,KAAM,gBACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMc,QAE5C,CACEd,KAAM,UACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMe,QAE5C,CACEf,KAAM,UACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMgB,QAE5C,CACEhB,KAAM,UACNhH,IAAK,MACLiH,UAAW,WACXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAM,iBAE5C,CACEA,KAAM,QACNhH,IAAK,MACLiH,UAAW,SAEb,CACED,KAAM,gBACNhH,IAAK,MACLiH,UAAW,eACXC,UAAW,SAACF,GAAD,OACT,4BAAIiB,IAAOjB,GAAMkB,OAAO,iCC9EfC,OAtBf,SAAqBnH,GACnB,OACE,qCACE,uCACQA,EAAMoH,YAAY7C,IACxB,uBAFF,SAGSsB,GAAa7F,EAAMoH,YAAYC,MACtC,uBAJF,SAKSxB,GAAa7F,EAAMoH,YAAYE,MACtC,uBANF,oBAOoB,IACjBL,IAAOjH,EAAMoH,YAAYG,cAAcL,OACtC,2BAEF,uBAXF,WAYWlH,EAAMoH,YAAYjE,UAE7B,6CAAgBnD,EAAMoH,YAAYI,YC+BzBC,OA/Bf,SAA4BzH,GAC1B,MAA4CO,oBAAS,GAArD,mBAAOmH,EAAP,KAAuBC,EAAvB,KAcA,OACE,mCACE,eAAC,IAAD,CACErE,MAAM,cACNsE,QAASF,EACTG,KAbW,WACfF,GAAkB,IAadG,SAVe,WACnBH,GAAkB,IAKhB,UAME,iDACA,iDACA,uDC9CO,ICynBAI,OAzlBf,SAAwB/H,GACtB,MAAsCO,qBAAtC,mBAAO6G,EAAP,KAAoBY,EAApB,KACA,EAAwCzH,qBAAxC,mBAAO0H,EAAP,KACA,GADA,KACgC1H,mBAAS,CAAE2H,KAAM,QAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0D7H,qBAA1D,mBAAO8H,EAAP,KAA8BC,EAA9B,KACA,EAAwD/H,mBAAS,CAC/D0G,MAASsB,KAAK,EAAG,QAAQC,QAAQ,OACjCvB,MAASwB,MAAM,SAFjB,mBAAOC,EAAP,KAA6BC,EAA7B,KAIA,EAAkEpI,qBAAlE,mBAAOqI,EAAP,KAAkCC,EAAlC,KACA,EAAgDtI,qBAAhD,mBAAOuI,EAAP,KAAyBC,EAAzB,KACA,EAAkDxI,qBAAlD,mBACA,GADA,UACkDA,oBAAS,IAA3D,mBACA,GADA,UACwDA,oBAAS,IAAjE,mBAAOyI,EAAP,KAA6BC,EAA7B,KAEA,EAA4C1I,oBAAS,GAArD,oBAAOmH,GAAP,MAAuBC,GAAvB,MAaQuB,GAAgBC,IAAhBD,YACFrG,GAAO5E,IAEPmL,GAAUC,cAAVD,MACAxK,GAAQL,IAgCd,SAAS+K,GAAY1E,EAAGC,GACtB,OAAID,EAAE2E,SAAW1E,EAAE0E,SACV,EAEL3E,EAAE2E,SAAW1E,EAAE0E,UACT,EAEH,EAET,SAASC,GAAY5E,EAAGC,GACtB,OAAID,EAAE6E,SAAW5E,EAAE4E,SACV,EAEL7E,EAAE6E,SAAW5E,EAAE4E,UACT,EAEH,EA/CTxF,qBAAU,WACHrF,IAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,KAChE+D,MAAK,SAACC,GAELwF,EAAYvF,GAAKqF,SAGlBlF,OAAM,SAAC9B,GACNxB,OAGJ8C,IACGC,KADH,UAEOC,2CAFP,uBAGI,CAAE6B,IAAK6E,IACP,CAAEjF,QAAS,CAAEvF,MAAOA,MAErB+D,MAAK,SAACC,GACLoF,EAAepF,EAASE,KAAK,OAE9BE,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,OAxBdlB,EAAMwD,QAAQC,KAAK,YA2BpB,IAqBH,IAAIiG,GAAgB,SAAC5G,GACnBgC,QAAQC,IAAIjC,IAGdmB,qBAAU,WAGJmD,IACF5E,IACGC,KADH,UAEOC,2CAFP,2CAGI,CACE8E,KAAMJ,EAAYI,KAClBkB,qBAAsBA,GAExB,CAAEvE,QAAS,CAAEvF,MAAOA,MAErB+D,MAAK,SAACC,GACL,IAAI+G,EAAe/G,EAASE,KAC5B6G,EAAatF,KAAI,SAACC,GAChBA,EAAGsF,SAAW9D,GAAcxB,EAAGuF,UAC/BvF,EAAGiF,SAAW9E,SAASH,EAAGiF,aAG5BI,EAAahF,KAAK2E,IAClBK,EAAahF,KAAK6E,IAElBlB,EAAyBqB,MAG1B3G,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,MAGhBsB,IACGC,KADH,UAEOC,2CAFP,+CAGI,CACE8E,KAAMJ,EAAYI,KAClBkB,qBAAsBA,GAExB,CAAEvE,QAAS,CAAEvF,MAAOA,MAErB+D,MAAK,SAACC,GACL,IAAIkH,EAAgBlH,EAASE,KAC7BgH,EAAczF,KAAI,SAACC,GACjBA,EAAGsF,SAAW9D,GAAcxB,EAAGuF,aAGjC,IAAIE,EAAiB,CAAC,KAAM,KAAM,MAElCD,EAAcnF,MAAK,SAAUC,EAAGC,GAC9B,OACEkF,EAAe1E,QAAQR,EAAE0E,UACzBQ,EAAe1E,QAAQT,EAAE2E,aAG7BO,EAAcnF,KAAK6E,IACnBX,EAA6BiB,MAG9B9G,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,SAGjB,CAACkG,EAAasB,EAAsBhB,KAuEvC,IAAMsC,GAAoB,CACxB,CACEhE,KAAM,OACNhH,IAAK,MACLiH,UAAW,WAGXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMG,SAE5C,CACEH,KAAM,OACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMI,SAE5C,CACEJ,KAAM,+BACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMiE,OAE5C,CACEjE,KAAM,2BACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMkE,OAG5C,CACElE,KAAM,0CACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMmE,OAE5C,CACEnE,KAAM,kCACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMoE,OAG5C,CACEpE,KAAM,yBACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMqE,OAE5C,CACErE,KAAM,qBACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAM,yBAE5C,CACEA,KAAM,UACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAM,iBAE5C,CACEA,KAAM,QACNhH,IAAK,MACLiH,UAAW,SAGb,CACED,KAAM,gBACNhH,IAAK,MACLiH,UAAW,eAEXC,UAAW,SAACF,GAAD,OACT,4BAAIiB,IAAOjB,GAAMkB,OAAO,+BAK5B,CACElB,KAAM,UACNhH,IAAK,MACLiH,UAAW,gBAEXC,UAAW,SAACF,GACV,IAAIsE,EAAsB,GACtBC,EAAI,EAUN,OATFvE,EAAK3B,KAAI,SAACvB,GACRgC,QAAQC,IAAIjC,GACZwH,GACqB,WACfC,EADe,aACTzH,EAAK0H,SADI,qBACiB3E,GAAa/C,EAAK2H,SADnC,MAErBF,OAEFzF,QAAQC,IAAI,UAAWuF,GAEdA,IAOb,CACEtE,KAAM,SACNC,UAAW,MAEXC,UAAW,SAACpD,GAAD,OACT,mCACE,cAAC,IAAD,CACEP,QAAS,WACPwG,EAAoBjG,GACpBgC,QAAQC,IAAI,WAAYjC,GA7TtB,cA8Tc,cA7TxBgC,QAAQC,IAAI,iBAEd4C,IAAkB,IAuTZ,6BAgBF+C,GAA8B,CAClC,CACE1E,KAAM,OACNhH,IAAK,MACLiH,UAAW,WAGXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMG,SAE5C,CACEH,KAAM,OACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMI,SAE5C,CACEJ,KAAM,+BACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMiE,OAE5C,CACEjE,KAAM,2BACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMkE,OAG5C,CACElE,KAAM,0CACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMmE,OAE5C,CACEnE,KAAM,kCACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMoE,OAG5C,CACEpE,KAAM,yBACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAMqE,OAE5C,CACErE,KAAM,qBACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAM,yBAE5C,CACEA,KAAM,UACNhH,IAAK,MACLiH,UAAW,WAEXC,UAAW,SAACF,GAAD,OAAU,4BAAI3H,KAAKC,MAAM0H,GAAM,iBAE5C,CACEA,KAAM,QACNhH,IAAK,MACLiH,UAAW,SAGb,CACED,KAAM,gBACNhH,IAAK,MACLiH,UAAW,eAEXC,UAAW,SAACF,GAAD,OACT,4BAAIiB,IAAOjB,GAAMkB,OAAO,+BAK5B,CACElB,KAAM,UACNhH,IAAK,MACLiH,UAAW,gBAEXC,UAAW,SAACF,GACV,IAAIsE,EAAsB,GACtBC,EAAI,EAUN,OATFvE,EAAK3B,KAAI,SAACvB,GACRgC,QAAQC,IAAIjC,GACZwH,GACqB,UAChBC,EADgB,aACVzH,EAAK0H,SADK,qBACgB3E,GAAa/C,EAAK2H,SADlC,MAErBF,OAEFzF,QAAQC,IAAI,UAAWuF,GAEdA,KASf,OACE,qCACE,cAAC,IAAD,CAAQlJ,MAAO,CAAEuJ,OAAQ,QAAUpI,QA/SvC,WACEvC,EAAMwD,QAAQC,KAAK,oBA8SuC3B,KAAK,UAA7D,sCAIA,cAAC,IAAD,CAAYuB,UAAU,mBAAmBC,MAAM,oBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACG0F,GACC,qCACE,cAAC,GAAD,CAAaA,YAAaA,IAC1B,uBACA,cAAC,IAAD,CAAQtF,KAAK,UAAUS,QAlUnC,WACEvC,EAAMwD,QAAQC,KAAd,iCAA6C2D,EAAYI,QAiU/C,oCAGA,cAAC,IAAD,CACE1F,KAAK,UACLS,QAnUd,WACEvC,EAAMwD,QAAQC,KAAd,sCAAkD2D,EAAYI,QAmUlDpG,MAAO,CAAEwJ,WAAY,WAHvB,yCAOA,uBACa,QAAZzC,GACC,qCACE,mDACA,uDACA,cAAC,IAAD,CACE0C,eAAgBzD,EAAY0D,qBAC5BpK,SAlUlB,SAAgCqK,GAC9BvI,IACGC,KADH,UAEOC,2CAFP,4CAGI,CACE8E,KAAMJ,EAAYI,KAClBwD,QAASD,GAEX,CAAE5G,QAAS,CAAEvF,MAAOA,MAErBoE,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,SAwTC,IANL,8BAQE,cAAC,IAAD,CACE2J,eAAgBzD,EAAY6D,yBAC5BvK,SAzTlB,SAAoCqK,GAClCvI,IACGC,KADH,UAEOC,2CAFP,gDAGI,CACE8E,KAAMJ,EAAYI,KAClBwD,QAASD,GAEX,CAAE5G,QAAS,CAAEvF,MAAOA,MAErBoE,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,YAmTN,uBACA,eAAC,IAAD,CAAOO,UAAU,WAAWC,KAAM,GAAlC,UACE,iEACA,cAACwH,GAAD,CACEgC,aAAc,CACZjE,MAASsB,KAAK,EAAG,QAAQC,QAAQ,OACjCvB,MAASuB,QAAQ,QAEnB9H,SAAU,SAACC,GACT,IAAIwK,EAAUxK,EAAE,GAChBwK,EAAUlE,IAAOkE,GAAS1C,MAAM,OAEhCE,EAAwB,CAAChI,EAAE,GAAIwK,UAIrC,oEACA,cAAC,IAAD,CACE/J,MAAO,CAAEuJ,OAAQ,QACjBpI,QArWd,YC7LiC,SAAC6E,EAAaiB,GAC/C,IAAM+C,EAAM,IAAIC,WAAM,aAEtBD,EAAIpF,KAAK,oBAAqB,EAAG,IACjCoF,EAAIE,YAAY,IAChBF,EAAIpF,KAAK,kBAAoBH,GAAauB,EAAYC,MAAO,EAAG,IAChE+D,EAAIpF,KAAK,kBAAoBH,GAAauB,EAAYE,MAAO,EAAG,IAChE8D,EAAIpF,KAAK,qBAAuBiB,MAASsE,SAAU,EAAG,IAItD,IAFA,IAAIC,EAAY,GAEPjB,EAAI,EAAGA,EAAIlC,EAAsBoD,OAAQlB,IAAK,CACrD,IAAImB,EAAM,GACV5G,QAAQC,IAAI1G,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUxD,MAC1DsF,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUzD,MACvDuF,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUxD,MACvDsF,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUK,IACvDyB,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUM,IACvDwB,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUO,IACvDuB,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUQ,IACvDsB,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAUS,IACvDqB,EAAIjI,KACFpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAU,sBAEhD8B,EAAIjI,KAAKpF,KAAKC,MAAM+J,EAAsBkC,GAAGX,UAAU,cACvD8B,EAAIjI,KAAK4E,EAAsBkC,GAAGoB,OAClCD,EAAIjI,KACFwD,IAAOoB,EAAsBkC,GAAGhD,cAAcL,OAC5C,4BAGJsE,EAAU/H,KAAKiI,GAGjBN,EAAIQ,UAAU,CACZC,MAAO,OACPC,OAAQ,GACRC,KAAM,CACJ,CACE,OACA,OACA,+BACA,uCACA,0CACA,kCACA,yBACA,kBACA,UACA,kBACA,mBAGJC,KAAMR,IAGRJ,EAAIa,KAAK,aDuIPC,CAAoB9E,EAAaiB,IAqWrBvG,KAAK,UAHP,oCAOA,qBAAKuB,UAAU,MAAf,SAQGgF,GACC,mCACe,QAAZF,EACC,cAAC,IAAD,CACEgE,SAAS,KACTrJ,KAAMuF,EACN+D,QAASpC,GACTN,cAAeA,KAGjB,cAAC,IAAD,CACEyC,SAAS,KACTrJ,KAAMuF,EACN+D,QAAS1B,GACThB,cAAeA,SAMzB,yEACA,cAAC,IAAD,CACEtI,MAAO,CAAEuJ,OAAQ,QACjBpI,QAtYd,YEhMqC,SACrC6E,EACAwB,GAEA,IAAMwC,EAAM,IAAIC,WAAM,aAEtBD,EAAIpF,KAAK,yBAA0B,EAAG,IACtCoF,EAAIE,YAAY,IAChBF,EAAIpF,KAAK,kBAAoBH,GAAauB,EAAYC,MAAO,EAAG,IAChE+D,EAAIpF,KAAK,kBAAoBH,GAAauB,EAAYE,MAAO,EAAG,IAChE8D,EAAIpF,KAAK,qBAAuBiB,MAASsE,SAAU,EAAG,IACtDH,EAAIE,YAAY,GAIhB,IAFA,IAAIE,EAAY,GAEPjB,EAAI,EAAGA,EAAI3B,EAA0B6C,OAAQlB,IAAK,CACzD,IAAImB,EAAM,GACV5G,QAAQC,IAAI1G,KAAKC,MAAMsK,EAA0B2B,GAAGX,WACpD8B,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUzD,MAC3DuF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUxD,MAC3DsF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUvD,IAC3DqF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUtD,IAC3DoF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUrD,IAC3DmF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUpD,IAC3DkF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUnD,IAC3DiF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUlD,IAC3DgF,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUjD,IAC3D+E,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAUhD,IAC3D8E,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAU/C,IAC3D6E,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAU9C,KAC3D4E,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAU7C,KAC3D2E,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAU5C,KAC3D0E,EAAIjI,KAAKpF,KAAKC,MAAMsK,EAA0B2B,GAAGX,UAAU,cAC3D8B,EAAIjI,KAAKmF,EAA0B2B,GAAGoB,OACtCD,EAAIjI,KACFwD,IAAO2B,EAA0B2B,GAAGhD,cAAcL,OAChD,4BAGJsE,EAAU/H,KAAKiI,GAGjBN,EAAIQ,UAAU,CACZC,MAAO,OACPC,OAAQ,GACRO,OAAQ,CAAEC,SAAU,GACpBP,KAAM,CACJ,CACE,OACA,OACA,oBACA,iBACA,YACA,kBACA,YACA,UACA,UACA,QACA,WACA,gBACA,UACA,UACA,UACA,kBACA,mBAGJC,KAAMR,IAGRJ,EAAIa,KAAK,aF2HPM,CAAwBnF,EAAawB,IAsYzB9G,KAAK,UAHP,yCAOA,qBAAKuB,UAAU,MAAf,SAQGuF,GACC,cAAC,IAAD,CACEuD,SAAS,KACTrJ,KAAM8F,EACNwD,QAASrG,UAOlBkC,GAAgB,4BAAIA,SAIzB,eAAC,IAAD,CACE3E,MAAM,iBACNsE,QAASF,GACTG,KAhYN,WACErF,IACGC,KADH,UAEOC,2CAFP,uCAGI,CACE8J,IAAK1D,EACLE,qBAAsBvD,GAAauD,IAErC,CAAE7E,QAAS,CAAEvF,MAAOA,MAErB+D,MAAK,WACJgF,IAAkB,MAEnB3E,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,OAmXZ4G,SAljBe,WACnBH,IAAkB,IA6iBhB,UAMGmB,GAAoB,4BAAIA,IACxBE,GAAwB,4BAAIA,IAC7B,cAAC,IAAD,CACE3B,KAAK,gBACL3G,SA5YR,SAAoCC,GAClCsI,EAAwBtI,EAAEC,OAAOJ,OACjCsE,QAAQC,IAAIpE,EAAEC,OAAOJ,iB,uCGnNjBiM,GAAWC,KAAXD,OACFE,GAAiB,CACrBC,SAAU,CACRC,KAAM,GACNC,OAAQ,GAEVC,WAAY,CACVF,KAAM,KAoOKG,OAhOf,SAAwBhN,GACtB,MAAsCO,qBAAtC,mBAAO6G,EAAP,KAAoBY,EAApB,KACA,EAAwCzH,qBAAxC,mBAAO0H,EAAP,KAAqBgF,EAArB,KACA,EAAgD1M,mBAAS,MAAzD,mBAAO2M,EAAP,KACA,GADA,KAC0B3M,sBAA1B,mBAAOoL,EAAP,KAAcwB,EAAd,KACA,EAAkC5M,oBAAS,GAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KAEM7F,EAAS6B,cAAT7B,KAEA5I,EAAQL,IAiEd,SAAS+O,IACPtN,EAAMwD,QAAQC,KAAK,oBAAsB2D,EAAY7C,IAAK,SAG5D,OApEAN,qBAAU,WACHrF,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,GACLuK,EAASlP,IAAU+C,aAEpBgC,OAAM,SAAC9B,GACNxB,OAIJ8C,IACGC,KADH,UAEOC,2CAFP,wBAGI,CAAE8E,KAAMA,GACR,CAAErD,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLoF,EAAepF,EAASE,KAAK,OAE9BE,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAM0B,SAASE,KAAK5B,OAChC+L,EAAgB/L,EAAM0B,SAASE,KAAK5B,WAxBtClB,EAAMwD,QAAQC,KAAK,YA0BpB,IAyCD,qCACE,cAAC,IAAD,CACErC,MAAO,CAAEuJ,OAAQ,QACjBpI,QAAS+K,EACTxL,KAAK,UAHP,qCAOA,cAAC,IAAD,CAAYuB,UAAU,mBAAmBC,MAAM,oBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACG0F,GAAeuE,IAAUyB,GACxB,qCACE,cAAC,GAAD,CAAahG,YAAaA,IAE1B,eAAC,KAAD,yBACEC,KAAK,kBACDsF,IAFN,IAGEY,SAzDG,SAACC,GAChB,GAAKA,EAAOpH,KAAZ,CAKA,IAAMqD,EAAWxC,IAAOuG,EAAM,MAAUhF,QAAQ,OAChDgF,EAAM,KAAWA,EAAM,KAAStG,OAAO,cACvCpC,QAAQC,IAAI,4BAA6B1G,KAAK0E,UAAUyK,IAExDhL,IACGC,KADH,UAEOC,2CAFP,gCAGI,CACE+K,SAAUjG,EACVqC,SAAUjE,GAAc4H,GACxBjJ,IAAK6C,EAAY7C,IACjBkF,SAAUA,EACVF,SAAUiE,EAAOpH,MAEnB,CAAEjC,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLyK,GAAa,MAGdrK,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAM0B,SAASE,KAAK5B,OAChC+L,EAAgB/L,EAAM0B,SAASE,KAAK5B,eA1BtCwM,MAAM,oBAoDE,UAKE,cAAC,KAAKC,KAAN,CAAWtG,KAAK,OAAOuG,MAAM,OAAOC,UAAQ,EAA5C,SACE,cAAC,IAAD,MAGF,cAAC,KAAKF,KAAN,CACEjN,SAAU,WACRoE,QAAQC,IAAI,gBAEdsC,KAAK,OACLuG,MAAM,OACNC,UAAQ,EANV,SAQE,eAAC,KAAD,CAAQ5L,YAAY,uBAAuBqD,SAAS,EAApD,UACE,cAAC,GAAD,CAAQ9E,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,uBAIH0M,GACC,qCACE,4BAAIA,IACJ,yBAIJ,cAAC,KAAKS,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,kCAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,IAAb,iBACA,cAAC,KAAD,CAAOA,MAAM,IAAb,gBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CACEtG,KAAK,KACLuG,MAAM,0CAFR,SAIE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,IAAb,iBACA,cAAC,KAAD,CAAOA,MAAM,IAAb,gBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CACEtG,KAAK,KACLuG,MAAM,mDAFR,SAIE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,IAAb,iBACA,cAAC,KAAD,CAAOA,MAAM,IAAb,gBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CACEtG,KAAK,KACLuG,MAAM,2CAFR,SAIE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,IAAb,iBACA,cAAC,KAAD,CAAOA,MAAM,IAAb,gBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,4BAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,IAAb,iBACA,cAAC,KAAD,CAAOA,MAAM,IAAb,gBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAIJ,cAAC,KAAKmN,KAAN,CACEtG,KAAK,oBACLuG,MAAM,wBAFR,SAIE,cAAC,IAAD,MAEF,cAAC,KAAKD,KAAN,CAAWtG,KAAK,YAAYuG,MAAM,aAAlC,SACE,cAAC,IAAD,MAGF,cAAC,KAAKD,KAAN,CAAWtG,KAAK,QAAQuG,MAAM,eAA9B,SACE,sBAAMvK,UAAU,gBAAhB,SAAiCsI,MAGnC,cAAC,KAAKgC,KAAN,UACE,cAAC,IAAD,CAAQ7L,KAAK,UAAUiM,SAAS,SAAhC,6BAOPX,GACC,cAAC,KAAD,CACEjK,OAAO,UACPG,MAAM,WACN0K,SAAS,0DACTC,MAAO,CACL,cAAC,IAAD,CAAQnM,KAAK,UAAUS,QAxIrC,WACEvC,EAAMwD,QAAQC,KAAK,mBAAoB,UAuI3B,+BAAsD,WAGtD,cAAC,IAAD,CAAkBlB,QAAS+K,EAA3B,6CAAY,UAOjBrF,GAAgB,4BAAIA,a,oBCoLhBiG,OAnZf,SAAiClO,GACR4D,IAAfD,KAAeC,IAATuK,KAAd,IACA,EAAoC5N,mBAAS,CAAES,SAAU,OAAzD,mBAAOoN,EAAP,KAAmBC,EAAnB,KACA,EAAsC9N,qBAAtC,mBAAO6G,EAAP,KAAoBY,EAApB,KACA,EAA0DzH,qBAA1D,mBAAO+N,EAAP,KAA8BC,EAA9B,KACA,EAAoChO,qBAApC,mBAAOiO,EAAP,KACA,GADA,KAC8CjO,sBAA9C,mBAAOkO,EAAP,KAAwBC,EAAxB,KACA,EAAwCnO,qBAAxC,mBAAOoO,EAAP,KAAqBC,EAArB,KAEMhQ,EAAQL,IACRsE,EAAO5E,IAoBb,SAAS4Q,IACPrM,IACGC,KADH,UAEOC,2CAFP,sCAGI,GACA,CAAEyB,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACL,IAAIwB,EAAOxB,EAASE,KAEpBsB,EAAKC,KAAI,SAACC,GACRA,EAAG+C,KAAOxB,GAAavB,EAAG+C,MAC1B/C,EAAGgD,KAAOzB,GAAavB,EAAGgD,MAC1BhD,EAAGE,QAAUC,SAASH,EAAGC,QAY3BH,EAAKO,MATL,SAAiBC,EAAGC,GAClB,OAAID,EAAEJ,QAAUK,EAAEL,SACR,EAENI,EAAEJ,QAAUK,EAAEL,QACT,EAEF,KAITwD,EAAe5D,MAEhBpB,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,MAGlB,SAAS4N,IACPtM,IACGC,KADH,UAEOC,2CAFP,wCAGI,GACA,CAAEyB,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACL,IAAIwB,EAAOxB,EAASE,KAEpBsB,EAAKC,KAAI,SAACC,GACRA,EAAG+C,KAAOxB,GAAavB,EAAG+C,MAC1B/C,EAAGgD,KAAOzB,GAAavB,EAAGgD,SAE5BiH,EAAyBnK,MAE1BpB,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,MApElB+C,qBAAU,WACHrF,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,GACLyL,EAAcxL,MAEfG,OAAM,SAAC9B,GACNxB,OAGJmP,IACAC,KAbE9O,EAAMwD,QAAQC,KAAK,YAcpB,IAwDH,MAA4ClD,oBAAS,GAArD,mBAAOmH,EAAP,KAAuBC,EAAvB,KAmGMyE,EAAU,CACd,CACE9I,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAEb,CACEzL,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAEb,CACEzL,MAAO,MACPtE,IAAK,MACL+P,UAAW,OAEb,CACEzL,MAAO,oBACPtE,IAAK,MACL+P,UAAW,eACXhP,OAAQ,SAACiG,GAAD,OAAU,4BAAIiB,IAAOjB,GAAMkB,OAAO,+BAE5C,CACE5D,MAAO,SACPtE,IAAK,SACL2C,MAAO,IACP5B,OAAQ,SAAC+C,GAAD,OACN,eAAC,IAAD,CAAOpB,KAAK,SAAZ,UACE,mBACEa,QAAS,WACPvC,EAAMwD,QAAQC,KAAK,oBAAsBX,EAAKyB,MAFlD,0BAOA,cAAC,KAAD,CACEjB,MAAM,0CACN0L,UAAW,kBA1GFxH,EA0GkB1E,EAAK0E,UAxGxChF,IACGC,KADH,UAEOC,2CAFP,wBAGI,CAAE8E,KAAMA,GACR,CAAErD,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLiM,IACAC,OAED9L,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAMA,UAbxB,IAAmBsG,GA2GTM,SAAU,GACVmH,OAAO,MACPC,WAAW,KALb,SAOE,mBAAGC,KAAK,IAAR,yBAEF,cAAC,IAAD,CACEpE,QAASjI,EAAKgI,qBACdpK,SAAU,WACRoE,QAAQC,IAAIjC,EAAKgI,sBAhG7B,SAA0CnK,GACxC,IAAIqK,EACArK,EAAEmK,sBACJE,GAAU,EACVlG,QAAQC,IAAI,cAEZiG,GAAU,EACVlG,QAAQC,IAAI,YAEdvC,IACGC,KADH,UAEOC,2CAFP,4CAGI,CAAE8E,KAAM7G,EAAE6G,KAAMwD,QAASA,GACzB,CAAE7G,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLiM,IACAC,OAED9L,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAMA,UA6EZkO,CAAiCtM,IAEnCuM,gBAAgB,IAChBC,kBAAkB,MACjB,IACH,cAAC,IAAD,CACEvE,QAASjI,EAAKmI,yBACdvK,SAAU,YAhFpB,SAAwCC,GAEtC,IAAIqK,EACArK,EAAEsK,0BACJD,GAAU,EACVlG,QAAQC,IAAI,cAEZiG,GAAU,EACVlG,QAAQC,IAAI,YAEdvC,IACGC,KADH,UAEOC,2CAFP,gDAGI,CAAE8E,KAAM7G,EAAE6G,KAAMwD,QAASA,GACzB,CAAE7G,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLiM,IACAC,OAED9L,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAMA,UA4DZqO,CAA+BzM,IAEjCuM,gBAAgB,IAChBC,kBAAkB,YAOtBE,EAAoB,CACxB,CACElM,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAEb,CACEzL,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAEb,CACEzL,MAAO,MACPtE,IAAK,MACL+P,UAAW,OAEb,CACEzL,MAAO,oBACPtE,IAAK,MACL+P,UAAW,eACXhP,OAAQ,SAACiG,GAAD,OAAU,4BAAIiB,IAAOjB,GAAMkB,OAAO,+BAE5C,CACE5D,MAAO,SACPtE,IAAK,SACL2C,MAAO,IACP5B,OAAQ,SAAC+C,GAAD,OACN,cAAC,IAAD,CAAOpB,KAAK,SAAZ,SACE,mBACEa,QAAS,WACPvC,EAAMwD,QAAQC,KAAK,oBAAsBX,EAAKyB,MAFlD,+BAYFkL,EAAoB,CACxB,CACEnM,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAEb,CACEzL,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAOb,CACEzL,MAAO,oBACPtE,IAAK,MACL+P,UAAW,eACXhP,OAAQ,SAACiG,GAAD,OAAU,4BAAIiB,IAAOjB,GAAMkB,OAAO,+BAE5C,CACE5D,MAAO,SACPtE,IAAK,SACL2C,MAAO,IACP5B,OAAQ,SAAC+C,GAAD,OACN,eAAC,IAAD,CAAOpB,KAAK,SAAZ,UACE,mBACEa,QAAS,WACPvC,EAAMwD,QAAQC,KAAK,oBAAsBX,EAAK0E,OAFlD,0BAQA,cAAC,IAAD,CACE1F,KAAK,YACLS,QAAS,WAlPD,IAAC5B,EACjB+N,EAAmB,CAAElH,MADJ7G,EAmPGmC,GAlPS0E,KAAMH,KAAM1G,EAAE0G,OAC3CuH,EAAgB,MAChBjH,GAAkB,IA6OZ,4BAaR,OACE,qCACE,cAAC,IAAD,CAAYtE,UAAU,mBAAmBC,MAAM,qBAC/C,sBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,UACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACsB,QAAnB0M,EAAWlG,MACV,cAAC,IAAD,CACE3F,QAAS,WACPvC,EAAMwD,QAAQC,KAAK,4BAFvB,+BASF,4DACoB,QAAnB2K,EAAWlG,MACV,cAAC,KAAD,CACEkE,QAASA,EACTsD,WAAYtI,IAII,cAAnBgH,EAAWlG,MACV,cAAC,KAAD,CACEkE,QAASoD,EACTE,WAAYtI,IAIhB,uBAEoB,QAAnBgH,EAAWlG,MACV,gCACE,8DAEA,cAAC,KAAD,CACEkE,QAASqD,EACTC,WAAYpB,UAOpB,eAAC,IAAD,CACEhL,MAAM,mBACNsE,QAASF,EACTG,KAxSoB,WAC1BrF,IACGC,KADH,UAEOC,2CAFP,sBAGI,CAAE8E,KAAMiH,EAAgBjH,KAAMjD,IAAKiK,GACnC,CAAErK,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLiM,IACAC,IAEAnH,GAAkB,MAEnB3E,OAAM,SAAC9B,GACFA,EAAM0B,SAASE,KAAK5B,OACtB0N,EAAgB1N,EAAM0B,SAASE,KAAK5B,WA0RpC4G,SArRa,WACnBH,GAAkB,IAgRd,UAMG8G,GAAmB,4BAAIA,EAAgBpH,OACxC,cAAC,IAAD,CACEA,KAAK,gBACLsI,YAAY,QAIbhB,GAAgB,cAAC,IAAD,CAAO/M,QAAS+M,EAAc7M,KAAK,oBCvS/C8N,OAvHf,SAAuB5P,GACrB,IAAMpB,EAAQL,IACd,EAAkCgC,oBAAS,GAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KACA,EAAoC9M,qBAApC,mBAAOsP,EAAP,KAAmBC,EAAnB,KAwBA,SAASC,IACP/P,EAAMwD,QAAQC,KAAK,qBA4BrB,OAzCAQ,qBAAU,WACHrF,EAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChEoE,OAAM,SAAC9B,GACNxB,OANFM,EAAMwD,QAAQC,KAAK,YAQpB,IAgCD,qCACE,cAAC,IAAD,CAAQrC,MAAO,CAAEuJ,OAAQ,QAAUpI,QAASwN,EAAYjO,KAAK,UAA7D,kBAGA,cAAC,IAAD,CAAYuB,UAAU,mBAAmBC,MAAM,kBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACGmO,GACC,mCACE,cAAC,IAAD,CACEjO,QAAQ,QACRC,YAAagO,EACb/N,KAAK,QACLC,UAAQ,OAKZqL,GACA,8BACE,eAAC,KAAD,yBACE/F,KAAK,kBAzEI,CACrBuF,SAAU,CACRC,KAAM,GACNC,OAAQ,GAEVC,WAAY,CACVF,KAAM,MAkEE,IAGEU,SAjDG,SAACC,GAChB1I,QAAQC,IAAI,4BAA6ByI,GAEzChL,IACGC,KADH,UAEOC,2CAFP,oBAGI,CACE6B,IAAKiJ,EAAOjJ,IAAIyL,cAChB3I,KAAM5B,GAAa+H,EAAOnG,KAAK2I,eAC/B1I,KAAM7B,GAAa+H,EAAOlG,KAAK0I,gBAEjC,CAAE7L,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLyK,GAAa,GACbyC,EAAc,SAGf9M,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAM0B,SAASE,KAAK5B,OAChC4O,EAAc5O,EAAM0B,SAASE,KAAK5B,WA0B5B,UAKE,cAAC,KAAKyM,KAAN,CAAWtG,KAAK,OAAOuG,MAAM,gBAAgBC,UAAQ,EAArD,SACE,cAAC,IAAD,CAAOA,UAAQ,MAEjB,cAAC,KAAKF,KAAN,CAAWtG,KAAK,OAAOuG,MAAM,OAAOC,UAAQ,EAA5C,SACE,cAAC,IAAD,CAAOA,UAAQ,MAEjB,cAAC,KAAKF,KAAN,CAAWtG,KAAK,MAAMuG,MAAM,eAAeC,UAAQ,EAAnD,SACE,cAAC,IAAD,CAAOA,UAAQ,MAGjB,cAAC,KAAKF,KAAN,UACE,cAAC,IAAD,CAAQ7L,KAAK,UAAUiM,SAAS,SAAhC,4BAQPX,GACC,cAAC,KAAD,CACEjK,OAAO,UACPG,MAAM,WACN0K,SAAS,mBACTC,MAAO,CACL,cAAC,IAAD,CAAQnM,KAAK,UAAUS,QAASwN,EAAhC,iBAAgD,uB,UC7FxDtD,GAAWC,KAAXD,OACFE,GAAiB,CACrBC,SAAU,CACRC,KAAM,GACNC,OAAQ,GAEVC,WAAY,CACVF,KAAM,KA4RKoD,OAxRf,SAA4BjQ,GAC1B,MAAsCO,qBAAtC,mBAAO6G,EAAP,KAAoBY,EAApB,KACA,EAAwCzH,qBAAxC,mBAAO0H,EAAP,KAAqBgF,EAArB,KACA,EAA0B1M,qBAA1B,mBAAOoL,EAAP,KAAcwB,EAAd,KACA,EAAkC5M,oBAAS,GAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KAEM7F,EAAS6B,cAAT7B,KAEA5I,EAAQL,IAkEd,SAAS+O,IACPtN,EAAMwD,QAAQC,KAAK,oBAAsB2D,EAAY7C,IAAK,SAG5D,OArEAN,qBAAU,WACHrF,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,GAELuK,EAASlP,IAAU+C,aAEpBgC,OAAM,SAAC9B,GACNxB,OAIJ8C,IACGC,KADH,UAEOC,2CAFP,wBAGI,CAAE8E,KAAMA,GACR,CAAErD,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLoF,EAAepF,EAASE,KAAK,OAG9BE,OAAM,SAACC,GACN6B,QAAQC,IAAI9B,OAzBdjD,EAAMwD,QAAQC,KAAK,YA4BpB,IAwCD,qCACE,cAAC,IAAD,CACErC,MAAO,CAAEuJ,OAAQ,QACjBpI,QAAS+K,EACTxL,KAAK,UAHP,qCAOA,cAAC,IAAD,CAAYuB,UAAU,mBAAmBC,MAAM,yBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACG0F,GAAeuE,IAAUyB,GACxB,qCACE,cAAC,GAAD,CAAahG,YAAaA,IAC1B,eAAC,KAAD,yBACEC,KAAK,kBACDsF,IAFN,IAGEY,SAvDG,SAACC,GAChB,GAAKA,EAAOpH,KAAZ,CAIA,IAAMqD,EAAWxC,IAAOuG,EAAM,MAAUhF,QAAQ,OAChDgF,EAAM,KAAWA,EAAM,KAAStG,OAAO,cACvCpC,QAAQC,IAAI,4BAA6ByI,GAEzChL,IACGC,KADH,UAEOC,2CAFP,oCAGI,CACE+K,SAAUjG,EACVqC,SAAUjE,GAAc4H,GACxB/D,SAAUA,EACVF,SAAUiE,EAAOpH,KACjB7B,IAAK6C,EAAY7C,KAEnB,CAAEJ,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLyK,GAAa,MAGdrK,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAM0B,SAASE,KAAK5B,OAChC+L,EAAgB/L,EAAM0B,SAASE,KAAK5B,eAzBtCwM,MAAM,oBAsDIwC,cACE,GALJ,UAqBE,cAAC,KAAKvC,KAAN,CAAWtG,KAAK,OAAOuG,MAAM,OAAOC,UAAQ,EAA5C,SACE,cAAC,IAAD,MAGF,cAAC,KAAKF,KAAN,CAAWtG,KAAK,OAAOuG,MAAM,OAAOC,UAAQ,EAA5C,SACE,eAAC,KAAD,CAAQ5L,YAAY,uBAAuBqD,SAAS,EAApD,UACE,cAAC,GAAD,CAAQ9E,MAAM,KAAd,gBACA,cAAC,GAAD,CAAQA,MAAM,KAAd,gBACA,cAAC,GAAD,CAAQA,MAAM,KAAd,qBAIJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,uBAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,eAAb,0BACA,cAAC,KAAD,CAAOA,MAAM,SAAb,oBACA,cAAC,KAAD,CAAOA,MAAM,OAAb,kBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,kBAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,WAAb,sBACA,cAAC,KAAD,CAAOA,MAAM,WAAb,sBACA,cAAC,KAAD,CAAOA,MAAM,sBAAb,iCAGA,cAAC,KAAD,CAAOA,MAAM,kBAAb,6BACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,eAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,SAAb,oBACA,cAAC,KAAD,CAAOA,MAAM,kBAAb,6BACA,cAAC,KAAD,CAAOA,MAAM,aAAb,wBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,qBAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,OAAb,kBACA,cAAC,KAAD,CAAOA,MAAM,gBAAb,2BACA,cAAC,KAAD,CAAOA,MAAM,WAAb,sBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,eAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,OAAb,kBACA,cAAC,KAAD,CAAOA,MAAM,WAAb,sBACA,cAAC,KAAD,CAAOA,MAAM,oBAAb,+BACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,aAA3B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,OAAb,kBACA,cAAC,KAAD,CAAOA,MAAM,WAAb,sBACA,cAAC,KAAD,CAAOA,MAAM,UAAb,qBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAIJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,aAA3B,SACE,eAAC,KAASE,MAAV,WACE,cAAC,KAAD,CAAUtN,MAAM,YAAhB,uBACA,cAAC,KAAD,CAAUA,MAAM,sBAAhB,iCAGA,cAAC,KAAD,CAAUA,MAAM,cAAhB,8BAIJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,WAA3B,SACE,eAAC,KAASE,MAAV,WACE,cAAC,KAAD,CAAUtN,MAAM,gBAAhB,0BACA,cAAC,KAAD,CAAUA,MAAM,mBAAhB,8BAGA,cAAC,KAAD,CAAUA,MAAM,aAAhB,uBACA,cAAC,KAAD,CAAUA,MAAM,wBAAhB,kCAGA,cAAC,KAAD,CAAUA,MAAM,kBAAhB,iCAIJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,KAAKuG,MAAM,cAA3B,SACE,eAAC,KAASE,MAAV,WACE,cAAC,KAAD,CAAUtN,MAAM,WAAhB,sBACA,cAAC,KAAD,CAAUA,MAAM,sBAAhB,iCAGA,cAAC,KAAD,CAAUA,MAAM,yBAAhB,oCAGA,cAAC,KAAD,CAAUA,MAAM,yBAAhB,yCAMJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,MAAMuG,MAAM,wBAA5B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,OAAb,kBACA,cAAC,KAAD,CAAOA,MAAM,uBAAb,kCAGA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,MAAMuG,MAAM,cAA5B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,kBAAb,6BACA,cAAC,KAAD,CAAOA,MAAM,mBAAb,8BACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAGJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,MAAMuG,MAAM,kCAA5B,SACE,eAAC,KAAME,MAAP,WACE,cAAC,KAAD,CAAOtN,MAAM,MAAb,iBACA,cAAC,KAAD,CAAOA,MAAM,KAAb,gBACA,cAAC,KAAD,CAAOA,MAAM,GAAb,qBAIJ,cAAC,KAAKmN,KAAN,CAAWtG,KAAK,YAAYuG,MAAM,cAAlC,SACE,cAAC,IAAD,MAGF,cAAC,KAAKD,KAAN,CAAWtG,KAAK,QAAQuG,MAAM,eAA9B,SACE,sBAAMvK,UAAU,gBAAhB,SAAiCsI,MAGnC,cAAC,KAAKgC,KAAN,UACE,cAAC,IAAD,CAAQ7L,KAAK,UAAUiM,SAAS,SAAhC,6BAOPX,GACC,cAAC,KAAD,CACEjK,OAAO,UACPG,MAAM,WACN0K,SAAS,0DACTC,MAAO,CACL,cAAC,IAAD,CAAQnM,KAAK,UAAUS,QAhMrC,WACEvC,EAAMwD,QAAQC,KAAK,mBAAoB,UA+L3B,+BAAsD,WAGtD,cAAC,IAAD,CAAkBlB,QAAS+K,EAA3B,6CAAY,UAOjBrF,GAAgB,4BAAIA,aCxN/B,IAAM5H,GAAe,SAACC,GACpB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAKA,MAAO,CACLD,QACAE,SALmB,SAACC,GACpBF,EAASE,EAAEC,OAAOJ,UAQP2P,GA9Ff,SAAgBnQ,GACd,MAA8BO,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMqP,EAAa/P,GAAa,IAChC,EAA0BE,mBAAS,MAAnC,mBAAOW,EAAP,KAAcC,EAAd,KAkCA,OAhCA8C,qBAAU,WACM1F,KAGiB,WAA7BC,OAAOC,SAASC,UACa,YAA7BF,OAAOC,SAASC,UAEhBF,OAAOG,KAAK,SAAU,WAGvB,IAuBD,qBACEyC,MAAO,CACLC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBALf,SAQE,eAAC,IAAD,CAAOC,UAAU,WAAWC,KAAK,SAASN,MAAO,CAAEO,MAAO,SAA1D,UACGT,EACC,cAAC,IAAD,CACEU,QAAQ,eACRC,YAAaX,EACbY,KAAK,QACLC,UAAQ,EACRX,MAAO,CAAEY,UAAW,UAGtB,6BAEF,mDACA,yFACA,cAAC,IAAD,2BACMoO,GADN,IAEE1O,KAAK,QACLO,YAAY,oBACZH,KAAK,WACLI,OAAQ,cAACC,EAAA,EAAD,OAEV,cAAC,IAAD,CACEL,KAAK,UACLJ,KAAK,QACLY,MAAM,QACNC,QAtDa,WACnBpB,EAAS,MACTJ,GAAW,GACXyB,IACG0B,IADH,UACUxB,iCADV,YAC2C0N,EAAW5P,OAAS,CAC3D6P,QAAS,MAEV1N,MAAK,SAACC,GACLkC,QAAQC,IAAInC,EAASE,MACrB3E,aAAaqB,QAAQ,yBAA0BoD,EAASE,MACxDtE,OAAOG,KAAK,SAAU,YAEvBqE,OAAM,SAACC,GACNlC,GAAW,GACPkC,EAAIC,SAAmC,MAAxBD,EAAIL,SAASO,OAC9BhC,EAAS8B,EAAIL,SAASE,KAAKlB,SACxBT,EAAS,iDAuCZL,QAASA,EACTM,MAAO,CAAEO,MAAO,QANlB,SAQGb,EAAU,gBAAkB,gBCuBxBwP,OAjGf,SAAqBtQ,GACnB,MAAgCO,qBAAhC,mBAAOgQ,EAAP,KAAiBC,EAAjB,KAEAvM,qBAAU,WACR,IAAMrF,EAAQL,IACTK,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,OACNI,OAAM,SAAC9B,GACNxB,OAIJ8C,IACGC,KADH,UAEOC,2CAFP,oBAGI,GACA,CAAEyB,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACL4N,EAAY5N,EAASE,SAEtBE,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,OArBdlB,EAAMwD,QAAQC,KAAK,YAuBpB,IAMH,IAAM2I,EAAU,CACd,CACE9I,MAAO,WACPtE,IAAK,MACL+P,UAAW,YAEb,CACEzL,MAAO,QACPtE,IAAK,MACL+P,UAAW,SAEb,CACEzL,MAAO,OACPtE,IAAK,MACL+P,UAAW,QAEb,CACEzL,MAAO,eACPtE,IAAK,MACL+P,UAAW,eACXhP,OAAQ,SAACiG,GAAD,OAAU,4BAAIiB,IAAOjB,GAAMkB,OAAO,+BAE5C,CACE5D,MAAO,SACPtE,IAAK,SACL2C,MAAO,IACP5B,OAAQ,SAAC+C,GAAD,OACN,cAAC,IAAD,CAAOpB,KAAK,SAAZ,SACE,mBACEa,QAAS,WACPvC,EAAMwD,QAAQC,KACZ,gCAAkCX,EAAK9B,WAH7C,iCAcR,OACE,qCACE,cAAC,IAAD,CAAYqC,UAAU,mBAAmBC,MAAM,2BAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACE,cAAC,IAAD,CACEa,QAAS,WACPvC,EAAMwD,QAAQC,KAAK,0BAFvB,2BAOA,qDACA,cAAC,KAAD,CAAO2I,QAASA,EAASsD,WAAYa,EAAU7P,SA3DvD,SAAkB+P,GAChB3L,QAAQC,IAAI,SAAU0L,eCnCtBC,GAAQ1S,EAAQ,KAGpB0S,GAAMC,OAAO,CACXC,kBAAkB,EAClBC,UAAW,IACXC,UAAW,GACXC,gBAAiB,GACjBC,uBAAwB,IA8JXC,OA3Jf,SAAiBjR,GACf,IAAMpB,EAAQL,IACd,EAAkCgC,oBAAS,GAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KACA,EAAoC9M,qBAApC,mBAAOsP,EAAP,KAAmBC,EAAnB,KACA,EAAgDvP,qBAAhD,mBAAO2Q,EAAP,KAAyBC,EAAzB,KAeMlQ,EAbe,SAACX,GACpB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAOA,MAAO,CACLD,QACAE,SAPmB,SAACC,GACpBF,EAASE,EAAEC,OAAOJ,OAClB,IAAI4Q,EAASV,GAAMW,KAAK1Q,EAAEC,OAAOJ,OACjC2Q,EAAoBC,EAAOE,sBAOdjR,CAAa,IAwB9B,SAAS0P,IACP/P,EAAMwD,QAAQC,KAAK,iBAiCrB,OA/CAQ,qBAAU,WACHrF,EAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,OACNI,OAAM,SAAC9B,GACNxB,OAPFM,EAAMwD,QAAQC,KAAK,YASpB,IAqCD,qCACE,cAAC,IAAD,CAAQrC,MAAO,CAAEuJ,OAAQ,QAAUpI,QAASwN,EAAYjO,KAAK,UAA7D,kBAGA,cAAC,IAAD,CAAYuB,UAAU,mBAAmBC,MAAM,mBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACGmO,GACC,mCACE,cAAC,IAAD,CACEjO,QAAQ,QACRC,YAAagO,EACb/N,KAAK,QACLC,UAAQ,OAKZqL,GACA,8BACE,eAAC,KAAD,yBACE/F,KAAK,kBA/EI,CACrBuF,SAAU,CACRC,KAAM,GACNC,OAAQ,GAEVC,WAAY,CACVF,KAAM,MAwEE,IAGEU,SAtDG,SAACC,GAChB1I,QAAQC,IAAImM,GACZpM,QAAQC,IAAImM,EAAiBzF,QACG,IAA5ByF,EAAiBzF,OAMrBjJ,IACGC,KADH,UAEOC,2CAFP,mBAGI,CACE1B,SAAUwM,EAAOxM,SAASgP,cAC1B/O,SAAUuM,EAAOvM,SACjBsQ,MAAO/D,EAAO+D,MACdrJ,KAAMsF,EAAOtF,MAEf,CAAE/D,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLyK,GAAa,GACbyC,EAAc,SAEf9M,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAM0B,SAASE,KAAKlB,SAChCkO,EAAc5O,EAAM0B,SAASE,KAAKlB,YAtBpC8L,MAAM,6CA+CE,UAKE,cAAC,KAAKC,KAAN,CAAWtG,KAAK,WAAWuG,MAAM,WAAWC,UAAQ,EAApD,SACE,cAAC,IAAD,CAAOA,UAAQ,MAEjB,cAAC,KAAKF,KAAN,CAAWtG,KAAK,WAAWuG,MAAM,WAAWC,UAAQ,EAApD,SACE,cAAC,IAAD,2BAAW5M,GAAX,IAAqBa,KAAK,WAAW+L,UAAQ,OAE/C,4BAAIqD,IACJ,cAAC,KAAKvD,KAAN,CAAWtG,KAAK,QAAQuG,MAAM,gBAAgBC,UAAQ,EAAtD,SACE,cAAC,IAAD,CAAO/L,KAAK,QAAQ+L,UAAQ,MAE9B,cAAC,KAAKF,KAAN,CACEtG,KAAK,OACLuG,MAAM,OACN4D,MAAO,CACL,CACE3D,UAAU,IALhB,SASE,eAAC,KAAD,CAAQ5L,YAAY,mBAAmBwP,YAAU,EAAjD,UACE,cAAChF,OAAD,CAAQjM,MAAM,aAAd,gCACA,cAACiM,OAAD,CAAQjM,MAAM,OAAd,+BAIJ,cAAC,KAAKmN,KAAN,UACE,cAAC,IAAD,CAAQ7L,KAAK,UAAUiM,SAAS,SAAhC,4BAQPX,GACC,cAAC,KAAD,CACEjK,OAAO,UACPG,MAAM,WACN0K,SAAS,wBACTC,MAAO,CACL,cAAC,IAAD,CAAQnM,KAAK,UAAUS,QAASwN,EAAhC,iBAAgD,uBCzJ5DW,GAAQ1S,EAAQ,KAGpB0S,GAAMC,OAAO,CACXC,kBAAkB,EAClBC,UAAW,IACXC,UAAW,GACXC,gBAAiB,GACjBC,uBAAwB,IAsIXU,OAnIf,SAAuB1R,GACrB,IAAMpB,EAAQL,IACNyC,EAAaqI,cAAbrI,SACR,EAAkCT,oBAAS,GAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KACA,EAAoC9M,qBAApC,mBAAOsP,EAAP,KAAmBC,EAAnB,KACA,EAAgDvP,qBAAhD,mBAAO2Q,EAAP,KAAyBC,EAAzB,KAeMlQ,EAbe,SAACX,GACpB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAOA,MAAO,CACLD,QACAE,SAPmB,SAACC,GACpBF,EAASE,EAAEC,OAAOJ,OAClB,IAAI4Q,EAASV,GAAMW,KAAK1Q,EAAEC,OAAOJ,OACjC2Q,EAAoBC,EAAOE,sBAOdjR,CAAa,IAwB9B,SAAS0P,IACP/P,EAAMwD,QAAQC,KAAK,KA6BrB,OA3CAQ,qBAAU,WACHrF,EAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,OACNI,OAAM,SAAC9B,GACNxB,OAPFM,EAAMwD,QAAQC,KAAK,YASpB,IAiCD,qCACE,cAAC,IAAD,CAAQrC,MAAO,CAAEuJ,OAAQ,QAAUpI,QAASwN,EAAYjO,KAAK,UAA7D,kBAGA,cAAC,IAAD,CAAYuB,UAAU,mBAAmBC,MAAM,mBAC/C,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACGmO,GACC,mCACE,cAAC,IAAD,CACEjO,QAAQ,QACRC,YAAagO,EACb/N,KAAK,QACLC,UAAQ,OAKZqL,GACA,8BACE,eAAC,KAAD,yBACE/F,KAAK,kBA3EI,CACrBuF,SAAU,CACRC,KAAM,GACNC,OAAQ,GAEVC,WAAY,CACVF,KAAM,MAoEE,IAGEU,SAlDG,SAACC,GACgB,IAA5B0D,EAAiBzF,OAMrBjJ,IACGC,KADH,UAEOC,2CAFP,wBAGI,CACE1B,SAAUA,EACVC,SAAUuM,EAAOvM,UAEnB,CAAEkD,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLyK,GAAa,GACbyC,EAAc,SAEf9M,OAAM,SAAC9B,GACN4D,QAAQC,IAAI7D,EAAM0B,SAASE,KAAKlB,SAChCkO,EAAc5O,EAAM0B,SAASE,KAAKlB,YApBpC8L,MAAM,6CA6CE,UAKE,cAAC,KAAKC,KAAN,CAAWtG,KAAK,WAAWuG,MAAM,WAAWC,UAAQ,EAApD,SACE,cAAC,IAAD,2BAAW5M,GAAX,IAAqBa,KAAK,WAAW+L,UAAQ,OAE/C,4BAAIqD,IACJ,cAAC,KAAKvD,KAAN,UACE,cAAC,IAAD,CAAQ7L,KAAK,UAAUiM,SAAS,SAAhC,4BAQPX,GACC,cAAC,KAAD,CACEjK,OAAO,UACPG,MAAM,WACN0K,SAAS,4BACTC,MAAO,CACL,cAAC,IAAD,CAAQnM,KAAK,UAAUS,QAASwN,EAAhC,iBAAgD,uB,UCWjD4B,OA/If,SAAmC3R,GAEjC,IAAM4R,EAA0B5R,EAAM6R,kBAChCC,EAAWF,EAAwB,QAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILC,EAAWJ,EAAwB,QAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILE,EAAWL,EAAwB,QAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILG,EAAWN,EAAwB,QAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILI,EAAWP,EAAwB,QAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILK,EAAWR,EAAwB,KAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILM,EAAWT,EAAwB,MAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILO,EAAWV,EAAwB,MAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILQ,EAAWX,EAAwB,MAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILS,EAAWZ,EAAwB,MAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILU,EAAWb,EAAwB,KAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILW,EAAWd,EAAwB,MAAQvN,KAAI,SAAC0N,GAAD,OACnD,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAIX,OACE,qCACE,2EACA,sBAAK1O,UAAU,oBAAf,UACE,eAAC,IAAD,CAAKsP,OAAQ,GAAb,UACE,cAAC,IAAD,CAAK9F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGd,MAGL,cAAC,IAAD,CAAKjF,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGZ,MAGL,cAAC,IAAD,CAAKnF,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGX,SAIP,uBACA,eAAC,IAAD,CAAKU,OAAQ,GAAb,UACE,cAAC,IAAD,CAAK9F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGV,MAGL,cAAC,IAAD,CAAKrF,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGT,MAGL,cAAC,IAAD,CAAKtF,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGR,SAGA,IACP,uBACA,eAAC,IAAD,CAAKO,OAAQ,GAAb,UACE,cAAC,IAAD,CAAK9F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGP,MAGL,cAAC,IAAD,CAAKxF,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGN,MAGL,cAAC,IAAD,CAAKzF,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGL,SAIP,uBACA,eAAC,IAAD,CAAKI,OAAQ,GAAb,UACE,cAAC,IAAD,CAAK9F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGJ,MAGL,cAAC,IAAD,CAAK3F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGH,MAGL,cAAC,IAAD,CAAK5F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,QAAQsP,UAAU,EAA9B,SACGF,gBCxFAG,OA9Cf,SAAiC7S,GAE/B,IAAM4R,EAA0B5R,EAAM6R,kBAChCiB,EAASlB,EAAuB,GAAOvN,KAAI,SAAC0N,GAAD,OAC/C,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILgB,EAASnB,EAAuB,GAAOvN,KAAI,SAAC0N,GAAD,OAC/C,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAILiB,EAASpB,EAAuB,GAAOvN,KAAI,SAAC0N,GAAD,OAC/C,6BACE,mBAAG5C,KAAI,2BAAsB4C,GAA7B,SAAmCA,KAD5BA,MAKX,OACE,qCACE,gFACA,sBAAK1O,UAAU,oBAAf,UACE,eAAC,IAAD,CAAKsP,OAAQ,GAAb,UACE,cAAC,IAAD,CAAK9F,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,KAAKsP,UAAU,EAA3B,SACGE,MAGL,cAAC,IAAD,CAAKjG,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,KAAKsP,UAAU,EAA3B,SACGG,MAGL,cAAC,IAAD,CAAKlG,KAAM,EAAX,SACE,cAAC,KAAD,CAAMvJ,MAAM,KAAKsP,UAAU,EAA3B,SACGI,SAIP,8BCqIOC,OAvKf,SAAgCjT,GAC9B,MAAkDO,qBAAlD,mBAAO2S,EAAP,KAA0BC,EAA1B,KACA,EAGI5S,qBAHJ,mBACE6S,EADF,KAEEC,EAFF,KAIA,EAA8C9S,qBAA9C,mBAAO+S,EAAP,KAAwBC,EAAxB,KACA,EAGIhT,qBAHJ,mBACEiT,EADF,KAEEC,EAFF,KAIA,EAA8ClT,oBAAS,GAAvD,mBAAOmT,EAAP,KAAwBC,EAAxB,KACA,EAA8CpT,oBAAS,GAAvD,mBAAOqT,EAAP,KAAwBC,EAAxB,KAOMC,EAAW,WACfD,GAAmB,GACnBF,GAAmB,IAGfI,EAAe,WACnBF,GAAmB,GACnBF,GAAmB,IAGrB1P,qBAAU,WACR,IAAMrF,EAAQL,IACTK,GAIL4D,IACG0B,IADH,UACUxB,2CADV,oCACmE9D,IAChE+D,MAAK,SAACC,OACNI,OAAM,SAAC9B,GACNxB,OAGJ8C,IACGC,KADH,UAEOC,2CAFP,qCAGI,CAAEyD,KAAM6N,GACR,CAAE7P,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GAELuQ,EAAqBvQ,EAASE,SAE/BE,OAAM,SAACC,GACN6B,QAAQC,IAAI9B,MAGhBT,IACGC,KADH,UAEOC,2CAFP,mCAGI,CAAEyD,KAAM6N,GACR,CAAE7P,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GAEL2Q,EAAmB3Q,EAASE,SAE7BE,OAAM,SAACC,GACN6B,QAAQC,IAAI9B,MAGhBT,IACGC,KADH,UAEOC,2CAFP,4CAGI,GACA,CAAEyB,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLkC,QAAQC,IAAI,oBAAqBnC,EAASE,MAC1CuQ,EAAsCzQ,EAASE,SAEhDE,OAAM,SAACC,GACN6B,QAAQC,IAAI9B,MAGhBT,IACGC,KADH,UAEOC,2CAFP,0CAGI,GACA,CAAEyB,QAAS,CAAEvF,MAAOA,KAErB+D,MAAK,SAACC,GACLkC,QAAQC,IAAI,oBAAqBnC,EAASE,MAC1C2Q,EAAoC7Q,EAASE,SAE9CE,OAAM,SAACC,GACN6B,QAAQC,IAAI9B,OA/DdjD,EAAMwD,QAAQC,KAAK,YAiEpB,IAEH,IAAIwQ,EAAmC,OACrCb,QADqC,IACrCA,OADqC,EACrCA,EAAoC/O,KAAI,SAAC0N,GAAD,OACtC,6BAAoBA,EAAC,KAAZA,EAAC,QAGVmC,EAAiC,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAkCnP,KACxE,SAAC0N,GAAD,OAAO,6BAAoBA,EAAC,KAAZA,EAAC,QAGnB,EAAoCxR,mBAClC0G,MAASsB,IAAI,EAAG,QAAQC,QAAQ,QADlC,mBAAOwL,EAAP,KAIA,OAJA,KAKE,qCACE,cAAC,IAAD,CACE3Q,UAAU,mBACVC,MAAM,6BAER,qBAAKlC,MAAO,CAAEmC,QAAS,QAAvB,SACE,eAAC,IAAD,CAAO9B,UAAU,WAAWC,KAAK,SAAjC,UACGwR,GACC,qCACE,cAAC,GAAD,CACErB,kBAAmBqB,IAErB,uBACA,cAAC,IAAD,CAAQpR,KAAK,UAAUS,QAjHhB,WACjBoR,GAAmB,IAgHT,mDAGA,cAAC,IAAD,CACErQ,MAAM,wCACNsE,QAAS8L,EACT7L,KAAMiM,EACNhM,SAAUiM,EAJZ,SAMGX,GACC,mCAAGa,SAMVX,GACC,qCACE,cAAC,GAAD,CAAyBzB,kBAAmByB,IAC5C,uBACA,cAAC,IAAD,CAAQxR,KAAK,UAAUS,QAlIhB,WACjBsR,GAAmB,IAiIT,iDAGA,cAAC,IAAD,CACEvQ,MAAM,sCACNsE,QAASgM,EACT/L,KAAMiM,EACNhM,SAAUiM,EAJZ,SAMGP,GACC,mCAAGU,kBC+ENC,OArNf,WACE,MAAsC5T,oBAAS,GAA/C,mBAAO6T,EAAP,KAAoBC,EAApB,KACA,EAAoC9T,mBAAS,CAAES,SAAU,OAAzD,mBAAOoN,EAAP,KAAmBC,EAAnB,KACA,EAAoC9N,oBAAS,GAA7C,mBAAO+T,EAAP,KAAmBC,EAAnB,KACQC,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,OAAQC,EAAmBF,IAAnBE,MAAOC,EAAYH,IAAZG,QACzBpR,EAAUgC,cACV3C,EAAO5E,IAqCb,OAnCAgG,qBAAU,WACRzB,IACG0B,IADH,UACUxB,2CADV,gBACuD,CAAE2N,QAAS,MAC/D1N,MAAK,SAACC,GACLkC,QAAQC,IAAI,kBACZwP,GAAc,MAEfvR,OAAM,SAAC9B,GACNqT,GAAc,MAGlB,IAAM3V,EAAQL,IAEXK,GAC4B,WAA7BJ,OAAOC,SAASC,UACa,YAA7BF,OAAOC,SAASC,SAKlB8D,IACG0B,IADH,UAEOxB,2CAFP,oCAEgE9D,GAC5D,CAAEyR,QAAS,MAEZ1N,MAAK,SAACC,GACLyR,GAAe,GACfhG,EAAcxL,MAEfG,OAAM,SAAC9B,GACNxB,IACA2U,GAAe,MAdjB7V,OAAOG,KAAK,SAAU,WAgBvB,IAECyV,GAAe7V,IACV,qBAAK8E,UAAU,UAAf,wCAIP,qBAAKA,UAAU,MAAf,SACE,eAAC,IAAD,CAAQjC,MAAO,CAAEyT,UAAW,SAA5B,UACE,eAACL,EAAD,CAAQnR,UAAU,SAAlB,UACE,qBAAKA,UAAU,SACf,cAAC,IAAD,CAAKyR,QAAQ,MAAb,SAC0B,MAAvB1G,EAAWpN,UACV,qCACE,cAAC,IAAD,CAAK6L,KAAM,EAAX,SACG,cAAC,IAAD,CAAQnL,KAAM,GAAd,SAAmB0M,EAAWpN,aAEjC,cAAC,IAAD,CAAK6L,KAAM,YAKnB,eAAC,IAAD,WACgC,WAA7BrO,OAAOC,SAASC,SACf,mCACE,eAACiW,EAAD,CACEI,WAAW,MACXC,eAAe,IACfC,aAAc,SAACC,GACbpQ,QAAQC,IAAImQ,IAEdC,WAAY,SAACC,EAAWtT,GACtBgD,QAAQC,IAAIqQ,EAAWtT,IAP3B,UAUE,qBAAKuB,UAAU,SACf,eAAC,IAAD,CAAMwI,MAAM,OAAOwJ,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACE,cAAC,IAAK3H,KAAN,CAEE4H,KAAM,cAACC,EAAA,EAAD,IACNjT,QAAS,kBAAMiB,EAAQC,KAAK,oBAH9B,kBACM,KAMN,cAAC,IAAKkK,KAAN,CAEE4H,KAAM,cAACE,EAAA,EAAD,IACNlT,QAAS,kBAAMiB,EAAQC,KAAK,sBAH9B,6BACM,KAMe,SAApB2K,EAAWlG,MACV,cAAC,IAAKyF,KAAN,CAEE4H,KAAM,cAACE,EAAA,EAAD,IACNlT,QAAS,kBAAMiB,EAAQC,KAAK,kBAH9B,yBACM,KAOR,cAAC,IAAKkK,KAAN,CAEE4H,KAAM,cAACG,EAAA,EAAD,IACNnT,QAAS,kBAAMiB,EAAQC,KAAK,kBAH9B,0BACM,KAMN,cAAC,IAAKkK,KAAN,CAEE4H,KAAM,cAACG,EAAA,EAAD,IACNnT,QAAS,kBAAMiB,EAAQC,KAAK,cAH9B,qBACM,KAMN,cAAC,IAAKkK,KAAN,CAEE4H,KAAM,cAACG,EAAA,EAAD,IACNnT,QAAS,kBAAMiB,EAAQC,KAAK,uBAH9B,8BACM,aAUZ,6BAEF,eAAC,IAAD,WACG6Q,EACC,cAAC,IAAD,CACE1S,QAAQ,gBACRC,YAAY,6BACZC,KAAK,QACLC,UAAQ,EACRX,MAAO,CAAEY,UAAW,UAGtB,6BAEF,cAAC4S,EAAD,UACE,qBAAKvR,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAasS,KAAK,SAAS9V,UAAWgB,IACtC,cAAC,EAAD,CAAa8U,KAAK,UAAU9V,UAAWsQ,KACvC,cAAC,EAAD,CAAcwF,KAAK,YAAY9V,UAAWuD,IAC1C,cAAC,EAAD,CAAcuS,KAAK,gBAAgB9V,UAAW0F,IAC9C,cAAC,EAAD,CACEqQ,OAAK,EACLD,KAAM,CAAC,kBAAmB,KAC1B9V,UAAW6D,IAEb,cAAC,EAAD,CACEkS,OAAK,EACLD,KAAM,CAAC,0BAA2B,KAClC9V,UAAWkI,KAEb,cAAC,EAAD,CACE6N,OAAK,EACLD,KAAM,CAAC,+BAAgC,KACvC9V,UAAWmN,KAEb,cAAC,EAAD,CACE4I,OAAK,EACLD,KAAM,CAAC,oCAAqC,KAC5C9V,UAAWoQ,KAEb,cAAC,EAAD,CACE2F,OAAK,EACLD,KAAM,CAAC,uBAAwB,KAC/B9V,UAAW4H,KAEb,cAAC,EAAD,CACEmO,OAAK,EACLD,KAAM,CAAC,qBAAsB,KAC7B9V,UAAWqO,KAEb,cAAC,EAAD,CACE0H,OAAK,EACLD,KAAM,CAAC,0BAA2B,KAClC9V,UAAW+P,KAEb,cAAC,EAAD,CACEgG,OAAK,EACLD,KAAM,CAAC,gBAAiB,KACxB9V,UAAWyQ,KAEb,cAAC,EAAD,CACEsF,OAAK,EACLD,KAAM,CAAC,wBAAyB,KAChC9V,UAAWoR,KAEb,cAAC,EAAD,CACE2E,OAAK,EACLD,KAAM,CAAC,yCAA0C,KACjD9V,UAAW6R,KAEb,cAAC,EAAD,CACEkE,OAAK,EACLD,KAAM,CAAC,qBAAsB,KAC7B9V,UAAWoT,YAKnB,cAACyB,EAAD,+BChOGmB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpT,MAAK,YAAkD,IAA/CqT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAStW,OACP,cAAC,IAAMuW,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.eaaeb4ec.chunk.js","sourcesContent":["var CryptoJS = require('crypto-js');\n\nexport const decryptAESKEY = (key) => {\n  let ciphertext = localStorage.getItem('EncryptedSymmmetricKey');\n  let bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  let originalText = bytes.toString(CryptoJS.enc.Utf8);\n  sessionStorage.setItem('AESKEY', originalText);\n};\n","import { decryptAESKEY } from './KeyStorage';\n\n// return the user data from the local storage\nexport const getUser = () => {\n  const userStr = localStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  return null;\n};\n\n// return the token from the local storage\n// sets AES key into the session storage if blank.\\\nexport const getToken = () => {\n  const EncryptedSymmmetricKey = localStorage.getItem('EncryptedSymmmetricKey');\n  if (!EncryptedSymmmetricKey && window.location.pathname !== '/enroll') {\n    window.open('/enroll', '_self');\n  }\n  const token = localStorage.getItem('token');\n  if (token) {\n    const AESKEY = sessionStorage.getItem('AESKEY');\n    if (!AESKEY) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.open('/login', '_self');\n    }\n    return token;\n  } else {\n    return null;\n  }\n};\n\nexport const setAESKeyInSession = (key) => {\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  if (!AESKEY) {\n    decryptAESKEY(key);\n  }\n};\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n\n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('user', JSON.stringify(user));\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getToken } from \"./Common\";\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        getToken() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getToken } from \"./Common\";\n\n// handle the public routes\nfunction PublicRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !getToken() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/dashboard\" }} />\n        )\n      }\n    />\n  );\n}\n\nexport default PublicRoute;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Space, Input, Alert } from 'antd';\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\nimport { setAESKeyInSession, setUserSession } from '../Utils/Common';\n\nfunction Login(props) {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n\n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/users/signin`, {\n        username: username.value,\n        password: password.value,\n      })\n      .then((response) => {\n        setLoading(false);\n        setUserSession(response.data.token, response.data.user);\n        setAESKeyInSession(response.data.key);\n        window.open('/select_patient', '_self');\n      })\n      .catch((err) => {\n        setLoading(false);\n        if (err.reponse && err.response.status === 401)\n          setError(err.response.data.message);\n        else setError('Something went wrong. Please try again later.');\n      });\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <Space direction=\"vertical\" size=\"middle\" style={{ width: '400px' }}>\n        {error ? (\n          <Alert\n            message=\"Login Failed\"\n            description={error}\n            type=\"error\"\n            showIcon\n            style={{ textAlign: 'left' }}\n          />\n        ) : (\n          <></>\n        )}\n\n        <Input\n          {...username}\n          size=\"large\"\n          placeholder=\"Username\"\n          prefix={<UserOutlined />}\n        />\n        <Input.Password\n          {...password}\n          size=\"large\"\n          placeholder=\"Password\"\n          prefix={<KeyOutlined />}\n        />\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          shape=\"round\"\n          onClick={handleLogin}\n          loading={loading}\n          style={{ width: '100%' }}\n        >\n          {loading ? 'Logging In...' : 'Login'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nconst useFormInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return {\n    value,\n    onChange: handleChange,\n  };\n};\n\nexport default Login;\n","import React from 'react';\nimport { getUser, removeUserSession } from '../Utils/Common';\nimport { Button, PageHeader } from 'antd';\nfunction Dashboard(props) {\n  const user = getUser();\n\n  // handle click event of logout button\n  const handleLogout = () => {\n    removeUserSession();\n    window.open('/login', '_self');\n  };\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"Settings\" />\n      <div style={{ padding: '30px' }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            handleLogout();\n          }}\n          key=\"console\"\n        >\n          Logout\n        </Button>\n        <br></br>\n        <br></br>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            props.history.push('/users_module/reset_password/' + user.username);\n          }}\n          key=\"console\"\n        >\n          Change Password\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\nimport { Typography, AutoComplete, Space, Button, PageHeader } from 'antd';\nimport axios from 'axios';\nimport { getToken, removeUserSession } from '../Utils/Common';\n\nfunction SelectPatient(props) {\n  const { Text } = Typography;\n  const [options, setOptions] = useState();\n  const [selected, setSelected] = useState();\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //populate list of admitted residents\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/listAdmitted`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        let beds = response.data;\n        beds.map((el) => {\n          el.value = el.bed;\n          el.numeric = parseInt(el.bed.slice(0, -1));\n        });\n        function compare(a, b) {\n          if (a.numeric < b.numeric) {\n            return -1;\n          }\n          if (a.numeric > b.numeric) {\n            return 1;\n          }\n          return 0;\n        }\n        beds.sort(compare);\n\n        setOptions(beds);\n        //console.log(response.data)\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const onSelect = (val, option) => {\n    setSelected(option.value);\n  };\n\n  function handleSubmit() {\n    // move to this once implemented api versioning props.history.push('/patient_profile/' + selected, '_self');\n    window.open(`/patient_profile/${selected}`, '_self');\n  }\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"Select Patient\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          <Text>Input Patient Bed</Text>\n\n          <AutoComplete\n            style={{\n              width: 200,\n            }}\n            options={options}\n            placeholder=\"Select\"\n            onSelect={(val, option) => onSelect(val, option)}\n            filterOption={(inputValue, option) =>\n              option.value.indexOf(inputValue) !== -1\n            }\n            virtual={false}\n          />\n          {selected && (\n            <div>\n              <p>Selected Bed: {selected}</p>\n              <Button type=\"primary\" onClick={handleSubmit}>\n                Submit\n              </Button>\n            </div>\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default SelectPatient;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { PageHeader } from \"antd\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  NavLink,\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport {\n  getToken,\n  getUser,\n  removeUserSession,\n  setUserSession,\n} from \"../Utils/Common\";\n\nfunction Announcement() {\n  const history = useHistory();\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      //   history.push(\"/login\")\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  return (\n    <div>\n      <PageHeader className=\"site-page-header\" title=\"Announcements\" />\n    </div>\n  );\n}\n\nexport default Announcement;\n","const CryptoJS = require('crypto-js');\n\nexport const encryptField = (message) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  return CryptoJS.AES.encrypt(message, AESKEY).toString();\n};\n\nexport const encryptObject = (message) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  return CryptoJS.AES.encrypt(JSON.stringify(message), AESKEY).toString();\n};\n\nexport const decryptField = (ciphertext) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  let bytes = CryptoJS.AES.decrypt(ciphertext, AESKEY);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\nexport const decryptObject = (ciphertext) => {\n  // Encrypt\n  const AESKEY = sessionStorage.getItem('AESKEY');\n  let bytes = CryptoJS.AES.decrypt(JSON.parse(ciphertext), AESKEY);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n","import moment from 'moment-timezone';\nexport const progressRecordColumns = [\n  {\n    text: 'Date',\n    key: '_id',\n    dataField: 'formVals',\n    // fixed: 'left',\n    // width: 100,\n    formatter: (text) => <p>{JSON.parse(text).date}</p>,\n  },\n  {\n    text: 'Time',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).time}</p>,\n  },\n  {\n    text: 'General Condition',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p1}</p>,\n  },\n  {\n    text: 'Mental State',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p2}</p>,\n  },\n  {\n    text: 'Skin Care',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p3}</p>,\n  },\n  {\n    text: 'Hygiene/ Bathing',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p4}</p>,\n  },\n  {\n    text: 'Oral Care',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p5}</p>,\n  },\n  {\n    text: 'Feeding',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p6}</p>,\n  },\n  {\n    text: 'Bladder',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p7}</p>,\n  },\n  {\n    text: 'Bowel',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p8}</p>,\n  },\n  {\n    text: 'Mobility',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p9}</p>,\n  },\n  {\n    text: 'Rest at Night',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p10}</p>,\n  },\n  {\n    text: 'Therapy',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p11}</p>,\n  },\n  {\n    text: 'Visited',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text).p12}</p>,\n  },\n  {\n    text: 'Remarks',\n    key: '_id',\n    dataField: 'formVals',\n    formatter: (text) => <p>{JSON.parse(text)['r-remarks']}</p>,\n  },\n  {\n    text: 'Staff',\n    key: '_id',\n    dataField: 'staff',\n  },\n  {\n    text: 'Submitted D/T',\n    key: '_id',\n    dataField: 'creationDate',\n    formatter: (text) => (\n      <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>\n    ),\n    // fixed: 'right',\n    // width: 100,\n  },\n];\n","import React from 'react';\nimport { decryptField } from '../../Utils/EncryptContents';\nimport moment from 'moment-timezone';\n\nfunction PatientCard(props) {\n  return (\n    <>\n      <h4>\n        Bed: {props.patientData.bed}\n        <br></br>\n        Name: {decryptField(props.patientData.name)}\n        <br></br>\n        NRIC: {decryptField(props.patientData.NRIC)}\n        <br></br>\n        Profile Creation:{' '}\n        {moment(props.patientData.creationDate).format(\n          'MMMM Do YYYY, h:mm:ss a'\n        )}\n        <br></br>\n        Status: {props.patientData.status}\n      </h4>\n      <p>Identifier: {props.patientData.uuid}</p>\n    </>\n  );\n}\n\nexport default PatientCard;\n","import React, { useEffect, useState } from 'react';\nimport {\n  PageHeader,\n  Form,\n  Select,\n  Radio,\n  Button,\n  Result,\n  Space,\n  Modal,\n  Input,\n  DatePicker,\n  Checkbox,\n} from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { getToken, getUser, removeUserSession } from '../../Utils/Common';\nimport { useParams } from 'react-router';\nimport { encryptObject } from '../../Utils/EncryptContents';\nimport PatientCard from '../ResidentsModule/PatientCard';\n\nfunction ChangeRequestModal(props) {\n  const [isModalVisible, setIsModalVisible] = useState(true);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Modal\n        title=\"Basic Modal\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n    </>\n  );\n}\n\nexport default ChangeRequestModal;\n","export default __webpack_public_path__ + \"static/media/index.4350924a.less\";","import React, { useEffect, useReducer, useState } from 'react';\nimport {\n  PageHeader,\n  Space,\n  Button,\n  DatePicker,\n  Switch,\n  Modal,\n  Input,\n} from 'antd';\nimport RCTable from 'rc-table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\n\nimport { getToken, getUser, removeUserSession } from '../Utils/Common';\nimport { useParams } from 'react-router';\nimport {\n  encryptField,\n  decryptObject,\n  decryptField,\n} from '../Utils/EncryptContents';\nimport { restraintsPdfExport } from './PDFExport/RestraintsExport';\n// import { restraintsColumns } from './FormColumns/RestraintsTable';\nimport { progressRecordColumns } from './FormColumns/ProgressRecordTable';\nimport { progressRecordPdfExport } from './PDFExport/ProgressRecordExport';\nimport ChangeRequestModal from './Forms/ChangeRequestModal';\nimport PatientCard from './ResidentsModule/PatientCard';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nimport '../Assets/index.less';\n\nfunction PatientProfile(props) {\n  const [patientData, setPatientData] = useState();\n  const [patientError, setPatientError] = useState();\n  const [userRole, setUserRole] = useState({ role: null });\n  const [restraintsSubmissions, setRestraintsSubmissions] = useState();\n  const [restraintsDatePicker, setRestraintsDatePicker] = useState([\n    moment().add(-2, 'days').startOf('day'),\n    moment().endOf('day'),\n  ]);\n  const [progressRecordSubmissions, setProgressRecordSubmissions] = useState();\n  const [changeRequestRow, setChangeRequestRow] = useState();\n  const [changeRequestType, setChangeRequestType] = useState();\n  const [showChangeRequest, setShowChangeRequest] = useState(true);\n  const [changeRequestComment, setChangeRequestComment] = useState(true);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = (e, type) => {\n    // setReadmitResident({ uuid: e.uuid, name: e.name });\n    // setReadmitError(null);\n    if (type == 'restraints') {\n      console.log('restraints CR');\n    }\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const { RangePicker } = DatePicker;\n  const user = getUser();\n\n  let { bedNo } = useParams();\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        //for debug\n        setUserRole(user.role);\n        // console.log('role, ', user.role);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n    //obtain resident details based on bed from url params\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getByBed`,\n        { bed: bedNo },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setPatientData(response.data[0]);\n      })\n      .catch((error) => {\n        console.log(error);\n        // setPatientError(error.response.data.error);\n      });\n  }, []);\n\n  function compareTime(a, b) {\n    if (a.timeslot < b.timeslot) {\n      return 1;\n    }\n    if (a.timeslot > b.timeslot) {\n      return -1;\n    }\n    return 0;\n  }\n  function compareDate(a, b) {\n    if (a.dateTime < b.dateTime) {\n      return 1;\n    }\n    if (a.dateTime > b.dateTime) {\n      return -1;\n    }\n    return 0;\n  }\n\n  let changeRequest = (data) => {\n    console.log(data);\n  };\n\n  useEffect(() => {\n    //obtain resident restraint's form submission history\n\n    if (patientData) {\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/forms/restraintsForm/submissionHistory`,\n          {\n            uuid: patientData.uuid,\n            restraintsDatePicker: restraintsDatePicker,\n          },\n          { headers: { token: token } }\n        )\n        .then((response) => {\n          let formDataPros = response.data;\n          formDataPros.map((el) => {\n            el.formVals = decryptObject(el.formData);\n            el.timeslot = parseInt(el.timeslot);\n          });\n\n          formDataPros.sort(compareTime);\n          formDataPros.sort(compareDate);\n\n          setRestraintsSubmissions(formDataPros);\n          // console.log('FDR', formDataPros);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/forms/progressRecordForm/submissionHistory`,\n          {\n            uuid: patientData.uuid,\n            restraintsDatePicker: restraintsDatePicker,\n          },\n          { headers: { token: token } }\n        )\n        .then((response) => {\n          let formDataPros2 = response.data;\n          formDataPros2.map((el) => {\n            el.formVals = decryptObject(el.formData);\n          });\n\n          var preferredOrder = ['ND', 'AM', 'PM'];\n\n          formDataPros2.sort(function (a, b) {\n            return (\n              preferredOrder.indexOf(b.timeslot) -\n              preferredOrder.indexOf(a.timeslot)\n            );\n          });\n          formDataPros2.sort(compareDate);\n          setProgressRecordSubmissions(formDataPros2);\n          // console.log('prog', formDataPros2);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [patientData, restraintsDatePicker, isModalVisible]);\n\n  function handleClickRestraints() {\n    props.history.push(`/forms/restraints_form/${patientData.uuid}`);\n  }\n\n  function handleClickProgressRecord() {\n    props.history.push(`/forms/progress_record_form/${patientData.uuid}`);\n  }\n\n  function handleBack() {\n    props.history.push('/select_patient');\n  }\n  function generateRestraintsPDF() {\n    restraintsPdfExport(patientData, restraintsSubmissions);\n  }\n  function generateProgressRecordPDF() {\n    progressRecordPdfExport(patientData, progressRecordSubmissions);\n  }\n  function restraintsStatusChange(checked) {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/setRestraintsMonitoringStatus`,\n        {\n          uuid: patientData.uuid,\n          monitor: checked,\n        },\n        { headers: { token: token } }\n      )\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  function progressRecordStatusChange(checked) {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/setProgressRecordMonitoringStatus`,\n        {\n          uuid: patientData.uuid,\n          monitor: checked,\n        },\n        { headers: { token: token } }\n      )\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function handleChangeRequestComment(e) {\n    setChangeRequestComment(e.target.value);\n    console.log(e.target.value);\n  }\n\n  function handleChangeRequestSubmit() {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/forms/restraintsForm/changeRequest`,\n        {\n          _id: changeRequestRow,\n          changeRequestComment: encryptField(changeRequestComment),\n        },\n        { headers: { token: token } }\n      )\n      .then(() => {\n        setIsModalVisible(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const restraintsColumns = [\n    {\n      text: 'Date',\n      key: '_id',\n      dataField: 'formVals',\n      // fixed: \"left\",\n      // width: 100,\n      formatter: (text) => <p>{JSON.parse(text).date}</p>,\n    },\n    {\n      text: 'Time',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).time}</p>,\n    },\n    {\n      text: 'Restraints Applied Correctly',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r1}</p>,\n    },\n    {\n      text: 'Body & Limbs Comfortable',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r2}</p>,\n    },\n\n    {\n      text: 'Adequate Circulation (Restrained Limbs)',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r3}</p>,\n    },\n    {\n      text: 'Adequate ROM (Restrained Limbs)',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r4}</p>,\n    },\n\n    {\n      text: 'Skin Integrity Checked',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r5}</p>,\n    },\n    {\n      text: 'Type of Restraints',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text)['r-restraints-type']}</p>,\n    },\n    {\n      text: 'Remarks',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text)['r-remarks']}</p>,\n    },\n    {\n      text: 'Staff',\n      key: '_id',\n      dataField: 'staff',\n      // width: 50,\n    },\n    {\n      text: 'Submitted D/T',\n      key: '_id',\n      dataField: 'creationDate',\n      // width: 50,\n      formatter: (text) => (\n        <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>\n      ),\n      // fixed: \"right\",\n      // width: 100,\n    },\n    {\n      text: 'Changes',\n      key: '_id',\n      dataField: 'changeRequest',\n      // width: 50,\n      formatter: (text) => {\n        let changeRequestString = '';\n        let i = 1;\n        text.map((data) => {\n          console.log(data);\n          changeRequestString =\n            changeRequestString +\n            `[${i}. ${data.metadata} COMMENT: ${decryptField(data.comment)}] `;\n          i++;\n        });\n        console.log('new crs', changeRequestString);\n        {\n          return changeRequestString;\n        }\n      },\n\n      // fixed: \"right\",\n      // width: 100,\n    },\n    {\n      text: 'Action',\n      dataField: '_id',\n      // width: 50,\n      formatter: (data) => (\n        <>\n          <Button\n            onClick={() => {\n              setChangeRequestRow(data);\n              console.log('add CR, ', data);\n              showModal(data, 'restraints');\n            }}\n          >\n            Add Remark\n          </Button>\n        </>\n      ),\n      // fixed: \"right\",\n      // width: 100,\n    },\n  ];\n\n  const restraintsColumnsRestricted = [\n    {\n      text: 'Date',\n      key: '_id',\n      dataField: 'formVals',\n      // fixed: \"left\",\n      // width: 100,\n      formatter: (text) => <p>{JSON.parse(text).date}</p>,\n    },\n    {\n      text: 'Time',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).time}</p>,\n    },\n    {\n      text: 'Restraints Applied Correctly',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r1}</p>,\n    },\n    {\n      text: 'Body & Limbs Comfortable',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r2}</p>,\n    },\n\n    {\n      text: 'Adequate Circulation (Restrained Limbs)',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r3}</p>,\n    },\n    {\n      text: 'Adequate ROM (Restrained Limbs)',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r4}</p>,\n    },\n\n    {\n      text: 'Skin Integrity Checked',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text).r5}</p>,\n    },\n    {\n      text: 'Type of Restraints',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text)['r-restraints-type']}</p>,\n    },\n    {\n      text: 'Remarks',\n      key: '_id',\n      dataField: 'formVals',\n      // width: 50,\n      formatter: (text) => <p>{JSON.parse(text)['r-remarks']}</p>,\n    },\n    {\n      text: 'Staff',\n      key: '_id',\n      dataField: 'staff',\n      // width: 50,\n    },\n    {\n      text: 'Submitted D/T',\n      key: '_id',\n      dataField: 'creationDate',\n      // width: 50,\n      formatter: (text) => (\n        <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>\n      ),\n      // fixed: \"right\",\n      // width: 100,\n    },\n    {\n      text: 'Changes',\n      key: '_id',\n      dataField: 'changeRequest',\n      // width: 50,\n      formatter: (text) => {\n        let changeRequestString = '';\n        let i = 1;\n        text.map((data) => {\n          console.log(data);\n          changeRequestString =\n            changeRequestString +\n            `${i}. ${data.metadata} COMMENT: ${decryptField(data.comment)}; `;\n          i++;\n        });\n        console.log('new crs', changeRequestString);\n        {\n          return changeRequestString;\n        }\n      },\n\n      // fixed: \"right\",\n      // width: 100,\n    },\n  ];\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back to patient selector\n      </Button>\n\n      <PageHeader className=\"site-page-header\" title=\"Patient Profile\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {patientData && (\n            <>\n              <PatientCard patientData={patientData} />\n              <br></br>\n              <Button type=\"primary\" onClick={handleClickRestraints}>\n                Submit Restraints Form\n              </Button>\n              <Button\n                type=\"primary\"\n                onClick={handleClickProgressRecord}\n                style={{ background: '#32a852' }}\n              >\n                Submit Progress Record Form\n              </Button>\n              <br></br>\n              {userRole == 'full' && (\n                <>\n                  <h4>Monitoring Toggle</h4>\n                  <p>Restraints Monitoring:</p>\n                  <Switch\n                    defaultChecked={patientData.restraintsMonitoring}\n                    onChange={restraintsStatusChange}\n                  />{' '}\n                  Progress Record Monitoring:\n                  <Switch\n                    defaultChecked={patientData.progressRecordMonitoring}\n                    onChange={progressRecordStatusChange}\n                  />\n                </>\n              )}\n\n              <br></br>\n              <Space direction=\"vertical\" size={12}>\n                <span>Select Date for Reports below</span>\n                <RangePicker\n                  defaultValue={[\n                    moment().add(-2, 'days').startOf('day'),\n                    moment().startOf('day'),\n                  ]}\n                  onChange={(e) => {\n                    let endDate = e[1];\n                    endDate = moment(endDate).endOf('day');\n                    // console.log(moment(endDate).format());\n                    setRestraintsDatePicker([e[0], endDate]);\n                  }}\n                />\n              </Space>\n              <h3>Restraints Form submission history</h3>\n              <Button\n                style={{ margin: '10px' }}\n                onClick={generateRestraintsPDF}\n                type=\"default\"\n              >\n                Export Restraints Data\n              </Button>\n              <div className=\"pcf\">\n                {/* <RCTable\n                  style={{ width: mobileView ? 400 : 1100 }}\n                  scroll={{ x: 300 }}\n                  columns={restraintsColumns}\n                  className=\"table\"\n                  data={restraintsSubmissions}\n                /> */}\n                {restraintsSubmissions && (\n                  <>\n                    {userRole == 'full' ? (\n                      <BootstrapTable\n                        keyField=\"id\"\n                        data={restraintsSubmissions}\n                        columns={restraintsColumns}\n                        changeRequest={changeRequest}\n                      />\n                    ) : (\n                      <BootstrapTable\n                        keyField=\"id\"\n                        data={restraintsSubmissions}\n                        columns={restraintsColumnsRestricted}\n                        changeRequest={changeRequest}\n                      />\n                    )}\n                  </>\n                )}\n              </div>\n              <h3>Progress Record Form submission history</h3>\n              <Button\n                style={{ margin: '10px' }}\n                onClick={generateProgressRecordPDF}\n                type=\"default\"\n              >\n                Export Progress Record Data\n              </Button>\n              <div className=\"pcf\">\n                {/* <RCTable\n                  style={{ width: mobileView ? 400 : 1100 }}\n                  scroll={{ x: 300 }}\n                  columns={progressRecordColumns}\n                  data={progressRecordSubmissions}\n                  className=\"table\"\n                /> */}\n                {progressRecordSubmissions && (\n                  <BootstrapTable\n                    keyField=\"id\"\n                    data={progressRecordSubmissions}\n                    columns={progressRecordColumns}\n                  />\n                )}\n              </div>\n            </>\n          )}\n\n          {patientError && <p>{patientError}</p>}\n        </Space>\n      </div>\n\n      <Modal\n        title=\"Change Request\"\n        visible={isModalVisible}\n        onOk={handleChangeRequestSubmit}\n        onCancel={handleCancel}\n      >\n        {changeRequestRow && <p>{changeRequestRow}</p>}\n        {changeRequestComment && <p>{changeRequestComment}</p>}\n        <Input\n          name=\"changeRequest\"\n          onChange={handleChangeRequestComment}\n        ></Input>\n\n        {/* {readmitError && <Alert message={readmitError} type=\"error\" />} */}\n      </Modal>\n    </>\n  );\n}\n\nexport default PatientProfile;\n","import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport moment from 'moment-timezone';\nimport { decryptField } from '../../Utils/EncryptContents';\nexport const restraintsPdfExport = (patientData, restraintsSubmissions) => {\n  const doc = new jsPDF('landscape');\n\n  doc.text('Restraints Report', 5, 15);\n  doc.setFontSize(10);\n  doc.text('Resident Name: ' + decryptField(patientData.name), 5, 30);\n  doc.text('Resident NRIC: ' + decryptField(patientData.NRIC), 5, 35);\n  doc.text('Report Generated: ' + moment().toDate(), 5, 40);\n\n  let tableData = [];\n\n  for (let i = 0; i < restraintsSubmissions.length; i++) {\n    let row = [];\n    console.log(JSON.parse(restraintsSubmissions[i].formVals).time);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).date);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).time);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r1);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r2);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r3);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r4);\n    row.push(JSON.parse(restraintsSubmissions[i].formVals).r5);\n    row.push(\n      JSON.parse(restraintsSubmissions[i].formVals)['r-restraints-type']\n    );\n    row.push(JSON.parse(restraintsSubmissions[i].formVals)['r-remarks']);\n    row.push(restraintsSubmissions[i].staff);\n    row.push(\n      moment(restraintsSubmissions[i].creationDate).format(\n        'MMMM Do YYYY, h:mm:ss a'\n      )\n    );\n    tableData.push(row);\n  }\n\n  doc.autoTable({\n    theme: 'grid',\n    startY: 50,\n    head: [\n      [\n        'Date',\n        'Time',\n        'Restraints Applied Correctly',\n        'Body & Limbs in Comfortable Position',\n        'Adequate Circulation (Restrained Limbs)',\n        'Adequate ROM (Restrained Limbs)',\n        'Skin Integrity Checked',\n        'Restraints Type',\n        'Remarks',\n        'Staff Signature',\n        'Submission D/T',\n      ],\n    ],\n    body: tableData,\n  });\n\n  doc.save('table.pdf');\n};\n","import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport moment from 'moment-timezone';\nimport { decryptField } from '../../Utils/EncryptContents';\nexport const progressRecordPdfExport = (\n  patientData,\n  progressRecordSubmissions\n) => {\n  const doc = new jsPDF('landscape');\n\n  doc.text('Progress Record Report', 5, 15);\n  doc.setFontSize(10);\n  doc.text('Resident Name: ' + decryptField(patientData.name), 5, 30);\n  doc.text('Resident NRIC: ' + decryptField(patientData.NRIC), 5, 35);\n  doc.text('Report Generated: ' + moment().toDate(), 5, 40);\n  doc.setFontSize(7);\n\n  let tableData = [];\n\n  for (let i = 0; i < progressRecordSubmissions.length; i++) {\n    let row = [];\n    console.log(JSON.parse(progressRecordSubmissions[i].formVals));\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).date);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).time);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p1);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p2);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p3);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p4);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p5);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p6);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p7);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p8);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p9);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p10);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p11);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals).p12);\n    row.push(JSON.parse(progressRecordSubmissions[i].formVals)['r-remarks']);\n    row.push(progressRecordSubmissions[i].staff);\n    row.push(\n      moment(progressRecordSubmissions[i].creationDate).format(\n        'MMMM Do YYYY, h:mm:ss a'\n      )\n    );\n    tableData.push(row);\n  }\n\n  doc.autoTable({\n    theme: 'grid',\n    startY: 50,\n    styles: { fontSize: 7 },\n    head: [\n      [\n        'Date',\n        'Time',\n        'General Condition',\n        'Mental State\t',\n        'Skin Care',\n        'Hygiene/Bathing',\n        'Oral Care',\n        'Feeding',\n        'Bladder',\n        'Bowel',\n        'Mobility',\n        'Rest at Night',\n        'Therapy',\n        'Visited',\n        'Remarks',\n        'Staff Signature',\n        'Submission D/T',\n      ],\n    ],\n    body: tableData,\n  });\n\n  doc.save('table.pdf');\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  PageHeader,\n  Form,\n  Select,\n  Radio,\n  Button,\n  Result,\n  Space,\n  Input,\n  DatePicker,\n} from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { getToken, getUser, removeUserSession } from '../../Utils/Common';\nimport { useParams } from 'react-router';\nimport { encryptObject } from '../../Utils/EncryptContents';\nimport PatientCard from '../ResidentsModule/PatientCard';\n\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 30,\n    offset: 0,\n  },\n  wrapperCol: {\n    span: 50,\n  },\n};\n\nfunction RestraintsForm(props) {\n  const [patientData, setPatientData] = useState();\n  const [patientError, setPatientError] = useState();\n  const [selectedDateTime, setSelectedDateTime] = useState(null);\n  const [staff, setStaff] = useState();\n  const [submitted, setSubmitted] = useState(false);\n\n  let { uuid } = useParams();\n\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        setStaff(getUser().username);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //obtain resident details based on uuid from url params\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getByUUID`,\n        { uuid: uuid },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setPatientData(response.data[0]);\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setPatientError(error.response.data.error);\n      });\n  }, []);\n\n  const onFinish = (values) => {\n    if (!values.time) {\n      alert('Time is missing');\n      return;\n    }\n\n    const dateTime = moment(values['date']).startOf('day');\n    values['date'] = values['date'].format('YYYY-MM-DD');\n    console.log('Received values of form: ', JSON.stringify(values));\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/forms/restraintsForm/submit`,\n        {\n          resident: uuid,\n          formData: encryptObject(values),\n          bed: patientData.bed,\n          dateTime: dateTime,\n          timeslot: values.time,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        //console.log(response.data[0])\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setPatientError(error.response.data.error);\n      });\n  };\n  function handleNewPatient() {\n    props.history.push('/select_patient/', '_self');\n  }\n  function handleNewFormSamePatient() {\n    props.history.push('/patient_profile/' + patientData.bed, '_self');\n  }\n\n  return (\n    <>\n      <Button\n        style={{ margin: '10px' }}\n        onClick={handleNewFormSamePatient}\n        type=\"default\"\n      >\n        Back to patient profile\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Restraints Form\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {patientData && staff && !submitted && (\n            <>\n              <PatientCard patientData={patientData} />\n\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"date\" label=\"Date\" required>\n                  <DatePicker />\n                </Form.Item>\n\n                <Form.Item\n                  onChange={() => {\n                    console.log('time change');\n                  }}\n                  name=\"time\"\n                  label=\"Time\"\n                  required\n                >\n                  <Select placeholder=\"Select time of check\" virtual={false}>\n                    <Option value=\"0000\">0000</Option>\n                    <Option value=\"0200\">0200</Option>\n                    <Option value=\"0400\">0400</Option>\n                    <Option value=\"0600\">0600</Option>\n                    <Option value=\"0800\">0800</Option>\n                    <Option value=\"1000\">1000</Option>\n                    <Option value=\"1200\">1200</Option>\n                    <Option value=\"1400\">1400</Option>\n                    <Option value=\"1600\">1600</Option>\n                    <Option value=\"1800\">1800</Option>\n                    <Option value=\"2000\">2000</Option>\n                    <Option value=\"2200\">2200</Option>\n                  </Select>\n                </Form.Item>\n\n                {selectedDateTime && (\n                  <>\n                    <p>{selectedDateTime}</p>\n                    <p>{}</p>\n                  </>\n                )}\n\n                <Form.Item name=\"r1\" label=\"1. Restraints applied correctly\">\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  name=\"r2\"\n                  label=\"2. Body & limbs in comfortable position\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  name=\"r3\"\n                  label=\"3. (Restrained Extremities) Adequate circulation\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  name=\"r4\"\n                  label=\"4. (Restrained Extremities) Adequate ROM\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"r5\" label=\"5. Skin integrity checked\">\n                  <Radio.Group>\n                    <Radio value=\"Y\">Yes</Radio>\n                    <Radio value=\"N\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"r-restraints-type\"\n                  label=\"6. Type of Restraints\"\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item name=\"r-remarks\" label=\"7. Remarks\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"staff\" label=\"Submitted by\">\n                  <span className=\"ant-form-text\">{staff}</span>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </>\n          )}\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"You may view the submitted data on patient profile page\"\n              extra={[\n                <Button type=\"primary\" onClick={handleNewPatient} key=\"console\">\n                  Select new patient\n                </Button>,\n                <Button key=\"buy\" onClick={handleNewFormSamePatient}>\n                  Submit new form for same patient\n                </Button>,\n              ]}\n            />\n          )}\n\n          {patientError && <p>{patientError}</p>}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default RestraintsForm;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader, Switch } from 'antd';\nimport {\n  Typography,\n  Table,\n  Space,\n  Button,\n  Popconfirm,\n  message,\n  Modal,\n  Form,\n  Input,\n  Alert,\n} from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport {\n  getToken,\n  getUser,\n  removeUserSession,\n  setUserSession,\n} from '../../Utils/Common';\nimport { decryptField } from '../../Utils/EncryptContents';\n\nfunction ResidentsModuleMainList(props) {\n  const { Text, Link } = Typography;\n  const [userObject, setUserObject] = useState({ username: null });\n  const [patientData, setPatientData] = useState();\n  const [dischargedPatientData, setDischargedPatientData] = useState();\n  const [readmitBed, setReadmitBed] = useState();\n  const [readmitResident, setReadmitResident] = useState();\n  const [readmitError, setReadmitError] = useState();\n\n  const token = getToken();\n  const user = getUser();\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        setUserObject(user);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    populateAdmittedResidents();\n    populateDischargedResidents();\n  }, []);\n\n  function populateAdmittedResidents() {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/listAdmittedFullDetails`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        let beds = response.data;\n\n        beds.map((el) => {\n          el.name = decryptField(el.name);\n          el.NRIC = decryptField(el.NRIC);\n          el.numeric = parseInt(el.bed);\n        });\n        //console.log(response.data)\n        function compare(a, b) {\n          if (a.numeric < b.numeric) {\n            return -1;\n          }\n          if (a.numeric > b.numeric) {\n            return 1;\n          }\n          return 0;\n        }\n        beds.sort(compare);\n\n        setPatientData(beds);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  function populateDischargedResidents() {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/listDischargedFullDetails`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        let beds = response.data;\n\n        beds.map((el) => {\n          el.name = decryptField(el.name);\n          el.NRIC = decryptField(el.NRIC);\n        });\n        setDischargedPatientData(beds);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = (e) => {\n    setReadmitResident({ uuid: e.uuid, name: e.name });\n    setReadmitError(null);\n    setIsModalVisible(true);\n  };\n  const handleReadmitSubmit = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/readmit`,\n        { uuid: readmitResident.uuid, bed: readmitBed },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        populateAdmittedResidents();\n        populateDischargedResidents();\n\n        setIsModalVisible(false);\n      })\n      .catch((error) => {\n        if (error.response.data.error) {\n          setReadmitError(error.response.data.error);\n        }\n      });\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  function discharge(uuid) {\n    //populate list of admitted residents\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/discharge`,\n        { uuid: uuid },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        populateAdmittedResidents();\n        populateDischargedResidents();\n      })\n      .catch((error) => {\n        console.log(error.error);\n      });\n  }\n\n  function handleReadmitNewBed(e) {\n    setReadmitBed(e.target.value);\n  }\n  function handleChangeMonitoringRestraints(e) {\n    let monitor;\n    if (e.restraintsMonitoring) {\n      monitor = false;\n      console.log('turn off');\n    } else {\n      monitor = true;\n      console.log('turn on');\n    }\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/setRestraintsMonitoringStatus`,\n        { uuid: e.uuid, monitor: monitor },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        populateAdmittedResidents();\n        populateDischargedResidents();\n      })\n      .catch((error) => {\n        console.log(error.error);\n      });\n  }\n\n  function handleChangeMonitoringProgress(e) {\n    // console.log(e);\n    let monitor;\n    if (e.progressRecordMonitoring) {\n      monitor = false;\n      console.log('turn off');\n    } else {\n      monitor = true;\n      console.log('turn on');\n    }\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/setProgressRecordMonitoringStatus`,\n        { uuid: e.uuid, monitor: monitor },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        populateAdmittedResidents();\n        populateDischargedResidents();\n      })\n      .catch((error) => {\n        console.log(error.error);\n      });\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      key: '_id',\n      dataIndex: 'name',\n    },\n    {\n      title: 'NRIC',\n      key: '_id',\n      dataIndex: 'NRIC',\n    },\n    {\n      title: 'Bed',\n      key: '_id',\n      dataIndex: 'bed',\n    },\n    {\n      title: 'Initial admission',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push('/patient_profile/' + data.bed);\n            }}\n          >\n            View Patient\n          </a>\n          <Popconfirm\n            title=\"Are you sure to discharge this patient?\"\n            onConfirm={() => discharge(data.uuid)}\n            onCancel={''}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <a href=\"#\">Discharge</a>\n          </Popconfirm>\n          <Switch\n            checked={data.restraintsMonitoring}\n            onChange={() => {\n              console.log(data.restraintsMonitoring);\n              handleChangeMonitoringRestraints(data);\n            }}\n            checkedChildren=\"R\"\n            unCheckedChildren=\"R\"\n          />{' '}\n          <Switch\n            checked={data.progressRecordMonitoring}\n            onChange={() => {\n              handleChangeMonitoringProgress(data);\n            }}\n            checkedChildren=\"P\"\n            unCheckedChildren=\"P\"\n          />\n        </Space>\n      ),\n    },\n  ];\n\n  const columnsRestricted = [\n    {\n      title: 'Name',\n      key: '_id',\n      dataIndex: 'name',\n    },\n    {\n      title: 'NRIC',\n      key: '_id',\n      dataIndex: 'NRIC',\n    },\n    {\n      title: 'Bed',\n      key: '_id',\n      dataIndex: 'bed',\n    },\n    {\n      title: 'Initial admission',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push('/patient_profile/' + data.bed);\n            }}\n          >\n            View Patient\n          </a>\n        </Space>\n      ),\n    },\n  ];\n\n  const columnsDischarged = [\n    {\n      title: 'Name',\n      key: '_id',\n      dataIndex: 'name',\n    },\n    {\n      title: 'NRIC',\n      key: '_id',\n      dataIndex: 'NRIC',\n    },\n    // {\n    //   title: 'Bed',\n    //   key: '_id',\n    //   dataIndex: 'bed',\n    // },\n    {\n      title: 'Initial admission',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push('/patient_profile/' + data.uuid);\n            }}\n          >\n            View Patient\n          </a>\n\n          <Button\n            type=\"secondary\"\n            onClick={() => {\n              showModal(data);\n            }}\n          >\n            Re-admit\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"Residents Module\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {userObject.role == 'full' && (\n            <Button\n              onClick={() => {\n                props.history.push('/residents_module/admit');\n              }}\n            >\n              Admit New Patient\n            </Button>\n          )}\n          {/* <Text>Input Patient Bed</Text> */}\n          <h3>Table of Admitted Patients</h3>\n          {userObject.role == 'full' && (\n            <Table\n              columns={columns}\n              dataSource={patientData}\n              // onChange={onChange}\n            />\n          )}\n          {userObject.role == 'restricted' && (\n            <Table\n              columns={columnsRestricted}\n              dataSource={patientData}\n              // onChange={onChange}\n            />\n          )}\n          <br></br>\n\n          {userObject.role == 'full' && (\n            <div>\n              <h3>Table of Discharged Patients</h3>\n\n              <Table\n                columns={columnsDischarged}\n                dataSource={dischargedPatientData}\n                // onChange={onChange}\n              />\n            </div>\n          )}\n        </Space>\n\n        <Modal\n          title=\"Readmit Resident\"\n          visible={isModalVisible}\n          onOk={handleReadmitSubmit}\n          onCancel={handleCancel}\n        >\n          {readmitResident && <p>{readmitResident.name}</p>}\n          <Input\n            name=\"readmitNewBed\"\n            addonBefore=\"Bed\"\n            // onChange={handleReadmitNewBed}\n          ></Input>\n\n          {readmitError && <Alert message={readmitError} type=\"error\" />}\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default ResidentsModuleMainList;\n","import React, { useEffect, useState } from 'react';\nimport { Space, Button, Input, Result, Alert, PageHeader, Form } from 'antd';\nimport axios from 'axios';\nimport { getToken, removeUserSession } from '../../Utils/Common';\nimport { encryptField } from '../../Utils/EncryptContents';\n\nfunction AdmitResident(props) {\n  const token = getToken();\n  const [submitted, setSubmitted] = useState(false);\n  const [admitError, setAdmitError] = useState();\n\n  const formItemLayout = {\n    labelCol: {\n      span: 30,\n      offset: 0,\n    },\n    wrapperCol: {\n      span: 50,\n    },\n  };\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  function handleBack() {\n    props.history.push('/residents_module');\n  }\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/admit`,\n        {\n          bed: values.bed.toUpperCase(),\n          name: encryptField(values.name.toUpperCase()),\n          NRIC: encryptField(values.NRIC.toUpperCase()),\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        setAdmitError(null);\n        //console.log(response.data[0])\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setAdmitError(error.response.data.error);\n        //   setPatientError(error.response.data.error)\n      });\n  };\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Admit Patient\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {admitError && (\n            <>\n              <Alert\n                message=\"Error\"\n                description={admitError}\n                type=\"error\"\n                showIcon\n              />\n            </>\n          )}\n\n          {!submitted && (\n            <div>\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"name\" label=\"Resident Name\" required>\n                  <Input required />\n                </Form.Item>\n                <Form.Item name=\"NRIC\" label=\"NRIC\" required>\n                  <Input required />\n                </Form.Item>\n                <Form.Item name=\"bed\" label=\"Resident Bed\" required>\n                  <Input required />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"Patient Admitted\"\n              extra={[\n                <Button type=\"primary\" onClick={handleBack} key=\"console\">\n                  Back\n                </Button>,\n              ]}\n            />\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default AdmitResident;\n","import React, { useEffect, useState } from 'react';\nimport {\n  PageHeader,\n  Form,\n  Select,\n  Radio,\n  Button,\n  Result,\n  Space,\n  Input,\n  DatePicker,\n  Checkbox,\n} from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { getToken, getUser, removeUserSession } from '../../Utils/Common';\nimport { useParams } from 'react-router';\nimport { encryptObject } from '../../Utils/EncryptContents';\nimport PatientCard from '../ResidentsModule/PatientCard';\n\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 30,\n    offset: 0,\n  },\n  wrapperCol: {\n    span: 50,\n  },\n};\n\nfunction ProgressRecordForm(props) {\n  const [patientData, setPatientData] = useState();\n  const [patientError, setPatientError] = useState();\n  const [staff, setStaff] = useState();\n  const [submitted, setSubmitted] = useState(false);\n\n  let { uuid } = useParams();\n\n  const token = getToken();\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {\n        //console.log(response)\n        setStaff(getUser().username);\n      })\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //obtain resident details based on uuid from url params\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getByUUID`,\n        { uuid: uuid },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setPatientData(response.data[0]);\n        //console.log(response.data[0])\n      })\n      .catch((err) => {\n        console.log(err);\n        // setPatientError(error.response.data.error);\n      });\n  }, []);\n\n  const onFinish = (values) => {\n    if (!values.time) {\n      alert('Time is missing');\n      return;\n    }\n    const dateTime = moment(values['date']).startOf('day');\n    values['date'] = values['date'].format('YYYY-MM-DD');\n    console.log('Received values of form: ', values);\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/forms/progressRecordForm/submit`,\n        {\n          resident: uuid,\n          formData: encryptObject(values),\n          dateTime: dateTime,\n          timeslot: values.time,\n          bed: patientData.bed,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        //console.log(response.data[0])\n      })\n      .catch((error) => {\n        console.log(error.response.data.error);\n        setPatientError(error.response.data.error);\n      });\n  };\n  function handleNewPatient() {\n    props.history.push('/select_patient/', '_self');\n  }\n  function handleNewFormSamePatient() {\n    props.history.push('/patient_profile/' + patientData.bed, '_self');\n  }\n\n  return (\n    <>\n      <Button\n        style={{ margin: '10px' }}\n        onClick={handleNewFormSamePatient}\n        type=\"default\"\n      >\n        Back to patient profile\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Progress Record Form\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {patientData && staff && !submitted && (\n            <>\n              <PatientCard patientData={patientData} />\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n                initialValues={\n                  {\n                    // [\"p1\"]: \"Satisfactory\" ,\n                    // [\"p2\"]: \"Oriented\",\n                    // [\"p3\"]: \"Intact\",\n                    // [\"p4\"]: \"Self\",\n                    // [\"p5\"]: \"Self\",\n                    // [\"p6\"]: \"Self\",\n                    // [\"p7\"]: \"Continent\",\n                    // [\"p8\"]: \"Bowel Opened\",\n                    // [\"p9\"]: \"Ambulant\",\n                    // [\"p10\"]: \"Good\",\n                    // [\"p11\"]: \"Active Exercise\",\n                    // [\"p12\"]: \"No\",\n                  }\n                }\n              >\n                <Form.Item name=\"date\" label=\"Date\" required>\n                  <DatePicker />\n                </Form.Item>\n\n                <Form.Item name=\"time\" label=\"Time\" required>\n                  <Select placeholder=\"Select time of check\" virtual={false}>\n                    <Option value=\"ND\">ND</Option>\n                    <Option value=\"AM\">AM</Option>\n                    <Option value=\"PM\">PM</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item name=\"p1\" label=\"1. General Condition\">\n                  <Radio.Group>\n                    <Radio value=\"Satisfactory\">Satisfactory</Radio>\n                    <Radio value=\"Unwell\">Unwell</Radio>\n                    <Radio value=\"Poor\">Poor</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p2\" label=\"2. Mental State\">\n                  <Radio.Group>\n                    <Radio value=\"Oriented\">Oriented</Radio>\n                    <Radio value=\"Confused\">Confused</Radio>\n                    <Radio value=\"Behavioural Problem\">\n                      Behavioural Problem\n                    </Radio>\n                    <Radio value=\"Uncommunicative\">Uncommunicative</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p3\" label=\"3. Skin Care\">\n                  <Radio.Group>\n                    <Radio value=\"Intact\">Intact</Radio>\n                    <Radio value=\"Impaired/Rashes\">Impaired/Rashes</Radio>\n                    <Radio value=\"Wound Care\">Wound Care</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p4\" label=\"4. Hygiene/Bathing\">\n                  <Radio.Group>\n                    <Radio value=\"Self\">Self</Radio>\n                    <Radio value=\"Assisted Bath\">Assisted Bath</Radio>\n                    <Radio value=\"Bed Bath\">Bed Bath</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p5\" label=\"5. Oral Care\">\n                  <Radio.Group>\n                    <Radio value=\"Self\">Self</Radio>\n                    <Radio value=\"Assisted\">Assisted</Radio>\n                    <Radio value=\"Totally Dependent\">Totally Dependent</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p6\" label=\"6. Feeding\">\n                  <Radio.Group>\n                    <Radio value=\"Self\">Self</Radio>\n                    <Radio value=\"Assisted\">Assisted</Radio>\n                    <Radio value=\"NGT/PEG\">NGT/PEG</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item name=\"p7\" label=\"7. Bladder\">\n                  <Checkbox.Group>\n                    <Checkbox value=\"Continent\">Continent</Checkbox>\n                    <Checkbox value=\"Incontinent(Diaper)\">\n                      Incontinent(Diaper)\n                    </Checkbox>\n                    <Checkbox value=\"IDC/IMC/SPC\">IDC/IMC/SPC</Checkbox>\n                  </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"p8\" label=\"8. Bowel\">\n                  <Checkbox.Group>\n                    <Checkbox value=\"Bowel Opened \">Bowel Opened</Checkbox>\n                    <Checkbox value=\"Bowel Not Opened\">\n                      Bowel Not Opened\n                    </Checkbox>\n                    <Checkbox value=\"Continent \">Continent</Checkbox>\n                    <Checkbox value=\"Incontinent (Diaper) \">\n                      Incontinent (Diaper)\n                    </Checkbox>\n                    <Checkbox value=\"Colostomy Care \">Colostomy Care</Checkbox>\n                  </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"p9\" label=\"9. Mobility\">\n                  <Checkbox.Group>\n                    <Checkbox value=\"Ambulant\">Ambulant</Checkbox>\n                    <Checkbox value=\"Requires Wheelchair\">\n                      Requires Wheelchair\n                    </Checkbox>\n                    <Checkbox value=\"Requires Walking Aides\">\n                      Requires Walking Aides\n                    </Checkbox>\n                    <Checkbox value=\"Requires 2hrly Turning\">\n                      Requires 2hrly Turning\n                    </Checkbox>\n                  </Checkbox.Group>\n                </Form.Item>\n\n                <Form.Item name=\"p10\" label=\"10. Rest During Night\">\n                  <Radio.Group>\n                    <Radio value=\"Good\">Good</Radio>\n                    <Radio value=\"Restless/Interrupted\">\n                      Restless/Interrupted\n                    </Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p11\" label=\"11. Therapy\">\n                  <Radio.Group>\n                    <Radio value=\"Active Exercise\">Active Exercise</Radio>\n                    <Radio value=\"Passive Exercise\">Passive Exercise</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"p12\" label=\"12. Visited by Relatives/Friend\">\n                  <Radio.Group>\n                    <Radio value=\"Yes\">Yes</Radio>\n                    <Radio value=\"No\">No</Radio>\n                    <Radio value=\"\">NA</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item name=\"r-remarks\" label=\"13. Remarks\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"staff\" label=\"Submitted by\">\n                  <span className=\"ant-form-text\">{staff}</span>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </>\n          )}\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"You may view the submitted data on patient profile page\"\n              extra={[\n                <Button type=\"primary\" onClick={handleNewPatient} key=\"console\">\n                  Select new patient\n                </Button>,\n                <Button key=\"buy\" onClick={handleNewFormSamePatient}>\n                  Submit new form for same patient\n                </Button>,\n              ]}\n            />\n          )}\n\n          {patientError && <p>{patientError}</p>}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default ProgressRecordForm;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Space, Input, Alert } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { getToken } from '../Utils/Common';\n\nfunction Enroll(props) {\n  const [loading, setLoading] = useState(false);\n  const passphrase = useFormInput('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const token = getToken();\n    if (\n      !token &&\n      window.location.pathname !== '/login' &&\n      window.location.pathname !== '/enroll'\n    ) {\n      window.open('/login', '_self');\n      return;\n    }\n  }, []);\n\n  const handleEnroll = () => {\n    setError(null);\n    setLoading(true);\n    axios\n      .get(`${process.env.REACT_APP_KMS_URL}/${passphrase.value}`, {\n        timeout: 1000,\n      })\n      .then((response) => {\n        console.log(response.data);\n        localStorage.setItem('EncryptedSymmmetricKey', response.data);\n        window.open('/login', '_self');\n      })\n      .catch((err) => {\n        setLoading(false);\n        if (err.reponse && err.response.status === 401)\n          setError(err.response.data.message);\n        else setError('Enrollment Key Invalid. Please try again.');\n      });\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <Space direction=\"vertical\" size=\"middle\" style={{ width: '400px' }}>\n        {error ? (\n          <Alert\n            message=\"Login Failed\"\n            description={error}\n            type=\"error\"\n            showIcon\n            style={{ textAlign: 'left' }}\n          />\n        ) : (\n          <></>\n        )}\n        <h4>Enrollment Secret</h4>\n        <p>Contact admin to assist with keying in enrollment secret</p>\n        <Input\n          {...passphrase}\n          size=\"large\"\n          placeholder=\"Enrollment Secret\"\n          type=\"password\"\n          prefix={<UserOutlined />}\n        />\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          shape=\"round\"\n          onClick={handleEnroll}\n          loading={loading}\n          style={{ width: '100%' }}\n        >\n          {loading ? 'Logging In...' : 'Login'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nconst useFormInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return {\n    value,\n    onChange: handleChange,\n  };\n};\n\nexport default Enroll;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader } from 'antd';\nimport { Typography, Table, Space, Button, Input } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { getToken, removeUserSession } from '../../Utils/Common';\n\nfunction UsersModule(props) {\n  const [userData, setUserData] = useState();\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    //populate list of admitted residents\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/users/listStaff`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setUserData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  function onChange(sorter) {\n    console.log('params', sorter);\n  }\n\n  const columns = [\n    {\n      title: 'Username',\n      key: '_id',\n      dataIndex: 'username',\n    },\n    {\n      title: 'Email',\n      key: '_id',\n      dataIndex: 'email',\n    },\n    {\n      title: 'Role',\n      key: '_id',\n      dataIndex: 'role',\n    },\n    {\n      title: 'Date Created',\n      key: '_id',\n      dataIndex: 'creationDate',\n      render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: 100,\n      render: (data) => (\n        <Space size=\"middle\">\n          <a\n            onClick={() => {\n              props.history.push(\n                '/users_module/reset_password/' + data.username\n              );\n            }}\n          >\n            Reset Password\n          </a>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader className=\"site-page-header\" title=\"User Management Module\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          <Button\n            onClick={() => {\n              props.history.push('/users_module/addUser');\n            }}\n          >\n            Add new Staff\n          </Button>\n          <h3>Registed Staff List</h3>\n          <Table columns={columns} dataSource={userData} onChange={onChange} />\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default UsersModule;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader, Form, Select } from 'antd';\nimport { Space, Button, Input, Result, Alert } from 'antd';\nimport axios from 'axios';\nvar owasp = require('owasp-password-strength-test');\nimport { getToken, removeUserSession } from '../../Utils/Common';\n\nowasp.config({\n  allowPassphrases: false,\n  maxLength: 128,\n  minLength: 10,\n  minPhraseLength: 20,\n  minOptionalTestsToPass: 7,\n});\n\nfunction AddUser(props) {\n  const token = getToken();\n  const [submitted, setSubmitted] = useState(false);\n  const [admitError, setAdmitError] = useState();\n  const [passwordSecurity, setPasswordSecurity] = useState();\n\n  const useFormInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = (e) => {\n      setValue(e.target.value);\n      let result = owasp.test(e.target.value);\n      setPasswordSecurity(result.requiredTestErrors);\n    };\n    return {\n      value,\n      onChange: handleChange,\n    };\n  };\n  const password = useFormInput('');\n  const formItemLayout = {\n    labelCol: {\n      span: 30,\n      offset: 0,\n    },\n    wrapperCol: {\n      span: 50,\n    },\n  };\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  function handleBack() {\n    props.history.push('/users_module');\n  }\n\n  const onFinish = (values) => {\n    console.log(passwordSecurity);\n    console.log(passwordSecurity.length);\n    if (passwordSecurity.length !== 0) {\n      alert('Password complexity requirements not met');\n      return;\n    }\n\n    //submit restraints form\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/users/register`,\n        {\n          username: values.username.toUpperCase(),\n          password: values.password,\n          email: values.email,\n          role: values.role,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        setAdmitError(null);\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setAdmitError(error.response.data.message);\n      });\n  };\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Add Staff User\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {admitError && (\n            <>\n              <Alert\n                message=\"Error\"\n                description={admitError}\n                type=\"error\"\n                showIcon\n              />\n            </>\n          )}\n\n          {!submitted && (\n            <div>\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"username\" label=\"Username\" required>\n                  <Input required />\n                </Form.Item>\n                <Form.Item name=\"password\" label=\"Password\" required>\n                  <Input {...password} type=\"password\" required />\n                </Form.Item>\n                <p>{passwordSecurity}</p>\n                <Form.Item name=\"email\" label=\"Email Address\" required>\n                  <Input type=\"email\" required />\n                </Form.Item>\n                <Form.Item\n                  name=\"role\"\n                  label=\"Role\"\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder=\"Select User Role\" allowClear>\n                    <Option value=\"restricted\">Restricted (Staff)</Option>\n                    <Option value=\"full\">Full (Admin)</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"Staff Account Created\"\n              extra={[\n                <Button type=\"primary\" onClick={handleBack} key=\"console\">\n                  Back\n                </Button>,\n              ]}\n            />\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default AddUser;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader, Form, Select } from 'antd';\nimport { Space, Button, Input, Result, Alert } from 'antd';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nvar owasp = require('owasp-password-strength-test');\nimport { getToken, removeUserSession } from '../../Utils/Common';\n\nowasp.config({\n  allowPassphrases: false,\n  maxLength: 128,\n  minLength: 10,\n  minPhraseLength: 20,\n  minOptionalTestsToPass: 7,\n});\n\nfunction ResetPassword(props) {\n  const token = getToken();\n  const { username } = useParams();\n  const [submitted, setSubmitted] = useState(false);\n  const [admitError, setAdmitError] = useState();\n  const [passwordSecurity, setPasswordSecurity] = useState();\n\n  const useFormInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = (e) => {\n      setValue(e.target.value);\n      let result = owasp.test(e.target.value);\n      setPasswordSecurity(result.requiredTestErrors);\n    };\n    return {\n      value,\n      onChange: handleChange,\n    };\n  };\n  const password = useFormInput('');\n  const formItemLayout = {\n    labelCol: {\n      span: 30,\n      offset: 0,\n    },\n    wrapperCol: {\n      span: 50,\n    },\n  };\n\n  useEffect(() => {\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n  }, []);\n\n  function handleBack() {\n    props.history.push('/');\n  }\n\n  const onFinish = (values) => {\n    if (passwordSecurity.length !== 0) {\n      alert('Password complexity requirements not met');\n      return;\n    }\n\n    //submit password reset\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/users/resetPassword`,\n        {\n          username: username,\n          password: values.password,\n        },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        setSubmitted(true);\n        setAdmitError(null);\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n        setAdmitError(error.response.data.message);\n      });\n  };\n\n  return (\n    <>\n      <Button style={{ margin: '10px' }} onClick={handleBack} type=\"default\">\n        Back\n      </Button>\n      <PageHeader className=\"site-page-header\" title=\"Reset Password\" />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {admitError && (\n            <>\n              <Alert\n                message=\"Error\"\n                description={admitError}\n                type=\"error\"\n                showIcon\n              />\n            </>\n          )}\n\n          {!submitted && (\n            <div>\n              <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n              >\n                <Form.Item name=\"password\" label=\"Password\" required>\n                  <Input {...password} type=\"password\" required />\n                </Form.Item>\n                <p>{passwordSecurity}</p>\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          )}\n\n          {submitted && (\n            <Result\n              status=\"success\"\n              title=\"Success!\"\n              subTitle=\"Password reset successful\"\n              extra={[\n                <Button type=\"primary\" onClick={handleBack} key=\"console\">\n                  Back\n                </Button>,\n              ]}\n            />\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default ResetPassword;\n","import React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'antd';\n\nfunction RestraintsCompletionCards(props) {\n  //   console.log(props.pendingSubmission);\n  const allIncompleteRestraints = props.pendingSubmission;\n  const list0000 = allIncompleteRestraints['0000'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list0200 = allIncompleteRestraints['0200'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list0400 = allIncompleteRestraints['0400'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list0600 = allIncompleteRestraints['0600'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list0800 = allIncompleteRestraints['0800'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list1000 = allIncompleteRestraints['1000'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list1200 = allIncompleteRestraints['1200'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list1400 = allIncompleteRestraints['1400'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list1600 = allIncompleteRestraints['1600'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list1800 = allIncompleteRestraints['1800'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list2000 = allIncompleteRestraints['2000'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const list2200 = allIncompleteRestraints['2200'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  return (\n    <>\n      <h3>Pending Submission for today (Restraints)</h3>\n      <div className=\"site-card-wrapper\">\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"0000H\" bordered={false}>\n              {list0000}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"0200H\" bordered={false}>\n              {list0200}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"0400H\" bordered={false}>\n              {list0400}\n            </Card>\n          </Col>\n        </Row>\n        <br></br>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"0600H\" bordered={false}>\n              {list0600}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"0800H\" bordered={false}>\n              {list0800}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"1000H\" bordered={false}>\n              {list1000}\n            </Card>\n          </Col>\n        </Row>{' '}\n        <br></br>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"1200H\" bordered={false}>\n              {list1200}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"1400H\" bordered={false}>\n              {list1400}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"1600H\" bordered={false}>\n              {list1600}\n            </Card>\n          </Col>\n        </Row>\n        <br></br>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"1800H\" bordered={false}>\n              {list1800}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"2000H\" bordered={false}>\n              {list2000}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"2200H\" bordered={false}>\n              {list2200}\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default RestraintsCompletionCards;\n","import React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'antd';\n\nfunction ProgressCompletionCards(props) {\n  // console.log(props.pendingSubmission);\n  const allIncompleteRestraints = props.pendingSubmission;\n  const listND = allIncompleteRestraints['ND'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const listAM = allIncompleteRestraints['AM'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n  const listPM = allIncompleteRestraints['PM'].map((d) => (\n    <li key={d}>\n      <a href={`/patient_profile/${d}`}>{d}</a>\n    </li>\n  ));\n\n  return (\n    <>\n      <h3>Pending Submission for today (Progress Record)</h3>\n      <div className=\"site-card-wrapper\">\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"ND\" bordered={false}>\n              {listND}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"AM\" bordered={false}>\n              {listAM}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"PM\" bordered={false}>\n              {listPM}\n            </Card>\n          </Col>\n        </Row>\n        <br></br>\n      </div>\n    </>\n  );\n}\n\nexport default ProgressCompletionCards;\n","import React, { useEffect, useState } from 'react';\nimport { PageHeader } from 'antd';\nimport { Typography, Table, Space, Button, Input, Modal } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { getToken, removeUserSession } from '../../Utils/Common';\nimport RestraintsCompletionCards from './RestraintsCompletionCards';\nimport ProgressCompletionCards from './ProgressCompletionCards';\n\nfunction CompletionStatusModule(props) {\n  const [restraintsPending, setRestraintsPending] = useState();\n  const [\n    residentsUnderRestraintsMonitoring,\n    setResidentsUnderRestraintsMonitoring,\n  ] = useState();\n  const [progressPending, setProgressPending] = useState();\n  const [\n    residentsUnderProgressMonitoring,\n    setResidentsUnderProgressMonitoring,\n  ] = useState();\n  const [isRModalVisible, setIsRModalVisible] = useState(false);\n  const [isPModalVisible, setIsPModalVisible] = useState(false);\n  const showRModal = () => {\n    setIsRModalVisible(true);\n  };\n  const showPModal = () => {\n    setIsPModalVisible(true);\n  };\n  const handleOk = () => {\n    setIsPModalVisible(false);\n    setIsRModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsPModalVisible(false);\n    setIsRModalVisible(false);\n  };\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      props.history.push('/login');\n      return;\n    }\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`)\n      .then((response) => {})\n      .catch((error) => {\n        removeUserSession();\n      });\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/completion_status/restraintsForm`,\n        { date: datePicker },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        // console.log('restraints status', response.data);\n        setRestraintsPending(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/completion_status/progressForm`,\n        { date: datePicker },\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        // console.log('restraints status', response.data);\n        setProgressPending(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getRestraintsMonitoringStatus`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        console.log('restraints montor', response.data);\n        setResidentsUnderRestraintsMonitoring(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/residents/getProgressMonitoringStatus`,\n        {},\n        { headers: { token: token } }\n      )\n      .then((response) => {\n        console.log('restraints montor', response.data);\n        setResidentsUnderProgressMonitoring(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  let listOfResidentsRestraintsMonitoring =\n    residentsUnderRestraintsMonitoring?.map((d) => (\n      <li key={d['_id']}>{d['bed']}</li>\n    ));\n\n  let listOfResidentsProgressMonitoring = residentsUnderProgressMonitoring?.map(\n    (d) => <li key={d['_id']}>{d['bed']}</li>\n  );\n\n  const [datePicker, setDatepicker] = useState(\n    moment().add(0, 'days').startOf('day')\n  );\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Completion Status Module\"\n      />\n      <div style={{ padding: '30px' }}>\n        <Space direction=\"vertical\" size=\"middle\">\n          {restraintsPending && (\n            <>\n              <RestraintsCompletionCards\n                pendingSubmission={restraintsPending}\n              />\n              <br></br>\n              <Button type=\"primary\" onClick={showRModal}>\n                Residents under Restraints Monitoring\n              </Button>\n              <Modal\n                title=\"Residents under Restraints Monitoring\"\n                visible={isRModalVisible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n              >\n                {residentsUnderRestraintsMonitoring && (\n                  <>{listOfResidentsRestraintsMonitoring}</>\n                )}\n              </Modal>\n            </>\n          )}\n\n          {progressPending && (\n            <>\n              <ProgressCompletionCards pendingSubmission={progressPending} />\n              <br></br>\n              <Button type=\"primary\" onClick={showPModal}>\n                Residents under Progress Monitoring\n              </Button>\n              <Modal\n                title=\"Residents under Progress Monitoring\"\n                visible={isPModalVisible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n              >\n                {residentsUnderProgressMonitoring && (\n                  <>{listOfResidentsProgressMonitoring}</>\n                )}\n              </Modal>\n            </>\n          )}\n        </Space>\n      </div>\n    </>\n  );\n}\n\nexport default CompletionStatusModule;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, useHistory } from 'react-router-dom';\nimport { Layout, Menu, Row, Alert, Col, Avatar } from 'antd';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport {\n  FileTextOutlined,\n  SettingOutlined,\n  BellOutlined,\n} from '@ant-design/icons';\nimport axios from 'axios';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { getToken, getUser, removeUserSession } from './Utils/Common';\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport Login from './Screens/Login';\nimport Dashboard from './Screens/Dashboard';\nimport SelectPatient from './Screens/SelectPatient';\nimport Announcement from './Screens/Announcement';\nimport PatientProfile from './Screens/PatientProfile';\nimport RestraintsForm from './Screens/Forms/RestraintsForm';\nimport ResidentsModuleMainList from './Screens/ResidentsModule/index';\nimport AdmitResident from './Screens/ResidentsModule/AdmitPatient';\nimport ProgressRecordForm from './Screens/Forms/ProgressRecordForm';\nimport Enroll from './Screens/Enroll';\nimport UsersModule from './Screens/UsersModule';\nimport AddUser from './Screens/UsersModule/AddUser';\nimport ResetPassword from './Screens/UsersModule/PasswordReset';\nimport CompletionStatusModule from './Screens/CompletionStatus';\nimport ChangeRequestModal from './Screens/Forms/ChangeRequestModal';\n\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n  const [userObject, setUserObject] = useState({ username: null });\n  const [networkErr, setNetworkErr] = useState(false);\n  const { Header, Footer, Sider, Content } = Layout;\n  const history = useHistory();\n  const user = getUser();\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/networkTest`, { timeout: 3000 })\n      .then((response) => {\n        console.log('IP Whitelisted');\n        setNetworkErr(false);\n      })\n      .catch((error) => {\n        setNetworkErr(true);\n      });\n\n    const token = getToken();\n    if (\n      !token &&\n      window.location.pathname !== '/login' &&\n      window.location.pathname !== '/enroll'\n    ) {\n      window.open('/login', '_self');\n      return;\n    }\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/users/verifyToken?token=${token}`,\n        { timeout: 4000 }\n      )\n      .then((response) => {\n        setAuthLoading(false);\n        setUserObject(user);\n      })\n      .catch((error) => {\n        removeUserSession();\n        setAuthLoading(false);\n      });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Row justify=\"end\">\n            {userObject.username != null && (\n              <>\n                <Col span={1}>\n                  {<Avatar size={40}>{userObject.username}</Avatar>}\n                </Col>\n                <Col span={1}></Col>\n              </>\n            )}\n          </Row>\n        </Header>\n        <Layout>\n          {window.location.pathname !== '/login' ? (\n            <>\n              <Sider\n                breakpoint=\"xxl\"\n                collapsedWidth=\"0\"\n                onBreakpoint={(broken) => {\n                  console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                  console.log(collapsed, type);\n                }}\n              >\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                  <Menu.Item\n                    key=\"1\"\n                    icon={<FileTextOutlined />}\n                    onClick={() => history.push('/select_patient')}\n                  >\n                    Forms\n                  </Menu.Item>\n                  <Menu.Item\n                    key=\"2\"\n                    icon={<SettingOutlined />}\n                    onClick={() => history.push('/residents_module')}\n                  >\n                    Residents Module\n                  </Menu.Item>\n                  {userObject.role === 'full' && (\n                    <Menu.Item\n                      key=\"3\"\n                      icon={<SettingOutlined />}\n                      onClick={() => history.push('/users_module')}\n                    >\n                      Users Module\n                    </Menu.Item>\n                  )}\n                  <Menu.Item\n                    key=\"4\"\n                    icon={<BellOutlined />}\n                    onClick={() => history.push('/announcement')}\n                  >\n                    Announcements\n                  </Menu.Item>\n                  <Menu.Item\n                    key=\"5\"\n                    icon={<BellOutlined />}\n                    onClick={() => history.push('/settings')}\n                  >\n                    Settings\n                  </Menu.Item>\n                  <Menu.Item\n                    key=\"6\"\n                    icon={<BellOutlined />}\n                    onClick={() => history.push('/completion_status')}\n                  >\n                    Completion Status\n                  </Menu.Item>\n                </Menu>\n              </Sider>\n            </>\n          ) : (\n            <></>\n          )}\n          <Layout>\n            {networkErr ? (\n              <Alert\n                message=\"Network Error\"\n                description=\"Please connect to TLR Wifi\"\n                type=\"error\"\n                showIcon\n                style={{ textAlign: 'left' }}\n              />\n            ) : (\n              <></>\n            )}\n            <Content>\n              <div className=\"content\">\n                <Switch>\n                  <PublicRoute path=\"/login\" component={Login} />\n                  <PublicRoute path=\"/enroll\" component={Enroll} />\n                  <PrivateRoute path=\"/settings\" component={Dashboard} />\n                  <PrivateRoute path=\"/announcement\" component={Announcement} />\n                  <PrivateRoute\n                    exact\n                    path={['/select_patient', '/']}\n                    component={SelectPatient}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/patient_profile/:bedNo', '/']}\n                    component={PatientProfile}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/forms/restraints_form/:uuid', '/']}\n                    component={RestraintsForm}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/forms/progress_record_form/:uuid', '/']}\n                    component={ProgressRecordForm}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/forms/changeRequest', '/']}\n                    component={ChangeRequestModal}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/residents_module/', '/']}\n                    component={ResidentsModuleMainList}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/residents_module/admit', '/']}\n                    component={AdmitResident}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/users_module', '/']}\n                    component={UsersModule}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/users_module/addUser', '/']}\n                    component={AddUser}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/users_module/reset_password/:username', '/']}\n                    component={ResetPassword}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={['/completion_status', '/']}\n                    component={CompletionStatusModule}\n                  />\n                </Switch>\n              </div>\n            </Content>\n            <Footer>ePCR</Footer>\n          </Layout>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}